import { TdBadgeProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    color: {
        type: StringConstructor;
        default: string;
    };
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    count: {
        type: PropType<string | number | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: number;
    };
    dot: BooleanConstructor;
    maxCount: {
        type: NumberConstructor;
        default: number;
    };
    offset: {
        type: PropType<(string | number)[] | undefined>;
    };
    shape: {
        type: PropType<"circle" | "round" | "ribbon" | undefined>;
        default: "circle" | "round" | "ribbon" | undefined;
        validator(val: TdBadgeProps['shape']): boolean;
    };
    showZero: BooleanConstructor;
    size: {
        type: PropType<"small" | "medium" | undefined>;
        default: "small" | "medium" | undefined;
        validator(val: TdBadgeProps['size']): boolean;
    };
};
export default _default;
