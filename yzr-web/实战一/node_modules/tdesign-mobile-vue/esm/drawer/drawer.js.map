{"version":3,"file":"drawer.js","sources":["../../src/drawer/drawer.vue","../../src/drawer/drawer.vue?vue&type=template&id=60effec5&lang.js"],"sourcesContent":["<template>\n  <t-popup\n    v-model=\"open\"\n    :placement=\"placement\"\n    :show-overlay=\"showOverlay\"\n    :z-index=\"zIndex\"\n    :close-on-overlay-click=\"closeOnOverlayClick\"\n    @visible-change=\"onVisibleChange\"\n    @close=\"onClose\"\n  >\n    <div :class=\"dSideBarClassName\">\n      <div\n        v-for=\"(item, index) in items\"\n        :key=\"item.title\"\n        :class=\"dSideBarItemClassName\"\n        @click=\"onItemClick(index, item, { e: $event })\"\n      >\n        <span v-if=\"!!item.icon\" :class=\"dSideBarItemIconClassName\"><component :is=\"item.icon\"></component></span>\n        <div :class=\"dSideBarItemTitleClassName\">{{ item.title }}</div>\n      </div>\n    </div>\n  </t-popup>\n</template>\n\n<script lang=\"ts\">\nimport { ref, watch, toRefs, computed, SetupContext, defineComponent } from 'vue';\nimport TPopup from '../popup';\nimport config from '../config';\nimport { useEmitEvent } from '../shared';\nimport DrawerProps from './props';\nimport { DrawerItem, TdDrawerProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-drawer`;\n\nexport default defineComponent({\n  name,\n  components: { TPopup },\n  props: DrawerProps,\n  emits: ['update:visible', 'itemClick', 'overlayClick'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const { visible, items, placement, showOverlay, zIndex, closeOnOverlayClick } = toRefs(props);\n    const open = ref(visible.value || false);\n\n    const dSideBarClassName = computed(() => `${name}__sidebar`);\n    const dSideBarItemClassName = computed(() => `${name}__sidebar-item`);\n    const dSideBarItemIconClassName = computed(() => `${name}__sidebar-item-icon`);\n    const dSideBarItemTitleClassName = computed(() => `${name}__sidebar-item-title`);\n\n    watch(open, () => {\n      emitEvent('update:visible', open.value);\n    });\n\n    watch(visible, () => {\n      open.value = visible.value;\n    });\n\n    const onItemClick: TdDrawerProps['onItemClick'] = (index: number, item: DrawerItem, context: { e: MouseEvent }) => {\n      emitEvent('itemClick', index, item, context);\n    };\n\n    const onVisibleChange = (visible: boolean) => {\n      if (showOverlay.value) {\n        emitEvent('overlayClick', { visible });\n      }\n    };\n\n    const onClose = () => {\n      emitEvent('close', { trigger: 'overlay' });\n    };\n\n    return {\n      items,\n      placement,\n      showOverlay,\n      zIndex,\n      closeOnOverlayClick,\n      open,\n      dSideBarClassName,\n      dSideBarItemClassName,\n      dSideBarItemIconClassName,\n      dSideBarItemTitleClassName,\n      onItemClick,\n      onVisibleChange,\n      onClose,\n    };\n  },\n});\n</script>\n","<template>\n  <t-popup\n    v-model=\"open\"\n    :placement=\"placement\"\n    :show-overlay=\"showOverlay\"\n    :z-index=\"zIndex\"\n    :close-on-overlay-click=\"closeOnOverlayClick\"\n    @visible-change=\"onVisibleChange\"\n    @close=\"onClose\"\n  >\n    <div :class=\"dSideBarClassName\">\n      <div\n        v-for=\"(item, index) in items\"\n        :key=\"item.title\"\n        :class=\"dSideBarItemClassName\"\n        @click=\"onItemClick(index, item, { e: $event })\"\n      >\n        <span v-if=\"!!item.icon\" :class=\"dSideBarItemIconClassName\"><component :is=\"item.icon\"></component></span>\n        <div :class=\"dSideBarItemTitleClassName\">{{ item.title }}</div>\n      </div>\n    </div>\n  </t-popup>\n</template>\n\n<script lang=\"ts\">\nimport { ref, watch, toRefs, computed, SetupContext, defineComponent } from 'vue';\nimport TPopup from '../popup';\nimport config from '../config';\nimport { useEmitEvent } from '../shared';\nimport DrawerProps from './props';\nimport { DrawerItem, TdDrawerProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-drawer`;\n\nexport default defineComponent({\n  name,\n  components: { TPopup },\n  props: DrawerProps,\n  emits: ['update:visible', 'itemClick', 'overlayClick'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const { visible, items, placement, showOverlay, zIndex, closeOnOverlayClick } = toRefs(props);\n    const open = ref(visible.value || false);\n\n    const dSideBarClassName = computed(() => `${name}__sidebar`);\n    const dSideBarItemClassName = computed(() => `${name}__sidebar-item`);\n    const dSideBarItemIconClassName = computed(() => `${name}__sidebar-item-icon`);\n    const dSideBarItemTitleClassName = computed(() => `${name}__sidebar-item-title`);\n\n    watch(open, () => {\n      emitEvent('update:visible', open.value);\n    });\n\n    watch(visible, () => {\n      open.value = visible.value;\n    });\n\n    const onItemClick: TdDrawerProps['onItemClick'] = (index: number, item: DrawerItem, context: { e: MouseEvent }) => {\n      emitEvent('itemClick', index, item, context);\n    };\n\n    const onVisibleChange = (visible: boolean) => {\n      if (showOverlay.value) {\n        emitEvent('overlayClick', { visible });\n      }\n    };\n\n    const onClose = () => {\n      emitEvent('close', { trigger: 'overlay' });\n    };\n\n    return {\n      items,\n      placement,\n      showOverlay,\n      zIndex,\n      closeOnOverlayClick,\n      open,\n      dSideBarClassName,\n      dSideBarItemClassName,\n      dSideBarItemIconClassName,\n      dSideBarItemTitleClassName,\n      onItemClick,\n      onVisibleChange,\n      onClose,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TPopup","props","DrawerProps","emits","setup","context","emitEvent","useEmitEvent","emit","toRefs","visible","items","placement","showOverlay","zIndex","closeOnOverlayClick","open","ref","value","dSideBarClassName","computed","dSideBarItemClassName","dSideBarItemIconClassName","dSideBarItemTitleClassName","watch","onItemClick","index","item","onVisibleChange","onClose","trigger","_createBlock","_component_t_popup","_ctx","$event","_createElementVNode","class","_openBlock","_createElementBlock","_Fragment","_renderList","key","title","onClick","icon","_resolveDynamicComponent","_toDisplayString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAQA,SAAWC,MAAA,CAAXD;AACR,IAAME,OAAUF,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,EAAA,SAAA,CAAA,CAAA;AAEhB,aAAeG,eAAgB,CAAA;AAC7BD,EAAAA,IAAA,EAAAA,IAAA;AACAE,EAAAA,UAAA,EAAY;AAAEC,IAAAA,MAAO,EAAPA,MAAAA;GAAO;AACrBC,EAAAA,KAAO,EAAAC,WAAA;AACPC,EAAAA,KAAO,EAAA,CAAC,gBAAkB,EAAA,WAAA,EAAa,cAAc,CAAA;AACrDC,EAAAA,KAAA,EAAMH,SAAAA,KAAAA,CAAAA,OAAOI,OAAuB,EAAA;IAClC,IAAMC,SAAY,GAAAC,YAAA,CAAaN,KAAO,EAAAI,OAAA,CAAQG,IAAI,CAAA,CAAA;IAC5C,IAA0EC,OAAAA,GAAAA,MAAA,CAAOR,KAAK,CAAA;AAApFS,MAAAA,kBAAAA;AAASC,MAAAA,KAAO,WAAPA,KAAO;AAAAC,MAAAA,SAAA,WAAAA,SAAA;AAAWC,MAAAA,sBAAAA;AAAaC,MAAAA,MAAQ,WAARA,MAAQ;AAAAC,MAAAA,mBAAA,WAAAA,mBAAA,CAAA;IACxD,IAAMC,IAAO,GAAAC,GAAA,CAAIP,OAAQ,CAAAQ,KAAA,IAAS,KAAK,CAAA,CAAA;IAEvC,IAAMC,iBAAoB,GAAAC,QAAA,CAAS,YAAA;AAAA,MAAA,OAAA,EAAA,CAAA,MAAA,CAASvB,IAAe,EAAA,WAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAC3D,IAAMwB,qBAAwB,GAAAD,QAAA,CAAS,YAAA;AAAA,MAAA,OAAA,EAAA,CAAA,MAAA,CAASvB,IAAoB,EAAA,gBAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IACpE,IAAMyB,yBAA4B,GAAAF,QAAA,CAAS,YAAA;AAAA,MAAA,OAAA,EAAA,CAAA,MAAA,CAASvB,IAAyB,EAAA,qBAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAC7E,IAAM0B,0BAA6B,GAAAH,QAAA,CAAS,YAAA;AAAA,MAAA,OAAA,EAAA,CAAA,MAAA,CAASvB,IAA0B,EAAA,sBAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAE/E2B,KAAA,CAAMR,MAAM,YAAM;AACNV,MAAAA,SAAA,CAAA,gBAAA,EAAkBU,KAAKE,KAAK,CAAA,CAAA;AACxC,KAAC,CAAA,CAAA;IAEDM,KAAA,CAAMd,SAAS,YAAM;AACnBM,MAAAA,IAAA,CAAKE,QAAQR,OAAQ,CAAAQ,KAAA,CAAA;AACvB,KAAC,CAAA,CAAA;IAED,IAAMO,WAA4C,GAAA,SAA5CA,WAA4C,CAACC,KAAe,EAAAC,IAAA,EAAkBtB,QAA+B,EAAA;MACvGC,SAAA,CAAA,WAAA,EAAaoB,KAAO,EAAAC,IAAA,EAAMtB,QAAO,CAAA,CAAA;KAC7C,CAAA;AAEM,IAAA,IAAAuB,eAAA,GAAkB,SAAlBA,eAAA,CAAmBlB,QAAqB,EAAA;MAC5C,IAAIG,YAAYK,KAAO,EAAA;QACrBZ,SAAA,CAAU,cAAgB,EAAA;AAAEI,UAAAA,OAAAA,EAAAA,QAAAA;AAAQ,SAAC,CAAA,CAAA;AACvC,OAAA;KACF,CAAA;AAEA,IAAA,IAAMmB,UAAU,SAAVA,UAAgB;MACpBvB,SAAA,CAAU,OAAS,EAAA;AAAEwB,QAAAA,OAAS,EAAA,SAAA;AAAU,OAAC,CAAA,CAAA;KAC3C,CAAA;IAEO,OAAA;AACLnB,MAAAA,KAAA,EAAAA,KAAA;AACAC,MAAAA,SAAA,EAAAA,SAAA;AACAC,MAAAA,WAAA,EAAAA,WAAA;AACAC,MAAAA,MAAA,EAAAA,MAAA;AACAC,MAAAA,mBAAA,EAAAA,mBAAA;AACAC,MAAAA,IAAA,EAAAA,IAAA;AACAG,MAAAA,iBAAA,EAAAA,iBAAA;AACAE,MAAAA,qBAAA,EAAAA,qBAAA;AACAC,MAAAA,yBAAA,EAAAA,yBAAA;AACAC,MAAAA,0BAAA,EAAAA,0BAAA;AACAE,MAAAA,WAAA,EAAAA,WAAA;AACAG,MAAAA,eAAA,EAAAA,eAAA;AACAC,MAAAA,OAAA,EAAAA,OAAAA;KACF,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;;oBCvFC,EAAAE,WAAA,CAoBSC,kBAAA,EAAA;gBAnBEC,IAAI,CAAAjB,IAAA;;aAAJiB,KAAIjB,IAAA,GAAAkB,MAAA,CAAA;KAAA,CAAA;IACZtB,WAAWqB,IAAS,CAAArB,SAAA;IACpB,gBAAcqB,IAAW,CAAApB,WAAA;IACzB,WAASoB,IAAM,CAAAnB,MAAA;IACf,0BAAwBmB,IAAmB,CAAAlB,mBAAA;IAC3Ca,iBAAgBK,IAAe,CAAAL,eAAA;IAC/BC,SAAOI,IAAO,CAAAJ,OAAAA;;qBAEf,YAAA;AAAA,MAAA,OAUK,CAVLM,mBAUK,KAAA,EAAA;AAVCC,QAAAA,KAAA,gBAAO,CAAAH,IAAA,CAAiBd,iBAAA,CAAA;WAC5BkB,SAAA,CAAA,IAAA,CAAA,EAAAC,kBAQK,CAAAC,QAAA,EAPqB,IAAA,EAAAC,UAAA,CAAAP,IAAA,CAAAtB,KAAA,EAAhB,UAAAgB,IAAA,EAAMD,KAAK,EAAA;0BADrB,EAAAY,kBAAA,CAQK,KAAA,EAAA;UANFG,KAAKd,IAAK,CAAAe,KAAA;AACVN,UAAAA,KAAA,gBAAO,CAAAH,IAAA,CAAqBZ,qBAAA,CAAA;UAC5BsB,OAAA;mBAAOV,IAAW,CAAAR,WAAA,CAACC,OAAOC;eAAW,EAAAO,MAAAA;AAAK,aAAA,CAAA,CAAA;AAAA,WAAA;YAE7B,CAAA,CAAAP,IAAA,CAAKiB,qBAAnBN,mBAAyG,MAAA,EAAA;;AAA/EF,UAAAA,KAAA,gBAAO,CAAAH,IAAA,CAAyBX,yBAAA,CAAA;wBAAE,EAAAS,WAAA,CAAuCc,uBAAvB,CAAAlB,IAAA,CAAKiB,IAAI,CAAA,CAAA,wCACrFT,mBAA8D,KAAA,EAAA;AAAxDC,UAAAA,KAAA,gBAAO,CAAAH,IAAA,CAA0BV,0BAAA,CAAA;AAAK,SAAA,EAAAuB,eAAA,CAAAnB,IAAK,CAAAe,KAAI,GAAA,CAAA,CAAA;;;;;;;;;;;"}