/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import _typeof from '@babel/runtime/helpers/typeof';
import { toRefs, ref, watch, onMounted } from 'vue';
import '../../shared/index.js';
import { useChildSlots } from '../../shared/useChildSlots/index.js';
import '../../shared/functions.js';
import '../../shared/util.js';
import '../../shared/component.js';
import '../../shared/constants.js';
import '../../config.js';
import '../../shared/render.js';
import 'lodash/camelCase';
import '../../shared/render-tnode.js';
import '../../shared/useToggle/index.js';
import '../../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../../shared/useCountDown/utils.js';
import '../../shared/useDefault/index.js';
import '../../shared/useEmitEvent/index.js';
import '../../shared/useVModel/index.js';
import '../../shared/useTouch/index.js';
import '../../shared/useScrollParent/index.js';
import '../../shared/useExpose/index.js';
import '@babel/runtime/helpers/toConsumableArray';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getOptionListBySlots = function getOptionListBySlots(nodes) {
  var arr = [];
  nodes === null || nodes === void 0 ? void 0 : nodes.forEach(function (node) {
    var option = node.props;
    if ((option === null || option === void 0 ? void 0 : option["check-all"]) === "" || (option === null || option === void 0 ? void 0 : option["check-all"]) === true) {
      option.checkAll = true;
    }
    option && arr.push(option);
  });
  return arr;
};
var getOptions = function getOptions(props, slots) {
  var _toRefs = toRefs(props),
    options = _toRefs.options;
  var optionList = ref([]);
  watch(options, function (options2) {
    if (!options2) return [];
    optionList.value = options2.map(function (item) {
      var r = {};
      if (_typeof(item) !== "object") {
        r = {
          label: String(item),
          value: item
        };
      } else {
        r = _objectSpread({}, item);
        r.disabled = r.disabled === void 0 ? props.disabled : r.disabled;
      }
      return r;
    });
  }, {
    immediate: true
  });
  onMounted(function () {
    var nodes = slots.default && slots.default();
    if (nodes !== void 0) {
      optionList.value = getOptionListBySlots(useChildSlots("t-checkbox"));
    }
  });
  return optionList;
};

export { getOptionListBySlots, getOptions };
//# sourceMappingURL=getOptions.js.map
