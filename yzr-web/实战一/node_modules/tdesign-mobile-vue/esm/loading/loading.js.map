{"version":3,"file":"loading.js","sources":["../../src/loading/loading.vue","../../src/loading/loading.vue?vue&type=template&id=3013b704&lang.js"],"sourcesContent":["<template>\n  <div :class=\"rootClass\" :style=\"rootStyle\">\n    <div v-if=\"theme === 'bar' && progress && ![0, 1].includes(progress)\" :class=\"`${name}__bar`\" :style=\"barStyle\">\n      <div :class=\"`${name}__shadow`\"></div>\n    </div>\n    <template v-else-if=\"theme !== 'bar'\">\n      <template v-if=\"indicator && realLoading\">\n        <gradient-icon v-if=\"theme === 'circular'\" :style=\"animationStyle\" />\n        <spinner-icon v-else-if=\"theme === 'spinner'\" :style=\"animationStyle\" />\n        <div v-else-if=\"theme === 'dots'\" :class=\"`${name}__dots`\" :style=\"animationStyle\" />\n      </template>\n      <span v-if=\"textContent && realLoading\" :class=\"textClass\">\n        <t-node :content=\"textContent\"></t-node>\n      </span>\n      <t-node :content=\"defaultContent\"></t-node>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, computed, ref, watch, toRefs } from 'vue';\nimport GradientIcon from './icon/gradient.vue';\nimport SpinnerIcon from './icon/spinner.vue';\nimport { renderTNode, TNode, renderContent } from '../shared';\nimport CLASSNAMES from '../shared/constants';\n\nimport config from '../config';\nimport LoadingProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-loading`;\n\nconst toBarPerc = (n?: number) => {\n  if (!n || n <= 0) return -100;\n  if (n > 1) return 0;\n  return (-1 + n) * 100;\n};\n\nexport default defineComponent({\n  name,\n  components: {\n    GradientIcon,\n    SpinnerIcon,\n    TNode,\n  },\n  props: LoadingProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const delayShowLoading = ref(false);\n    const { pause } = toRefs(props);\n\n    const countDelay = () => {\n      delayShowLoading.value = false;\n      const timer = setTimeout(() => {\n        delayShowLoading.value = true;\n        clearTimeout(timer);\n      }, props.delay);\n    };\n\n    const realLoading = computed(() => (!props.delay || delayShowLoading.value) && props.loading);\n\n    watch(\n      () => props.loading,\n      (value) => {\n        if (value) {\n          props.delay && countDelay();\n        }\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    const rootClass = computed(() => [\n      name,\n      { [`${name}--vertical`]: props.layout === 'vertical' },\n      { [`${name}--bar`]: props.theme === 'bar' },\n      props.size ? CLASSNAMES.SIZE[props.size] : '',\n    ]);\n\n    const textClass = computed(() => [\n      `${name}__text`,\n      { [`${name}__text--error`]: props.theme === 'error' },\n      {\n        [`${name}__text--only`]: !props.indicator || props.theme === 'error',\n      },\n    ]);\n\n    const textContent = computed(() => {\n      if (props.theme === 'error') {\n        return '加载失败';\n      }\n      return renderTNode(internalInstance, 'text');\n    });\n\n    const defaultContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n\n    const rootStyle = computed(() => {\n      if (props.inheritColor) {\n        return 'color: inherit';\n      }\n      return '';\n    });\n    const barStyle = computed(() => ({\n      transform: `translate3d(${toBarPerc(props.progress)}%, 0px, 0px)`,\n    }));\n    const animationStyle = computed(() => {\n      const ans: Record<string, any> = {};\n      if (props.pause) {\n        ans['animation-play-state'] = 'paused';\n      }\n      if (props.reverse) {\n        ans['animation-direction'] = 'reverse';\n      }\n      if (props.duration) {\n        ans['animation-duration'] = `${props.duration}ms`;\n      }\n      return ans;\n    });\n\n    return {\n      name,\n      pause,\n      rootClass,\n      textClass,\n      textContent,\n      defaultContent,\n      rootStyle,\n      barStyle,\n      animationStyle,\n      realLoading,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"rootClass\" :style=\"rootStyle\">\n    <div v-if=\"theme === 'bar' && progress && ![0, 1].includes(progress)\" :class=\"`${name}__bar`\" :style=\"barStyle\">\n      <div :class=\"`${name}__shadow`\"></div>\n    </div>\n    <template v-else-if=\"theme !== 'bar'\">\n      <template v-if=\"indicator && realLoading\">\n        <gradient-icon v-if=\"theme === 'circular'\" :style=\"animationStyle\" />\n        <spinner-icon v-else-if=\"theme === 'spinner'\" :style=\"animationStyle\" />\n        <div v-else-if=\"theme === 'dots'\" :class=\"`${name}__dots`\" :style=\"animationStyle\" />\n      </template>\n      <span v-if=\"textContent && realLoading\" :class=\"textClass\">\n        <t-node :content=\"textContent\"></t-node>\n      </span>\n      <t-node :content=\"defaultContent\"></t-node>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, computed, ref, watch, toRefs } from 'vue';\nimport GradientIcon from './icon/gradient.vue';\nimport SpinnerIcon from './icon/spinner.vue';\nimport { renderTNode, TNode, renderContent } from '../shared';\nimport CLASSNAMES from '../shared/constants';\n\nimport config from '../config';\nimport LoadingProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-loading`;\n\nconst toBarPerc = (n?: number) => {\n  if (!n || n <= 0) return -100;\n  if (n > 1) return 0;\n  return (-1 + n) * 100;\n};\n\nexport default defineComponent({\n  name,\n  components: {\n    GradientIcon,\n    SpinnerIcon,\n    TNode,\n  },\n  props: LoadingProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const delayShowLoading = ref(false);\n    const { pause } = toRefs(props);\n\n    const countDelay = () => {\n      delayShowLoading.value = false;\n      const timer = setTimeout(() => {\n        delayShowLoading.value = true;\n        clearTimeout(timer);\n      }, props.delay);\n    };\n\n    const realLoading = computed(() => (!props.delay || delayShowLoading.value) && props.loading);\n\n    watch(\n      () => props.loading,\n      (value) => {\n        if (value) {\n          props.delay && countDelay();\n        }\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    const rootClass = computed(() => [\n      name,\n      { [`${name}--vertical`]: props.layout === 'vertical' },\n      { [`${name}--bar`]: props.theme === 'bar' },\n      props.size ? CLASSNAMES.SIZE[props.size] : '',\n    ]);\n\n    const textClass = computed(() => [\n      `${name}__text`,\n      { [`${name}__text--error`]: props.theme === 'error' },\n      {\n        [`${name}__text--only`]: !props.indicator || props.theme === 'error',\n      },\n    ]);\n\n    const textContent = computed(() => {\n      if (props.theme === 'error') {\n        return '加载失败';\n      }\n      return renderTNode(internalInstance, 'text');\n    });\n\n    const defaultContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n\n    const rootStyle = computed(() => {\n      if (props.inheritColor) {\n        return 'color: inherit';\n      }\n      return '';\n    });\n    const barStyle = computed(() => ({\n      transform: `translate3d(${toBarPerc(props.progress)}%, 0px, 0px)`,\n    }));\n    const animationStyle = computed(() => {\n      const ans: Record<string, any> = {};\n      if (props.pause) {\n        ans['animation-play-state'] = 'paused';\n      }\n      if (props.reverse) {\n        ans['animation-direction'] = 'reverse';\n      }\n      if (props.duration) {\n        ans['animation-duration'] = `${props.duration}ms`;\n      }\n      return ans;\n    });\n\n    return {\n      name,\n      pause,\n      rootClass,\n      textClass,\n      textContent,\n      defaultContent,\n      rootStyle,\n      barStyle,\n      animationStyle,\n      realLoading,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","toBarPerc","n","defineComponent","components","GradientIcon","SpinnerIcon","TNode","props","LoadingProps","setup","internalInstance","getCurrentInstance","delayShowLoading","ref","toRefs","pause","countDelay","value","timer","setTimeout","clearTimeout","delay","realLoading","computed","loading","watch","immediate","rootClass","layout","theme","size","CLASSNAMES","SIZE","textClass","indicator","textContent","renderTNode","defaultContent","renderContent","rootStyle","inheritColor","barStyle","transform","progress","animationStyle","ans","reverse","duration","_createElementBlock","class","_ctx","style","includes","_createElementVNode","_Fragment","key","_createBlock","_component_gradient_icon","_component_spinner_icon","_createVNode","_component_t_node","content"],"mappings":"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"}