declare const Tag: import("vue").DefineComponent<{
    closable: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | number | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: undefined;
    };
    maxWidth: {
        type: import("vue").PropType<string | number | undefined>;
    };
    shape: {
        type: import("vue").PropType<"mark" | "round" | "square" | undefined>;
        default: "mark" | "round" | "square" | undefined;
        validator(val: "mark" | "round" | "square" | undefined): boolean;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum | undefined>;
        default: import("../common").SizeEnum | undefined;
        validator(val: import("../common").SizeEnum | undefined): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "primary" | "danger" | "success" | "warning" | undefined>;
        default: "default" | "primary" | "danger" | "success" | "warning" | undefined;
        validator(val: "default" | "primary" | "danger" | "success" | "warning" | undefined): boolean;
    };
    variant: {
        type: import("vue").PropType<"outline" | "dark" | "light" | "light-outline" | undefined>;
        default: "outline" | "dark" | "light" | "light-outline" | undefined;
        validator(val: "outline" | "dark" | "light" | "light-outline" | undefined): boolean;
    };
    onClick: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onClose: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
}, {
    baseClass: string;
    classes: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    tagStyle: import("vue").ComputedRef<{
        maxWidth: string;
    } | {
        maxWidth?: undefined;
    }>;
    onClickClose: (e: MouseEvent) => void;
    handleClick: (e: MouseEvent) => void;
    iconContent: import("vue").ComputedRef<any>;
    tagContent: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "click" | "close", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    closable: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | number | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: undefined;
    };
    maxWidth: {
        type: import("vue").PropType<string | number | undefined>;
    };
    shape: {
        type: import("vue").PropType<"mark" | "round" | "square" | undefined>;
        default: "mark" | "round" | "square" | undefined;
        validator(val: "mark" | "round" | "square" | undefined): boolean;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum | undefined>;
        default: import("../common").SizeEnum | undefined;
        validator(val: import("../common").SizeEnum | undefined): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "primary" | "danger" | "success" | "warning" | undefined>;
        default: "default" | "primary" | "danger" | "success" | "warning" | undefined;
        validator(val: "default" | "primary" | "danger" | "success" | "warning" | undefined): boolean;
    };
    variant: {
        type: import("vue").PropType<"outline" | "dark" | "light" | "light-outline" | undefined>;
        default: "outline" | "dark" | "light" | "light-outline" | undefined;
        validator(val: "outline" | "dark" | "light" | "light-outline" | undefined): boolean;
    };
    onClick: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onClose: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
}>>, {
    icon: ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined;
    theme: "default" | "primary" | "danger" | "success" | "warning" | undefined;
    shape: "mark" | "round" | "square" | undefined;
    size: import("../common").SizeEnum | undefined;
    disabled: boolean;
    variant: "outline" | "dark" | "light" | "light-outline" | undefined;
    closable: boolean;
}>;
export default Tag;
