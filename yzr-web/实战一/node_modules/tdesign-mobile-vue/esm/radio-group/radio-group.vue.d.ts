import { RadioOption, RadioOptionObj, RadioValue } from '../radio/type';
declare const _default: import("vue").DefineComponent<{
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[] | undefined>;
    };
    value: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: boolean;
    };
    onChange: import("vue").PropType<((value: RadioValue, context: {
        e: Event;
    }) => void) | undefined>;
}, {
    componentName: string;
    groupOptions: import("vue").ComputedRef<RadioOptionObj[] | undefined>;
    value: import("vue").Ref<RadioValue | undefined>;
    modelValue: import("vue").Ref<RadioValue | undefined>;
    name: import("vue").Ref<string>;
    disabled: import("vue").Ref<boolean | undefined>;
    options: import("vue").Ref<RadioOption[] | undefined>;
    defaultValue: import("vue").Ref<RadioValue | undefined>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "update:value" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    options: {
        type: import("vue").PropType<RadioOption[] | undefined>;
    };
    value: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: boolean;
    };
    onChange: import("vue").PropType<((value: RadioValue, context: {
        e: Event;
    }) => void) | undefined>;
}>>, {
    value: RadioValue | undefined;
    modelValue: RadioValue | undefined;
    name: string;
    disabled: boolean;
    defaultValue: RadioValue | undefined;
}>;
export default _default;
