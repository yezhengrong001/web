import { SwitchValue } from './type';
declare const _default: import("vue").DefineComponent<{
    colors: {
        type: import("vue").PropType<string[] | undefined>;
    };
    customValue: {
        type: import("vue").PropType<SwitchValue[] | undefined>;
    };
    disabled: BooleanConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: import("vue").PropType<SwitchValue | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<SwitchValue | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<SwitchValue | undefined>;
        default: undefined;
    };
    onChange: import("vue").PropType<((value: SwitchValue) => void) | undefined>;
}, {
    handleToggle: (event: Event) => void;
    label: import("vue").Ref<string>;
    value: import("vue").Ref<SwitchValue | undefined>;
    modelValue: import("vue").Ref<SwitchValue | undefined>;
    disabled: import("vue").Ref<boolean>;
    defaultValue: import("vue").Ref<SwitchValue | undefined>;
    colors: import("vue").Ref<string[] | undefined>;
    customValue: import("vue").Ref<SwitchValue[] | undefined>;
    name: string;
    classes: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    backgroundColor: import("vue").ComputedRef<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "update:value" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    colors: {
        type: import("vue").PropType<string[] | undefined>;
    };
    customValue: {
        type: import("vue").PropType<SwitchValue[] | undefined>;
    };
    disabled: BooleanConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: import("vue").PropType<SwitchValue | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<SwitchValue | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<SwitchValue | undefined>;
        default: undefined;
    };
    onChange: import("vue").PropType<((value: SwitchValue) => void) | undefined>;
}>>, {
    label: string;
    value: SwitchValue | undefined;
    modelValue: SwitchValue | undefined;
    disabled: boolean;
    defaultValue: SwitchValue | undefined;
}>;
export default _default;
