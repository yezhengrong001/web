{"version":3,"file":"slider.js","sources":["../../src/slider/slider.vue","../../src/slider/slider.vue?vue&type=template&id=0027e9b8&lang.js"],"sourcesContent":["<template>\n  <div ref=\"rootRef\" :class=\"classes\">\n    <div v-if=\"showExtremeValue\" :class=\"`${name}-wrap__value--left`\">{{ min }}</div>\n    <div :class=\"`${name}`\" @click=\"onClick\">\n      <!-- 总长度 -->\n      <div ref=\"barRef\" :class=\"`${name}__bar`\"></div>\n      <!-- 滑块长度 -->\n      <div :class=\"`${name}__track`\" :style=\"trackStyle\"></div>\n      <!-- 滑块操作 -->\n      <div\n        v-for=\"(item, index) in dots\"\n        :key=\"index + 1\"\n        :class=\"handleClass\"\n        :style=\"`left:${getPercentage(item)}%`\"\n        @touchstart=\"onTouchStart($event, item)\"\n        @touchmove=\"onTouchMove($event, index)\"\n        @touchend=\"onTouchEnd($event, index)\"\n      ></div>\n      <!-- 刻度内容 -->\n      <div v-if=\"marksData\" :class=\"`${name}__mark`\">\n        <div\n          v-for=\"(v, k) in marksData\"\n          :key=\"k\"\n          :class=\"`${name}__mark-text t-is-${value && value > v[0] ? 'active' : ''}`\"\n          :style=\"`left: ${getPercentage(v[0])}%`\"\n        >\n          {{ typeof v[1] === 'function' ? v[1](v[0]) : v[1] }}\n        </div>\n      </div>\n    </div>\n    <div v-if=\"labelContent\" :class=\"`${name}-wrap__value`\">\n      <t-node :content=\"labelContent\"></t-node>\n    </div>\n    <div v-if=\"showExtremeValue\" :class=\"`${name}-wrap__value`\">{{ max }}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, toRefs, computed, SetupContext, reactive, defineComponent, getCurrentInstance } from 'vue';\nimport config from '../config';\nimport props from './props';\nimport { useVModel } from '../shared/useVModel';\nimport { renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-slider`;\nconst { isArray } = Array;\n\nexport interface TouchData {\n  startValue: number;\n  newValue: number;\n  startX: number;\n  deltaX: number;\n  offsetX: number;\n}\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props,\n  emits: ['drag-start', 'drag-end', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const rootRef = ref<HTMLElement | null>(null);\n    const barRef = ref<HTMLElement | null>(null);\n    const defaultValue = props.defaultValue || props.min;\n    const { value, modelValue, max, min } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, defaultValue, props.onChange);\n    const internalInstance = getCurrentInstance();\n    const labelContent = computed(\n      () =>\n        !props.range &&\n        props.label &&\n        (typeof renderTNode(internalInstance, 'label') === 'object'\n          ? renderTNode(internalInstance, 'label')\n          : `${innerValue.value}`),\n    );\n\n    const isRange = computed(() => {\n      return props.range && isArray(innerValue.value) && innerValue.value.length === 2;\n    });\n    const dots = computed(() => {\n      if (isRange.value) return innerValue.value;\n\n      if (typeof innerValue.value === 'number') return [innerValue.value];\n      return [];\n    });\n\n    const classes = computed(() => [\n      `${name}-wrap`,\n      {\n        [`${prefix}-is-disabled`]: props.disabled,\n        [`${prefix}-is-mark`]: props.marks,\n        [`${prefix}-is-value`]: props.showExtremeValue,\n      },\n    ]);\n    const handleClass = computed(() => [`${name}__handle`]);\n    const marksData = computed(() => {\n      const sorter = (a: number[], b: number[]) => a[0] - b[0];\n      if (!props.range && props.marks) {\n        if (isArray(props.marks)) {\n          return props.marks.map((val: number) => [val, val]).sort(sorter);\n        }\n        return Object.entries(props.marks)\n          .map(([key, value]) => [parseInt(key, 10), value])\n          .sort(sorter);\n      }\n      return [];\n    });\n\n    const dragStatus = ref<string>('');\n    const touchData = reactive<TouchData>({\n      startValue: 0,\n      newValue: 0,\n      startX: 0,\n      deltaX: 0,\n      offsetX: 0,\n    });\n\n    function onTouchStart(event: TouchEvent, value: number) {\n      if (props.disabled) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      touchData.deltaX = 0;\n      touchData.offsetX = 0;\n      touchData.startX = event.touches[0].clientX;\n      touchData.startValue = format(value);\n      dragStatus.value = 'start';\n    }\n\n    function onTouchMove(event: TouchEvent, index: number) {\n      if (props.disabled) return;\n      if (!barRef.value) return;\n\n      event.stopPropagation();\n      event.preventDefault();\n      if (dragStatus.value === 'start') {\n        context.emit('drag-start');\n      }\n      const touch = event.touches[0];\n      touchData.deltaX = touch.clientX - touchData.startX;\n      touchData.offsetX = Math.abs(touchData.deltaX);\n      dragStatus.value = 'dragging';\n\n      const rect = barRef.value.getBoundingClientRect();\n      const delta = touchData.deltaX;\n      const total = rect.width;\n      const diff = (delta / total) * (props.max - props.min);\n\n      touchData.newValue = touchData.startValue + diff;\n      updateValue(touchData.newValue, index);\n    }\n\n    function onTouchEnd(event: TouchEvent, index: number) {\n      if (props.disabled) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (dragStatus.value === 'dragging') {\n        updateValue(touchData.newValue, index, true);\n        context.emit('drag-end');\n      }\n\n      dragStatus.value = '';\n    }\n\n    function onClick(event: MouseEvent) {\n      event.stopPropagation();\n\n      if (props.disabled) return;\n      if (!barRef.value) return;\n\n      const rect = barRef.value.getBoundingClientRect();\n      const delta = event.clientX - rect.left;\n      const total = rect.width;\n      const current = +props.min + (delta / total) * (props.max - props.min);\n\n      let index = 0;\n      if (props.range && innerValue.value) {\n        if (Math.abs(current - innerValue.value[0]) > Math.abs(current - innerValue.value[1])) {\n          index = 1;\n        }\n      }\n\n      touchData.startValue = innerValue.value?.[index];\n      updateValue(current, index, true);\n    }\n\n    function format(value: number): number {\n      let current = value;\n      if (!props.range && props.marks) {\n        if (marksData?.value?.length) {\n          let [min] = marksData.value[0];\n          marksData.value.forEach(([marksDataItemValue]) => {\n            if (Math.abs(marksDataItemValue - value) < Math.abs(min - value)) {\n              min = marksDataItemValue;\n            }\n          });\n          current = min;\n        }\n      }\n      return Math.round(Math.max(props.min, Math.min(current, props.max)) / props.step) * props.step;\n    }\n\n    function updateValue(newValue: number, index: number, end = false) {\n      const formatValue = format(newValue);\n      if (props.range && Array.isArray(innerValue.value)) {\n        const tmpValue = [...innerValue.value];\n        tmpValue[index] = formatValue;\n\n        if (end && formatValue !== touchData.startValue) {\n          tmpValue.sort((a, b) => a - b);\n          setInnerValue(tmpValue);\n        } else if (formatValue !== touchData.startValue) {\n          setInnerValue(tmpValue);\n        }\n      } else if (formatValue !== touchData.startValue) {\n        setInnerValue(formatValue);\n      }\n    }\n\n    const getPercentage = (value: number | undefined): number =>\n      ((value ? value - props.min : 0) / (props.max - props.min)) * 100;\n    const trackStyle = computed(() => {\n      if (props.range && isArray(innerValue.value)) {\n        return {\n          left: `${getPercentage(Math.min(innerValue.value[0], innerValue.value[1]))}%`,\n          width: `${getPercentage(Math.abs(innerValue.value[1] - innerValue.value[0]))}%`,\n        };\n      }\n      if (!isArray(innerValue.value)) {\n        return {\n          width: `${getPercentage(innerValue.value)}%`,\n        };\n      }\n      return {};\n    });\n\n    return {\n      max,\n      min,\n      name: ref(name),\n      marksData,\n      rootRef,\n      barRef,\n      dots,\n      value: innerValue,\n      labelContent,\n      classes,\n      handleClass,\n      trackStyle,\n      getPercentage,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n      onClick,\n    };\n  },\n});\n</script>\n","<template>\n  <div ref=\"rootRef\" :class=\"classes\">\n    <div v-if=\"showExtremeValue\" :class=\"`${name}-wrap__value--left`\">{{ min }}</div>\n    <div :class=\"`${name}`\" @click=\"onClick\">\n      <!-- 总长度 -->\n      <div ref=\"barRef\" :class=\"`${name}__bar`\"></div>\n      <!-- 滑块长度 -->\n      <div :class=\"`${name}__track`\" :style=\"trackStyle\"></div>\n      <!-- 滑块操作 -->\n      <div\n        v-for=\"(item, index) in dots\"\n        :key=\"index + 1\"\n        :class=\"handleClass\"\n        :style=\"`left:${getPercentage(item)}%`\"\n        @touchstart=\"onTouchStart($event, item)\"\n        @touchmove=\"onTouchMove($event, index)\"\n        @touchend=\"onTouchEnd($event, index)\"\n      ></div>\n      <!-- 刻度内容 -->\n      <div v-if=\"marksData\" :class=\"`${name}__mark`\">\n        <div\n          v-for=\"(v, k) in marksData\"\n          :key=\"k\"\n          :class=\"`${name}__mark-text t-is-${value && value > v[0] ? 'active' : ''}`\"\n          :style=\"`left: ${getPercentage(v[0])}%`\"\n        >\n          {{ typeof v[1] === 'function' ? v[1](v[0]) : v[1] }}\n        </div>\n      </div>\n    </div>\n    <div v-if=\"labelContent\" :class=\"`${name}-wrap__value`\">\n      <t-node :content=\"labelContent\"></t-node>\n    </div>\n    <div v-if=\"showExtremeValue\" :class=\"`${name}-wrap__value`\">{{ max }}</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, toRefs, computed, SetupContext, reactive, defineComponent, getCurrentInstance } from 'vue';\nimport config from '../config';\nimport props from './props';\nimport { useVModel } from '../shared/useVModel';\nimport { renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-slider`;\nconst { isArray } = Array;\n\nexport interface TouchData {\n  startValue: number;\n  newValue: number;\n  startX: number;\n  deltaX: number;\n  offsetX: number;\n}\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props,\n  emits: ['drag-start', 'drag-end', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const rootRef = ref<HTMLElement | null>(null);\n    const barRef = ref<HTMLElement | null>(null);\n    const defaultValue = props.defaultValue || props.min;\n    const { value, modelValue, max, min } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, defaultValue, props.onChange);\n    const internalInstance = getCurrentInstance();\n    const labelContent = computed(\n      () =>\n        !props.range &&\n        props.label &&\n        (typeof renderTNode(internalInstance, 'label') === 'object'\n          ? renderTNode(internalInstance, 'label')\n          : `${innerValue.value}`),\n    );\n\n    const isRange = computed(() => {\n      return props.range && isArray(innerValue.value) && innerValue.value.length === 2;\n    });\n    const dots = computed(() => {\n      if (isRange.value) return innerValue.value;\n\n      if (typeof innerValue.value === 'number') return [innerValue.value];\n      return [];\n    });\n\n    const classes = computed(() => [\n      `${name}-wrap`,\n      {\n        [`${prefix}-is-disabled`]: props.disabled,\n        [`${prefix}-is-mark`]: props.marks,\n        [`${prefix}-is-value`]: props.showExtremeValue,\n      },\n    ]);\n    const handleClass = computed(() => [`${name}__handle`]);\n    const marksData = computed(() => {\n      const sorter = (a: number[], b: number[]) => a[0] - b[0];\n      if (!props.range && props.marks) {\n        if (isArray(props.marks)) {\n          return props.marks.map((val: number) => [val, val]).sort(sorter);\n        }\n        return Object.entries(props.marks)\n          .map(([key, value]) => [parseInt(key, 10), value])\n          .sort(sorter);\n      }\n      return [];\n    });\n\n    const dragStatus = ref<string>('');\n    const touchData = reactive<TouchData>({\n      startValue: 0,\n      newValue: 0,\n      startX: 0,\n      deltaX: 0,\n      offsetX: 0,\n    });\n\n    function onTouchStart(event: TouchEvent, value: number) {\n      if (props.disabled) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      touchData.deltaX = 0;\n      touchData.offsetX = 0;\n      touchData.startX = event.touches[0].clientX;\n      touchData.startValue = format(value);\n      dragStatus.value = 'start';\n    }\n\n    function onTouchMove(event: TouchEvent, index: number) {\n      if (props.disabled) return;\n      if (!barRef.value) return;\n\n      event.stopPropagation();\n      event.preventDefault();\n      if (dragStatus.value === 'start') {\n        context.emit('drag-start');\n      }\n      const touch = event.touches[0];\n      touchData.deltaX = touch.clientX - touchData.startX;\n      touchData.offsetX = Math.abs(touchData.deltaX);\n      dragStatus.value = 'dragging';\n\n      const rect = barRef.value.getBoundingClientRect();\n      const delta = touchData.deltaX;\n      const total = rect.width;\n      const diff = (delta / total) * (props.max - props.min);\n\n      touchData.newValue = touchData.startValue + diff;\n      updateValue(touchData.newValue, index);\n    }\n\n    function onTouchEnd(event: TouchEvent, index: number) {\n      if (props.disabled) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (dragStatus.value === 'dragging') {\n        updateValue(touchData.newValue, index, true);\n        context.emit('drag-end');\n      }\n\n      dragStatus.value = '';\n    }\n\n    function onClick(event: MouseEvent) {\n      event.stopPropagation();\n\n      if (props.disabled) return;\n      if (!barRef.value) return;\n\n      const rect = barRef.value.getBoundingClientRect();\n      const delta = event.clientX - rect.left;\n      const total = rect.width;\n      const current = +props.min + (delta / total) * (props.max - props.min);\n\n      let index = 0;\n      if (props.range && innerValue.value) {\n        if (Math.abs(current - innerValue.value[0]) > Math.abs(current - innerValue.value[1])) {\n          index = 1;\n        }\n      }\n\n      touchData.startValue = innerValue.value?.[index];\n      updateValue(current, index, true);\n    }\n\n    function format(value: number): number {\n      let current = value;\n      if (!props.range && props.marks) {\n        if (marksData?.value?.length) {\n          let [min] = marksData.value[0];\n          marksData.value.forEach(([marksDataItemValue]) => {\n            if (Math.abs(marksDataItemValue - value) < Math.abs(min - value)) {\n              min = marksDataItemValue;\n            }\n          });\n          current = min;\n        }\n      }\n      return Math.round(Math.max(props.min, Math.min(current, props.max)) / props.step) * props.step;\n    }\n\n    function updateValue(newValue: number, index: number, end = false) {\n      const formatValue = format(newValue);\n      if (props.range && Array.isArray(innerValue.value)) {\n        const tmpValue = [...innerValue.value];\n        tmpValue[index] = formatValue;\n\n        if (end && formatValue !== touchData.startValue) {\n          tmpValue.sort((a, b) => a - b);\n          setInnerValue(tmpValue);\n        } else if (formatValue !== touchData.startValue) {\n          setInnerValue(tmpValue);\n        }\n      } else if (formatValue !== touchData.startValue) {\n        setInnerValue(formatValue);\n      }\n    }\n\n    const getPercentage = (value: number | undefined): number =>\n      ((value ? value - props.min : 0) / (props.max - props.min)) * 100;\n    const trackStyle = computed(() => {\n      if (props.range && isArray(innerValue.value)) {\n        return {\n          left: `${getPercentage(Math.min(innerValue.value[0], innerValue.value[1]))}%`,\n          width: `${getPercentage(Math.abs(innerValue.value[1] - innerValue.value[0]))}%`,\n        };\n      }\n      if (!isArray(innerValue.value)) {\n        return {\n          width: `${getPercentage(innerValue.value)}%`,\n        };\n      }\n      return {};\n    });\n\n    return {\n      max,\n      min,\n      name: ref(name),\n      marksData,\n      rootRef,\n      barRef,\n      dots,\n      value: innerValue,\n      labelContent,\n      classes,\n      handleClass,\n      trackStyle,\n      getPercentage,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n      onClick,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","isArray","Array","defineComponent","components","TNode","props","emits","setup","context","rootRef","ref","barRef","defaultValue","min","toRefs","value","modelValue","max","useVModel","onChange","innerValue","setInnerValue","internalInstance","getCurrentInstance","labelContent","computed","range","label","renderTNode","isRange","length","dots","classes","disabled","marks","showExtremeValue","handleClass","marksData","sorter","a","b","map","val","sort","Object","entries","key","parseInt","dragStatus","touchData","reactive","startValue","newValue","startX","deltaX","offsetX","onTouchStart","event","stopPropagation","preventDefault","touches","clientX","format","onTouchMove","index","emit","touch","Math","abs","rect","getBoundingClientRect","delta","total","width","diff","updateValue","onTouchEnd","onClick","left","current","forEach","marksDataItemValue","round","step","end","formatValue","tmpValue","getPercentage","trackStyle","_createElementBlock","class","_ctx","_createElementVNode","style","_openBlock","_Fragment","_renderList","item","_normalizeStyle","onTouchstart","$event","onTouchmove","onTouchend","v","k","_toDisplayString","_createVNode","_component_t_node","content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAQA,SAAWC,MAAA,CAAXD;AACR,IAAME,OAAUF,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,EAAA,SAAA,CAAA,CAAA;AAChB,IAAQG,UAAYC,KAAA,CAAZD;AAUR,aAAeE,eAAgB,CAAA;AAC7BH,EAAAA,IAAA,EAAAA,IAAA;AACAI,EAAAA,UAAA,EAAY;AAAEC,IAAAA,KAAM,EAANA,cAAAA;GAAM;AACpBC,EAAAA,KAAA,EAAAA,KAAA;EACAC,KAAO,EAAA,CAAC,YAAc,EAAA,UAAA,EAAY,qBAAqB,QAAQ,CAAA;AAC/DC,EAAAA,KAAA,EAAMF,SAAAA,KAAAA,CAAAA,QAAOG,OAAuB,EAAA;AAC5B,IAAA,IAAAC,OAAA,GAAUC,IAAwB,IAAI,CAAA,CAAA;AACtC,IAAA,IAAAC,MAAA,GAASD,IAAwB,IAAI,CAAA,CAAA;IACrC,IAAAE,YAAA,GAAeP,MAAM,CAAAO,YAAA,IAAgBP,MAAM,CAAAQ,GAAA,CAAA;IACjD,IAAwCC,OAAAA,GAAAA,OAAOT,MAAK,CAAA;AAA5CU,MAAAA,KAAO,WAAPA,KAAO;AAAAC,MAAAA,UAAA,WAAAA,UAAA;AAAYC,MAAAA,cAAAA;AAAKJ,MAAAA,GAAI,WAAJA,GAAI,CAAA;IAC9B,IAA8BK,UAAAA,GAAAA,UAAUH,KAAO,EAAAC,UAAA,EAAYJ,YAAcP,EAAAA,MAAAA,CAAMc,QAAQ,CAAA;AAAA,MAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;MAAtFC;MAAYC,aAAa,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;IAChC,IAAMC,mBAAmBC,kBAAmB,EAAA,CAAA;IAC5C,IAAMC,YAAe,GAAAC,QAAA,CACnB,YAAA;AAAA,MAAA,OACE,CAACpB,MAAAA,CAAMqB,KACPrB,IAAAA,MAAAA,CAAMsB,UACL,OAAA,CAAOC,WAAA,CAAYN,gBAAkB,EAAA,OAAO,OAAM,QAC/C,GAAAM,WAAA,CAAYN,kBAAkB,OAAO,CAAA,GAClCF,EAAAA,CAAAA,MAAAA,CAAAA,UAAW,CAAAL,KAAA,CAAA,CAAA,CAAA;KACtB,CAAA,CAAA;AAEM,IAAA,IAAAc,OAAA,GAAUJ,SAAS,YAAM;AACtBpB,MAAAA,OAAAA,MAAAA,CAAMqB,SAAS1B,OAAQ,CAAAoB,UAAA,CAAWL,KAAK,CAAK,IAAAK,UAAA,CAAWL,MAAMe,MAAW,KAAA,CAAA,CAAA;AACjF,KAAC,CAAA,CAAA;AACK,IAAA,IAAAC,IAAA,GAAON,SAAS,YAAM;AAC1B,MAAA,IAAII,OAAQ,CAAAd,KAAA,EAAO,OAAOK,UAAW,CAAAL,KAAA,CAAA;AAEjC,MAAA,IAAA,OAAOK,WAAWL,KAAU,KAAA,QAAA,EAAiB,OAAA,CAACK,WAAWL,KAAK,CAAA,CAAA;AAClE,MAAA,OAAO,EAAC,CAAA;AACV,KAAC,CAAA,CAAA;IAEK,IAAAiB,OAAA,GAAUP,SAAS,YAAA;AAAA,MAAA,IAAA,IAAA,CAAA;MAAA,OAAM,CAAA,EAAA,CAAA,MAAA,CAC1B1B,IAAA,EAEGF,OAAAA,CAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,mBAAuBQ,MAAM,CAAA4B,QAAA,CAC7BpC,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,eAAmBQ,MAAM,CAAA6B,KAAA,CACzBrC,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,gBAAoBQ,MAAM,CAAA8B,gBAAA,CAEjC,EAAA,IAAA,EAAA,CAAA;KAAA,CAAA,CAAA;IACD,IAAMC,cAAcX,QAAS,CAAA,YAAA;MAAA,OAAM,CAAA,EAAA,CAAA,MAAA,CAAI1B,MAAe,UAAA,CAAA,CAAA,CAAA;KAAA,CAAA,CAAA;AAChD,IAAA,IAAAsC,SAAA,GAAYZ,SAAS,YAAM;AAC/B,MAAA,IAAMa,SAAS,SAATA,OAAUC,CAAA,EAAaC,CAAgB,EAAA;QAAA,OAAAD,CAAA,CAAE,KAAKC,CAAE,CAAA,CAAA,CAAA,CAAA;AAAA,OAAA,CAAA;MACtD,IAAI,CAACnC,MAAAA,CAAMqB,KAASrB,IAAAA,MAAAA,CAAM6B,KAAO,EAAA;AAC3B,QAAA,IAAAlC,OAAA,CAAQK,MAAM,CAAA6B,KAAK,CAAG,EAAA;AACjB7B,UAAAA,OAAAA,MAAAA,CAAM6B,KAAM,CAAAO,GAAA,CAAI,UAACC,GAAA,EAAA;AAAA,YAAA,OAAgB,CAACA,GAAA,EAAKA,GAAG,CAAC,CAAA;AAAA,WAAA,CAAE,CAAAC,IAAA,CAAKL,MAAM,CAAA,CAAA;AACjE,SAAA;QACO,OAAAM,MAAA,CAAOC,QAAQxC,MAAM,CAAA6B,KAAK,EAC9BO,GAAI,CAAA,UAAA,KAAA,EAAA;AAAA,UAAA,IAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;YAAEK,GAAK/B,GAAAA,KAAAA,CAAAA,CAAAA,CAAAA;YAAAA,MAAK,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;UAAA,OAAM,CAACgC,QAAA,CAASD,KAAK,EAAE,CAAA,EAAG/B,MAAK,CAAC,CAAA;AAAA,SAAA,CAAA,CAChD4B,KAAKL,MAAM,CAAA,CAAA;AAChB,OAAA;AACA,MAAA,OAAO,EAAC,CAAA;AACV,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAU,UAAA,GAAatC,IAAY,EAAE,CAAA,CAAA;IACjC,IAAMuC,YAAYC,QAAoB,CAAA;AACpCC,MAAAA,UAAY,EAAA,CAAA;AACZC,MAAAA,QAAU,EAAA,CAAA;AACVC,MAAAA,MAAQ,EAAA,CAAA;AACRC,MAAAA,MAAQ,EAAA,CAAA;AACRC,MAAAA,OAAS,EAAA,CAAA;AACX,KAAC,CAAA,CAAA;AAEQ,IAAA,SAAAC,YAAA,CAAaC,OAAmB1C,MAAe,EAAA;MACtD,IAAIV,OAAM4B,QAAU,EAAA;AAClB,QAAA,OAAA;AACF,OAAA;MACAwB,KAAA,CAAMC,eAAgB,EAAA,CAAA;MACtBD,KAAA,CAAME,cAAe,EAAA,CAAA;MACrBV,SAAA,CAAUK,MAAS,GAAA,CAAA,CAAA;MACnBL,SAAA,CAAUM,OAAU,GAAA,CAAA,CAAA;MACVN,SAAA,CAAAI,MAAA,GAASI,KAAM,CAAAG,OAAA,CAAQ,CAAG,CAAA,CAAAC,OAAA,CAAA;AAC1BZ,MAAAA,SAAA,CAAAE,UAAA,GAAaW,OAAO/C,MAAK,CAAA,CAAA;MACnCiC,UAAA,CAAWjC,KAAQ,GAAA,OAAA,CAAA;AACrB,KAAA;AAES,IAAA,SAAAgD,WAAA,CAAYN,OAAmBO,KAAe,EAAA;MACrD,IAAI3D,MAAM,CAAA4B,QAAA,EAAU,OAAA;AACpB,MAAA,IAAI,CAACtB,MAAO,CAAAI,KAAA,EAAO,OAAA;MAEnB0C,KAAA,CAAMC,eAAgB,EAAA,CAAA;MACtBD,KAAA,CAAME,cAAe,EAAA,CAAA;AACjB,MAAA,IAAAX,UAAA,CAAWjC,UAAU,OAAS,EAAA;AAChCP,QAAAA,OAAA,CAAQyD,KAAK,YAAY,CAAA,CAAA;AAC3B,OAAA;AACM,MAAA,IAAAC,KAAA,GAAQT,MAAMG,OAAQ,CAAA,CAAA,CAAA,CAAA;MAClBX,SAAA,CAAAK,MAAA,GAASY,KAAM,CAAAL,OAAA,GAAUZ,SAAU,CAAAI,MAAA,CAAA;MAC7CJ,SAAA,CAAUM,OAAU,GAAAY,IAAA,CAAKC,GAAI,CAAAnB,SAAA,CAAUK,MAAM,CAAA,CAAA;MAC7CN,UAAA,CAAWjC,KAAQ,GAAA,UAAA,CAAA;AAEb,MAAA,IAAAsD,IAAA,GAAO1D,MAAO,CAAAI,KAAA,CAAMuD,qBAAsB,EAAA,CAAA;AAChD,MAAA,IAAMC,QAAQtB,SAAU,CAAAK,MAAA,CAAA;AACxB,MAAA,IAAMkB,QAAQH,IAAK,CAAAI,KAAA,CAAA;AACnB,MAAA,IAAMC,IAAQ,GAAAH,KAAA,GAAQC,KAAUnE,IAAAA,MAAAA,CAAMY,MAAMZ,MAAM,CAAAQ,GAAA,CAAA,CAAA;AAExCoC,MAAAA,SAAA,CAAAG,QAAA,GAAWH,UAAUE,UAAa,GAAAuB,IAAA,CAAA;AAChCC,MAAAA,WAAA,CAAA1B,SAAA,CAAUG,UAAUY,KAAK,CAAA,CAAA;AACvC,KAAA;AAES,IAAA,SAAAY,UAAA,CAAWnB,OAAmBO,KAAe,EAAA;MACpD,IAAI3D,OAAM4B,QAAU,EAAA;AAClB,QAAA,OAAA;AACF,OAAA;MACAwB,KAAA,CAAMC,eAAgB,EAAA,CAAA;MACtBD,KAAA,CAAME,cAAe,EAAA,CAAA;AAEjB,MAAA,IAAAX,UAAA,CAAWjC,UAAU,UAAY,EAAA;QACvB4D,WAAA,CAAA1B,SAAA,CAAUG,QAAU,EAAAY,KAAA,EAAO,IAAI,CAAA,CAAA;AAC3CxD,QAAAA,OAAA,CAAQyD,KAAK,UAAU,CAAA,CAAA;AACzB,OAAA;MAEAjB,UAAA,CAAWjC,KAAQ,GAAA,EAAA,CAAA;AACrB,KAAA;IAEA,SAAS8D,QAAQpB,KAAmB,EAAA;AAAA,MAAA,IAAA,iBAAA,CAAA;MAClCA,KAAA,CAAMC,eAAgB,EAAA,CAAA;MAEtB,IAAIrD,MAAM,CAAA4B,QAAA,EAAU,OAAA;AACpB,MAAA,IAAI,CAACtB,MAAO,CAAAI,KAAA,EAAO,OAAA;AAEb,MAAA,IAAAsD,IAAA,GAAO1D,MAAO,CAAAI,KAAA,CAAMuD,qBAAsB,EAAA,CAAA;MAC1C,IAAAC,KAAA,GAAQd,KAAM,CAAAI,OAAA,GAAUQ,IAAK,CAAAS,IAAA,CAAA;AACnC,MAAA,IAAMN,QAAQH,IAAK,CAAAI,KAAA,CAAA;AACb,MAAA,IAAAM,OAAA,GAAU,CAAC1E,MAAM,CAAAQ,GAAA,GAAO0D,QAAQC,KAAUnE,IAAAA,MAAAA,CAAMY,MAAMZ,MAAM,CAAAQ,GAAA,CAAA,CAAA;MAElE,IAAImD,KAAQ,GAAA,CAAA,CAAA;AACR3D,MAAAA,IAAAA,MAAAA,CAAMqB,KAAS,IAAAN,UAAA,CAAWL,KAAO,EAAA;QACnC,IAAIoD,IAAK,CAAAC,GAAA,CAAIW,OAAU,GAAA3D,UAAA,CAAWL,KAAM,CAAA,CAAA,CAAE,CAAI,GAAAoD,IAAA,CAAKC,GAAI,CAAAW,OAAA,GAAU3D,UAAW,CAAAL,KAAA,CAAM,EAAE,CAAG,EAAA;AAC7EiD,UAAAA,KAAA,GAAA,CAAA,CAAA;AACV,SAAA;AACF,OAAA;MAEUf,SAAA,CAAAE,UAAA,GAAa/B,CAAAA,iBAAAA,GAAAA,WAAWL,KAAQ,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAnB,iBAAmBiD,CAAAA,KAAA,CAAA,CAAA;AAC9BW,MAAAA,WAAA,CAAAI,OAAA,EAASf,OAAO,IAAI,CAAA,CAAA;AAClC,KAAA;IAEA,SAASF,OAAO/C,MAAuB,EAAA;MACrC,IAAIgE,OAAUhE,GAAAA,MAAAA,CAAAA;MACd,IAAI,CAACV,MAAAA,CAAMqB,KAASrB,IAAAA,MAAAA,CAAM6B,KAAO,EAAA;AAAA,QAAA,IAAA,gBAAA,CAAA;QAC3B,IAAAG,SAAA,KAAAA,IAAAA,IAAAA,SAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,gBAAAA,GAAAA,SAAA,CAAWtB,kDAAX,gBAAkBe,CAAAA,MAAQ,EAAA;AAC5B,UAAA,IAAA,iBAAA,GAAA,cAAA,CAAYO,SAAA,CAAUtB,KAAM,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;YAAvBF,IAAG,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA;AACRwB,UAAAA,SAAA,CAAUtB,KAAM,CAAAiE,OAAA,CAAQ,UAA0B,KAAA,EAAA;AAAA,YAAA,IAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;cAAxBC,kBAAkB,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACtC,YAAA,IAAAd,IAAA,CAAKC,IAAIa,kBAAqBlE,GAAAA,MAAK,IAAIoD,IAAK,CAAAC,GAAA,CAAIvD,IAAME,GAAAA,MAAK,CAAG,EAAA;AAChEF,cAAAA,IAAM,GAAAoE,kBAAA,CAAA;AACR,aAAA;AACF,WAAC,CAAA,CAAA;AACSpE,UAAAA,OAAAA,GAAAA,IAAAA,CAAAA;AACZ,SAAA;AACF,OAAA;AACA,MAAA,OAAOsD,KAAKe,KAAM,CAAAf,IAAA,CAAKlD,GAAIZ,CAAAA,MAAAA,CAAMQ,KAAKsD,IAAK,CAAAtD,GAAA,CAAIkE,OAAS1E,EAAAA,MAAAA,CAAMY,GAAG,CAAC,CAAA,GAAIZ,MAAM,CAAA8E,IAAI,IAAI9E,MAAM,CAAA8E,IAAA,CAAA;AAC5F,KAAA;AAEA,IAAA,SAASR,WAAY,CAAAvB,QAAA,EAAkBY,KAAe,EAAa;MAAA,IAAboB,GAAA,uEAAM,KAAO,CAAA;AAC3D,MAAA,IAAAC,WAAA,GAAcvB,OAAOV,QAAQ,CAAA,CAAA;AACnC,MAAA,IAAI/C,OAAMqB,KAAS,IAAAzB,KAAA,CAAMD,OAAQ,CAAAoB,UAAA,CAAWL,KAAK,CAAG,EAAA;AAClD,QAAA,IAAMuE,QAAW,GAAA,kBAAA,CAAIlE,UAAA,CAAWL,KAAK,CAAA,CAAA;AACrCuE,QAAAA,QAAA,CAAStB,KAAS,CAAA,GAAAqB,WAAA,CAAA;AAEd,QAAA,IAAAD,GAAA,IAAOC,WAAgB,KAAApC,SAAA,CAAUE,UAAY,EAAA;AAC/CmC,UAAAA,QAAA,CAAS3C,IAAK,CAAA,UAACJ,CAAG,EAAAC,CAAA,EAAA;YAAA,OAAMD,IAAIC,CAAC,CAAA;WAAA,CAAA,CAAA;UAC7BnB,aAAA,CAAciE,QAAQ,CAAA,CAAA;AACxB,SAAA,MAAA,IAAWD,WAAgB,KAAApC,SAAA,CAAUE,UAAY,EAAA;UAC/C9B,aAAA,CAAciE,QAAQ,CAAA,CAAA;AACxB,SAAA;AACF,OAAA,MAAA,IAAWD,WAAgB,KAAApC,SAAA,CAAUE,UAAY,EAAA;QAC/C9B,aAAA,CAAcgE,WAAW,CAAA,CAAA;AAC3B,OAAA;AACF,KAAA;AAEM,IAAA,IAAAE,aAAA,GAAgB,SAAhBA,aAAA,CAAiBxE,MAAAA,EAAAA;MAAAA,OAAAA,CACnBA,MAAQA,GAAAA,MAAAA,GAAQV,MAAM,CAAAQ,GAAA,GAAM,CAAMR,KAAAA,MAAAA,CAAMY,GAAMZ,GAAAA,MAAAA,CAAMQ,GAAQ,CAAA,GAAA,GAAA,CAAA;AAAA,KAAA,CAAA;AAC1D,IAAA,IAAA2E,UAAA,GAAa/D,SAAS,YAAM;MAChC,IAAIpB,MAAM,CAAAqB,KAAA,IAAS1B,OAAQ,CAAAoB,UAAA,CAAWL,KAAK,CAAG,EAAA;QACrC,OAAA;UACL+D,IAAA,EAAA,EAAA,CAAA,MAAA,CAASS,aAAA,CAAcpB,IAAK,CAAAtD,GAAA,CAAIO,UAAW,CAAAL,KAAA,CAAM,CAAI,CAAA,EAAAK,UAAA,CAAWL,KAAM,CAAA,CAAA,CAAE,CAAC,CAAA,EAAA,GAAA,CAAA;UACzE0D,KAAA,EAAA,EAAA,CAAA,MAAA,CAAUc,aAAA,CAAcpB,IAAK,CAAAC,GAAA,CAAIhD,UAAW,CAAAL,KAAA,CAAM,CAAK,CAAA,GAAAK,UAAA,CAAWL,KAAM,CAAA,CAAA,CAAE,CAAC,CAAA,EAAA,GAAA,CAAA;SAC7E,CAAA;AACF,OAAA;AACA,MAAA,IAAI,CAACf,OAAA,CAAQoB,UAAW,CAAAL,KAAK,CAAG,EAAA;QACvB,OAAA;AACL0D,UAAAA,KAAO,YAAGc,aAAc,CAAAnE,UAAA,CAAWL,KAAK,CAAA,EAAA,GAAA,CAAA;SAC1C,CAAA;AACF,OAAA;AACA,MAAA,OAAO,EAAC,CAAA;AACV,KAAC,CAAA,CAAA;IAEM,OAAA;AACLE,MAAAA,GAAA,EAAAA,GAAA;AACAJ,MAAAA,GAAA,EAAAA,GAAA;AACAd,MAAAA,IAAA,EAAMW,IAAIX,IAAI,CAAA;AACdsC,MAAAA,SAAA,EAAAA,SAAA;AACA5B,MAAAA,OAAA,EAAAA,OAAA;AACAE,MAAAA,MAAA,EAAAA,MAAA;AACAoB,MAAAA,IAAA,EAAAA,IAAA;AACAhB,MAAAA,KAAO,EAAAK,UAAA;AACPI,MAAAA,YAAA,EAAAA,YAAA;AACAQ,MAAAA,OAAA,EAAAA,OAAA;AACAI,MAAAA,WAAA,EAAAA,WAAA;AACAoD,MAAAA,UAAA,EAAAA,UAAA;AACAD,MAAAA,aAAA,EAAAA,aAAA;AACA/B,MAAAA,YAAA,EAAAA,YAAA;AACAO,MAAAA,WAAA,EAAAA,WAAA;AACAa,MAAAA,UAAA,EAAAA,UAAA;AACAC,MAAAA,OAAA,EAAAA,OAAAA;KACF,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;;oBCpQC,EAAAY,kBAAA,CAiCK,KAAA,EAAA;AAjCA/E,IAAAA,GAAI,EAAA,SAAA;AAAWgF,IAAAA,KAAA,gBAAO,CAAAC,IAAA,CAAO3D,OAAA,CAAA;MACrB2D,IAAgB,CAAAxD,gBAAA,iBAA3BsD,mBAAgF,KAAA,EAAA;;AAAlDC,IAAAA,sBAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI5F,IAAA,EAAA,oBAAA,CAAA,CAAA;qBAAyB4F,IAAE,CAAA9E,GAAA,GAAA,CAAA,CAAA,kCACvE+E,mBA0BK,KAAA,EAAA;AA1BCF,IAAAA,gCAAUC,IAAA,CAAI5F,IAAA,CAAA,CAAA;IAAK8E;aAAOc,IAAA,CAAOd,OAAA,IAAAc,IAAA,CAAAd,OAAA,CAAAc,KAAAA,CAAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AAAA,KAAA,CAAA;MAErCC,mBAA+C,KAAA,EAAA;AAA1ClF,IAAAA,GAAI,EAAA,QAAA;AAAUgF,IAAAA,sBAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI5F,IAAA,EAAA,OAAA,CAAA,CAAA;eAEjC6F,mBAAwD,KAAA,EAAA;AAAlDF,IAAAA,gCAAUC,IAAA,CAAI5F,IAAA,EAAA,SAAA,CAAA,CAAA;AAAY8F,IAAAA,KAAA,gBAAO,CAAAF,IAAA,CAAUH,UAAA,CAAA;gBAEjDM,SAAA,CAAA,IAAA,CAAA,EAAAL,kBAQM,CAAAM,QAAA,EAPoB,IAAA,EAAAC,UAAA,CAAAL,IAAA,CAAA5D,IAAA,EAAhB,UAAAkE,IAAA,EAAMjC,KAAK,EAAA;sBADrB,EAAAyB,kBAAA,CAQM,KAAA,EAAA;MANH3C,KAAKkB,KAAM,GAAA,CAAA;AACX0B,MAAAA,KAAA,gBAAO,CAAAC,IAAA,CAAWvD,WAAA,CAAA;MAClByD,OAAKK,cAAA,CAAUP,OAAAA,CAAAA,MAAAA,CAAAA,IAAa,CAAAJ,aAAA,CAACU,IAAI,CAAA,EAAA,GAAA,CAAA,CAAA;MACjCE,YAAY,EAAA,sBAAAC,MAAA,EAAA;AAAA,QAAA,OAAAT,IAAA,CAAAnC,YAAA,CAAa4C,QAAQH,IAAI,CAAA,CAAA;AAAA,OAAA;MACrCI,WAAW,EAAA,qBAAAD,MAAA,EAAA;AAAA,QAAA,OAAAT,IAAA,CAAA5B,WAAA,CAAYqC,QAAQpC,KAAK,CAAA,CAAA;AAAA,OAAA;MACpCsC,UAAU,EAAA,oBAAAF,MAAA,EAAA;AAAA,QAAA,OAAAT,IAAA,CAAAf,UAAA,CAAWwB,QAAQpC,KAAK,CAAA,CAAA;AAAA,OAAA;;aAG1B2B,IAAS,CAAAtD,SAAA,iBAApBoD,mBASK,KAAA,EAAA;;AATkBC,IAAAA,sBAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI5F,IAAA,EAAA,QAAA,CAAA,CAAA;OACnC+F,SAAA,CAAA,IAAA,CAAA,EAAAL,kBAOK,CAAAM,QAAA,EANc,IAAA,EAAAC,UAAA,CAAAL,IAAA,CAAAtD,SAAA,EAAT,UAAAkE,CAAA,EAAGC,CAAC,EAAA;sBADd,EAAAf,kBAAA,CAOK,KAAA,EAAA;AALF3C,MAAAA,GAAK,EAAA0D,CAAA;MACLd,sBAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI5F,IAAoB,EAAA,mBAAA,CAAA,CAAA,MAAA,CAAA4F,IAAA,MAAS,IAAAA,IAAA,CAAA5E,KAAQ,GAAAwF,CAAA,CAAC,CAAA,CAAA,GAAA,QAAA,GAAA,EAAA,CAAA,CAAA;MACpDV,OAAKK,cAAA,CAAA,QAAA,CAAA,MAAA,CAAWP,KAAaJ,aAAC,CAAAgB,CAAA,CAAC,EAAA,CAAA,EAAA,GAAA,CAAA,CAAA;AAEtB,KAAA,EAAAE,eAAA,CAAA,OAAAF,CAAA,CAAsB,OAAA,UAAA,GAAAA,CAAA,CAAK,CAAA,CAAA,CAAAA,CAAA,OAAQA,CAAC,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;uDAIzCZ,IAAY,CAAAnE,YAAA,iBAAvBiE,mBAEK,KAAA,EAAA;;AAFqBC,IAAAA,sBAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI5F,IAAA,EAAA,cAAA,CAAA,CAAA;MACtC2G,WAAA,CAAwCC,iBAAA,EAAA;IAA/BC,OAAS,EAAAjB,IAAA,CAAYnE,YAAAA;AAAA,GAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,uCAErBmE,IAAgB,CAAAxD,gBAAA,iBAA3BsD,mBAA0E,KAAA,EAAA;;AAA5CC,IAAAA,sBAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI5F,IAAA,EAAA,cAAA,CAAA,CAAA;qBAAmB4F,IAAI,CAAA1E,GAAA,GAAA,CAAA,CAAA;;;;;;;"}