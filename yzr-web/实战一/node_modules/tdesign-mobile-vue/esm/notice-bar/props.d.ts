import { TdNoticeBarProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    extra: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    marquee: {
        type: PropType<boolean | import("./type").DrawMarquee | undefined>;
        default: boolean;
    };
    prefixIcon: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    suffixIcon: {
        type: PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    theme: {
        type: PropType<"error" | "success" | "info" | "warning" | undefined>;
        default: "error" | "success" | "info" | "warning" | undefined;
        validator(val: TdNoticeBarProps['theme']): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultVisible: BooleanConstructor;
    onChange: PropType<((value: boolean) => void) | undefined>;
    onClick: PropType<((trigger: import("./type").NoticeBarTrigger) => void) | undefined>;
};
export default _default;
