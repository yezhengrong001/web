/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import { defineComponent, openBlock, createElementBlock, normalizeClass, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createElementVNode } from 'vue';
import config from '../config.js';
import CellGroupProps from './props.js';
import _defineProperty from '@babel/runtime/helpers/defineProperty';

var prefix = config.prefix;
var name = "".concat(prefix, "-cell-group");
var script = defineComponent({
  name: name,
  props: CellGroupProps,
  setup: function setup() {
    return {
      name: name
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _normalizeClass2;
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.name)
  }, [_ctx.title ? (openBlock(), createElementBlock("div", {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "__title"))
  }, [renderSlot(_ctx.$slots, "title", {}, function () {
    return [createTextVNode(toDisplayString(_ctx.title), 1)];
  })], 2)) : createCommentVNode("", true), createElementVNode("div", {
    class: normalizeClass((_normalizeClass2 = {}, _defineProperty(_normalizeClass2, "".concat(_ctx.name, "__container"), true), _defineProperty(_normalizeClass2, "border--top-bottom", _ctx.bordered), _normalizeClass2))
  }, [renderSlot(_ctx.$slots, "default")], 2)], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=cell-group.js.map
