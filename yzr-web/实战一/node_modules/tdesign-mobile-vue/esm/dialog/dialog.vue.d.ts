declare const _default: import("vue").DefineComponent<{
    actions: {
        type: import("vue").PropType<import("../button").TdButtonProps[] | undefined>;
    };
    buttonLayout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    cancelBtn: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
        default: string;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    confirmBtn: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
        default: string;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    destroyOnClose: BooleanConstructor;
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showInAttachedElement: BooleanConstructor;
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    visible: BooleanConstructor;
    width: {
        type: import("vue").PropType<string | number | undefined>;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onCancel: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onClose: import("vue").PropType<((context: import("./type").DialogCloseContext) => void) | undefined>;
    onConfirm: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onOverlayClick: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
}, {
    title: import("vue").Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    content: import("vue").Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    onChange: import("vue").Ref<((...args: any[]) => any) | undefined>;
    preventScrollThrough: import("vue").Ref<boolean>;
    showOverlay: import("vue").Ref<boolean>;
    width: import("vue").Ref<string | number | undefined>;
    onClose: import("vue").Ref<(((context: import("./type").DialogCloseContext) => void) & ((...args: any[]) => any)) | undefined>;
    visible: import("vue").Ref<boolean>;
    zIndex: import("vue").Ref<number | undefined>;
    "onUpdate:visible": import("vue").Ref<((...args: any[]) => any) | undefined>;
    closeOnOverlayClick: import("vue").Ref<boolean>;
    onCancel: import("vue").Ref<(((context: {
        e: MouseEvent;
    }) => void) & ((...args: any[]) => any)) | undefined>;
    confirmBtn: import("vue").Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
    onConfirm: import("vue").Ref<(((context: {
        e: MouseEvent;
    }) => void) & ((...args: any[]) => any)) | undefined>;
    cancelBtn: import("vue").Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
    actions: import("vue").Ref<import("../button").TdButtonProps[] | undefined>;
    buttonLayout: import("vue").Ref<"vertical" | "horizontal" | undefined>;
    destroyOnClose: import("vue").Ref<boolean>;
    showInAttachedElement: import("vue").Ref<boolean>;
    onOverlayClick: import("vue").Ref<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    "onOverlay-click": import("vue").Ref<((...args: any[]) => any) | undefined>;
    innerValue: import("vue").Ref<string>;
    dClassName: import("vue").ComputedRef<string>;
    dBoxClassName: import("vue").ComputedRef<string>;
    dHeaderClassName: import("vue").ComputedRef<(string | {
        [x: string]: import("vue").ComputedRef<any>;
    })[]>;
    dTitleClassName: import("vue").ComputedRef<string>;
    dBodyClassName: import("vue").ComputedRef<string>;
    dTextClassName: import("vue").ComputedRef<string>;
    dInputClassName: import("vue").ComputedRef<string>;
    dFooterClassName: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    dDefaultBtnClassName: import("vue").ComputedRef<string[]>;
    dConfirmBtnClassName: import("vue").ComputedRef<string[]>;
    dialogContent: import("vue").ComputedRef<any>;
    confirmBtnProps: import("vue").ComputedRef<any>;
    cancelBtnProps: import("vue").ComputedRef<any>;
    actionsBtnProps: import("vue").ComputedRef<any[] | undefined>;
    handleConfirm: () => void;
    handleCancel: () => void;
    handleOverlayClick: () => void;
    rootStyles: import("vue").ComputedRef<{
        zIndex: number | undefined;
        width: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "update:visible" | "cancel" | "confirm" | "change" | "overlay-click")[], "close" | "update:visible" | "cancel" | "confirm" | "change" | "overlay-click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    actions: {
        type: import("vue").PropType<import("../button").TdButtonProps[] | undefined>;
    };
    buttonLayout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    cancelBtn: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
        default: string;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    confirmBtn: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
        default: string;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    destroyOnClose: BooleanConstructor;
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showInAttachedElement: BooleanConstructor;
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    visible: BooleanConstructor;
    width: {
        type: import("vue").PropType<string | number | undefined>;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onCancel: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onClose: import("vue").PropType<((context: import("./type").DialogCloseContext) => void) | undefined>;
    onConfirm: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onOverlayClick: import("vue").PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
    onClose?: ((...args: any[]) => any) | undefined;
    "onUpdate:visible"?: ((...args: any[]) => any) | undefined;
    onCancel?: ((...args: any[]) => any) | undefined;
    onConfirm?: ((...args: any[]) => any) | undefined;
    "onOverlay-click"?: ((...args: any[]) => any) | undefined;
}, {
    preventScrollThrough: boolean;
    showOverlay: boolean;
    visible: boolean;
    closeOnOverlayClick: boolean;
    confirmBtn: string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined;
    cancelBtn: string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined;
    buttonLayout: "vertical" | "horizontal" | undefined;
    destroyOnClose: boolean;
    showInAttachedElement: boolean;
}>;
export default _default;
