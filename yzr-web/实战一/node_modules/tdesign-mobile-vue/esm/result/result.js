/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { h, defineComponent, getCurrentInstance, computed, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, Fragment, createBlock, normalizeProps, mergeProps, createCommentVNode, createVNode } from 'vue';
import { InfoCircleIcon, CheckCircleIcon, CloseCircleIcon } from 'tdesign-icons-vue-next';
import resultProps from './props.js';
import config from '../config.js';
import '../shared/index.js';
import TNodeComponent from '../shared/render-tnode.js';
import { renderTNode } from '../shared/render.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useEmitEvent/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config.prefix;
var name = "".concat(prefix, "-result");
var iconDefault = {
  default: h(InfoCircleIcon),
  success: h(CheckCircleIcon),
  warning: h(InfoCircleIcon),
  error: h(CloseCircleIcon)
};
var script = defineComponent({
  name: name,
  components: {
    TNode: TNodeComponent
  },
  props: resultProps,
  setup: function setup(props) {
    var internalInstance = getCurrentInstance();
    var imageContent = computed(function () {
      return renderTNode(internalInstance, "image");
    });
    var titleContent = computed(function () {
      return renderTNode(internalInstance, "title");
    });
    var descriptionContent = computed(function () {
      return renderTNode(internalInstance, "description");
    });
    var classes = computed(function () {
      return ["".concat(name), "".concat(name, "--theme-").concat(props.theme)];
    });
    var iconContent;
    if (props.icon !== "") {
      if (Object.keys(iconDefault).includes(props === null || props === void 0 ? void 0 : props.theme)) {
        var key = props.theme;
        iconContent = computed(function () {
          return iconDefault === null || iconDefault === void 0 ? void 0 : iconDefault[key];
        });
      }
      iconContent = props.icon ? computed(function () {
        return renderTNode(internalInstance, "icon");
      }) : iconContent;
    }
    var baseImageProps = {
      src: props.image
    };
    var customImageProps = computed(function () {
      return _objectSpread(_objectSpread({}, props.imageProps), baseImageProps);
    });
    return _objectSpread({
      name: name,
      classes: classes,
      imageContent: imageContent,
      customImageProps: customImageProps,
      iconContent: iconContent,
      titleContent: titleContent,
      descriptionContent: descriptionContent
    }, toRefs(props));
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_image = resolveComponent("t-image");
  var _component_t_node = resolveComponent("t-node");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.classes)
  }, [createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "__thumb"))
  }, [_ctx.imageContent ? (openBlock(), createElementBlock(Fragment, {
    key: 0
  }, [typeof _ctx.image === "string" ? (openBlock(), createBlock(_component_t_image, normalizeProps(mergeProps({
    key: 0
  }, _ctx.customImageProps)), null, 16)) : (openBlock(), createBlock(_component_t_node, {
    key: 1,
    content: _ctx.imageContent
  }, null, 8, ["content"]))], 64)) : (openBlock(), createElementBlock(Fragment, {
    key: 1
  }, [_ctx.iconContent !== void 0 ? (openBlock(), createBlock(_component_t_node, {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "__icon")),
    content: _ctx.iconContent
  }, null, 8, ["class", "content"])) : createCommentVNode("", true)], 64))], 2), _ctx.titleContent ? (openBlock(), createElementBlock("div", {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "__title"))
  }, [createVNode(_component_t_node, {
    content: _ctx.titleContent
  }, null, 8, ["content"])], 2)) : createCommentVNode("", true), _ctx.descriptionContent ? (openBlock(), createElementBlock("div", {
    key: 1,
    class: normalizeClass("".concat(_ctx.name, "__description"))
  }, [createVNode(_component_t_node, {
    content: _ctx.descriptionContent
  }, null, 8, ["content"])], 2)) : createCommentVNode("", true)], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=result.js.map
