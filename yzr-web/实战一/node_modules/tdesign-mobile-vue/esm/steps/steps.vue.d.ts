import { TdStepsProps } from './type';
declare const _default: import("vue").DefineComponent<{
    current: {
        type: import("vue").PropType<string | number | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<string | number | undefined>;
        default: undefined;
    };
    defaultCurrent: {
        type: import("vue").PropType<string | number | undefined>;
        default: number;
    };
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    options: {
        type: import("vue").PropType<import("./type").TdStepItemProps[] | undefined>;
    };
    readonly: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"default" | "dot" | undefined>;
        default: "default" | "dot" | undefined;
        validator(val: "default" | "dot" | undefined): boolean;
    };
    onChange: import("vue").PropType<((current: string | number, previous: string | number, context?: {
        e?: MouseEvent | undefined;
    } | undefined) => void) | undefined>;
}, {
    readonly: import("vue").Ref<boolean>;
    modelValue: import("vue").Ref<string | number | undefined>;
    theme: import("vue").Ref<"default" | "dot" | undefined>;
    layout: import("vue").Ref<"vertical" | "horizontal" | undefined>;
    options: import("vue").Ref<import("./type").TdStepItemProps[] | undefined>;
    current: import("vue").Ref<string | number | undefined>;
    defaultCurrent: import("vue").Ref<string | number | undefined>;
    baseClass: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    onClickItem: (cur: TdStepsProps['current'], prev: TdStepsProps['current'], e: MouseEvent) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "change" | "update:current", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    current: {
        type: import("vue").PropType<string | number | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<string | number | undefined>;
        default: undefined;
    };
    defaultCurrent: {
        type: import("vue").PropType<string | number | undefined>;
        default: number;
    };
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    options: {
        type: import("vue").PropType<import("./type").TdStepItemProps[] | undefined>;
    };
    readonly: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"default" | "dot" | undefined>;
        default: "default" | "dot" | undefined;
        validator(val: "default" | "dot" | undefined): boolean;
    };
    onChange: import("vue").PropType<((current: string | number, previous: string | number, context?: {
        e?: MouseEvent | undefined;
    } | undefined) => void) | undefined>;
}>>, {
    readonly: boolean;
    modelValue: string | number | undefined;
    theme: "default" | "dot" | undefined;
    layout: "vertical" | "horizontal" | undefined;
    current: string | number | undefined;
    defaultCurrent: string | number | undefined;
}>;
export default _default;
