/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, getCurrentInstance, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, withDirectives, createVNode, vShow } from 'vue';
import { CheckIcon } from 'tdesign-icons-vue-next';
import config from '../config.js';
import '../shared/index.js';
import CascaderItemProps from './cascader-item-prop.js';
import { renderTNode } from '../shared/render.js';
import { useEmitEvent } from '../shared/useEmitEvent/index.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config.prefix;
var name = "".concat(prefix, "-cascader-item");
var script = defineComponent({
  name: name,
  components: {
    CheckIcon: CheckIcon
  },
  props: CascaderItemProps,
  emits: ["click"],
  setup: function setup(props, context) {
    var className = computed(function () {
      return ["".concat(name), Boolean(props.active) && "active", Boolean(props.disabled) && "disabled"];
    });
    var internalInstance = getCurrentInstance();
    var labelTNode = computed(function () {
      return renderTNode(internalInstance, "label");
    });
    var emitEvent = useEmitEvent(props, context.emit);
    var onSelect = function onSelect(context2) {
      emitEvent("click", {
        e: context2.e
      });
    };
    var label = computed(function () {
      return props.label;
    });
    return _objectSpread({
      labelTNode: labelTNode,
      name: name,
      label: label,
      className: className,
      onSelect: onSelect
    }, toRefs(props));
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_check_icon = resolveComponent("check-icon");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.className),
    onClick: _cache[0] || (_cache[0] = function ($event) {
      return _ctx.onSelect({
        e: $event
      });
    })
  }, [createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-content"))
  }, toDisplayString(_ctx.label), 3), withDirectives(createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-active-icon"))
  }, [createVNode(_component_check_icon, {
    size: "24"
  })], 2), [[vShow, _ctx.active]])], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=cascader-item.js.map
