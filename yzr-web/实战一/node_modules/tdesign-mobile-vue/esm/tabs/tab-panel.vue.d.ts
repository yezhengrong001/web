import { Ref } from 'vue';
declare const _default: import("vue").DefineComponent<{
    destroyOnHide: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: BooleanConstructor;
    label: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    panel: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    value: {
        type: import("vue").PropType<import("./type").TabValue | undefined>;
    };
}, {
    label: Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    value: Ref<import("./type").TabValue | undefined>;
    disabled: Ref<boolean>;
    panel: Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    destroyOnHide: Ref<boolean>;
    prefix: string;
    name: string;
    isActive: import("vue").ComputedRef<boolean>;
    panelContent: import("vue").ComputedRef<any>;
    tabPanelClass: import("vue").ComputedRef<string[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    destroyOnHide: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: BooleanConstructor;
    label: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    panel: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    value: {
        type: import("vue").PropType<import("./type").TabValue | undefined>;
    };
}>>, {
    disabled: boolean;
    destroyOnHide: boolean;
}>;
export default _default;
