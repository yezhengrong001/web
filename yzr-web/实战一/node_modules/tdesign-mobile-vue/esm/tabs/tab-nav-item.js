/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import { defineComponent, getCurrentInstance, computed, resolveComponent, openBlock, createElementBlock, createVNode } from 'vue';
import '../shared/index.js';
import config from '../config.js';
import TabPanelProps from './tab-panel-props.js';
import TNodeComponent from '../shared/render-tnode.js';
import { renderContent } from '../shared/render.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useEmitEvent/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

var prefix = config.prefix;
var script = defineComponent({
  name: "".concat(prefix, "-tab-nav"),
  components: {
    TNode: TNodeComponent
  },
  props: {
    label: TabPanelProps.label
  },
  setup: function setup(props) {
    var internalInstance = getCurrentInstance();
    var labelContent = computed(function () {
      return renderContent(internalInstance, "default", "label");
    });
    return {
      labelContent: labelContent
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  return openBlock(), createElementBlock("div", null, [createVNode(_component_t_node, {
    content: _ctx.labelContent
  }, null, 8, ["content"])]);
}

script.render = render;

export { script as default };
//# sourceMappingURL=tab-nav-item.js.map
