{"version":3,"file":"pull-down-refresh.js","sources":["../../src/pull-down-refresh/pull-down-refresh.vue","../../src/pull-down-refresh/pull-down-refresh.vue?vue&type=template&id=6f78f360&lang.js"],"sourcesContent":["<template>\n  <div :class=\"name\">\n    <div\n      :class=\"`${name}__track`\"\n      :style=\"trackStyle\"\n      @touchstart.stop=\"onTouchStart\"\n      @touchmove.stop=\"onTouchMove\"\n      @touchend.stop=\"onTouchEnd\"\n      @touchcancel.stop=\"onTouchEnd\"\n    >\n      <div ref=\"maxBar\" :class=\"`${name}__max`\" :style=\"maxBarStyles\">\n        <div ref=\"loadingBar\" :class=\"`${name}__loading`\" :style=\"loadingBarStyles\">\n          <div v-if=\"status === 'loading'\">\n            <t-loading :text=\"loadingText\" :class=\"`${name}__loading-icon`\" v-bind=\"loadingIconProps\" />\n          </div>\n          <div v-else>{{ loadingText }}</div>\n        </div>\n      </div>\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onUnmounted, ref, toRefs, computed, SetupContext, watch } from 'vue';\nimport { useElementSize } from '@vueuse/core';\nimport PullDownRefreshProps from './props';\nimport { useEmitEvent, useVModel } from '../shared';\nimport config from '../config';\nimport TLoading from '../loading';\nimport { useTouch, isReachTop, easeDistance } from './useTouch';\n\nconst { prefix } = config;\nconst name = `${prefix}-pull-down-refresh`;\nconst ANIMATION_DURATION = 300;\nconst statusName = ['pulling', 'loosing', 'loading', 'success', 'initial'];\n\nexport default defineComponent({\n  name,\n  components: { TLoading },\n  props: PullDownRefreshProps,\n  emits: ['refresh', 'timeout', 'update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    // 动态生成style\n    const trackStyle = computed(() => ({\n      transitionDuration: `${ANIMATION_DURATION}ms`,\n      transform: `translate3d(0, ${distance.value}px, 0)`,\n    }));\n    const loadingBarStyles = computed(() => ({\n      height: typeof props.loadingBarHeight === 'number' ? `${props.loadingBarHeight}px` : props.loadingBarHeight,\n    }));\n    const maxBarStyles = computed(() => ({\n      height: typeof props.maxBarHeight === 'number' ? `${props.maxBarHeight}px` : props.maxBarHeight,\n    }));\n\n    // 动态生成loadingIcon的props\n    const loadingIconProps = computed(() => ({ ...props.loadingProps }));\n\n    // 是否处于加载状态\n    const isLoading = ref(false);\n\n    // 滑动距离\n    const distance = ref(0);\n    const { value, modelValue } = toRefs(props);\n    const [statusValue, setStatusValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    // 组件当前状态\n    const status = computed(() => {\n      if (!statusValue.value && isLoading.value) {\n        return 'success';\n      }\n      if (!statusValue.value || distance.value === 0) {\n        return 'initial';\n      }\n      if (distance.value < loadingBarHeight.value) {\n        return 'pulling';\n      }\n      if (isLoading.value) {\n        return 'loading';\n      }\n      return 'loosing';\n    });\n\n    watch(status, (newVal) => {\n      // 下拉刷新结束后，收起下拉页面\n      if (newVal === 'success' || newVal === 'initial') {\n        // 延时300ms收起下拉框，加强刷新成功提示\n        setTimeout(() => {\n          distance.value = 0;\n          isLoading.value = false;\n        }, 300);\n      }\n    });\n\n    // 根据状态修改loadingText值\n    const loadingTexts = ref(\n      props.loadingTexts?.length ? props.loadingTexts : ['下拉刷新', '松手刷新', '正在刷新', '刷新完成'],\n    );\n    const loadingText = computed(() => {\n      const index = statusName.indexOf(status.value);\n      return index >= 0 ? loadingTexts.value[index] : '';\n    });\n\n    const touch = useTouch();\n    const loadingBar = ref(null);\n    const maxBar = ref(null);\n    const { height: loadingBarHeight } = useElementSize(loadingBar);\n    const { height: maxBarHeight } = useElementSize(maxBar);\n\n    const onTouchStart = (e: TouchEvent) => {\n      if (!isReachTop(e) || isLoading.value) return;\n\n      setStatusValue(true);\n      distance.value = 0;\n      touch.start(e);\n    };\n\n    const onTouchMove = (e: TouchEvent) => {\n      if (!isReachTop(e) || isLoading.value) return;\n\n      const { deltaY } = touch;\n      const nextDistance = easeDistance(deltaY.value, loadingBarHeight.value);\n      // 下拉时，防止下拉整个页面\n      if (deltaY.value > 0) {\n        e.preventDefault();\n      }\n      if (nextDistance >= 0 && nextDistance < maxBarHeight.value) {\n        distance.value = nextDistance;\n      }\n      touch.move(e);\n    };\n\n    let timer: any = null;\n    const onTouchEnd = (e: TouchEvent) => {\n      if (!isReachTop(e) || isLoading.value) return;\n\n      if (status.value === 'loosing') {\n        distance.value = loadingBarHeight.value;\n        isLoading.value = true;\n        emitEvent('refresh');\n        timer = setTimeout(() => {\n          if (isLoading.value) {\n            emitEvent('timeout');\n            setStatusValue(false);\n          }\n        }, props.refreshTimeout);\n      } else {\n        setStatusValue(false);\n      }\n    };\n\n    onUnmounted(() => {\n      clearTimeout(timer);\n    });\n\n    return {\n      name,\n      status,\n      trackStyle,\n      loadingText,\n      maxBarStyles,\n      loadingBarStyles,\n      loadingIconProps,\n      loadingBar,\n      maxBar,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"name\">\n    <div\n      :class=\"`${name}__track`\"\n      :style=\"trackStyle\"\n      @touchstart.stop=\"onTouchStart\"\n      @touchmove.stop=\"onTouchMove\"\n      @touchend.stop=\"onTouchEnd\"\n      @touchcancel.stop=\"onTouchEnd\"\n    >\n      <div ref=\"maxBar\" :class=\"`${name}__max`\" :style=\"maxBarStyles\">\n        <div ref=\"loadingBar\" :class=\"`${name}__loading`\" :style=\"loadingBarStyles\">\n          <div v-if=\"status === 'loading'\">\n            <t-loading :text=\"loadingText\" :class=\"`${name}__loading-icon`\" v-bind=\"loadingIconProps\" />\n          </div>\n          <div v-else>{{ loadingText }}</div>\n        </div>\n      </div>\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onUnmounted, ref, toRefs, computed, SetupContext, watch } from 'vue';\nimport { useElementSize } from '@vueuse/core';\nimport PullDownRefreshProps from './props';\nimport { useEmitEvent, useVModel } from '../shared';\nimport config from '../config';\nimport TLoading from '../loading';\nimport { useTouch, isReachTop, easeDistance } from './useTouch';\n\nconst { prefix } = config;\nconst name = `${prefix}-pull-down-refresh`;\nconst ANIMATION_DURATION = 300;\nconst statusName = ['pulling', 'loosing', 'loading', 'success', 'initial'];\n\nexport default defineComponent({\n  name,\n  components: { TLoading },\n  props: PullDownRefreshProps,\n  emits: ['refresh', 'timeout', 'update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    // 动态生成style\n    const trackStyle = computed(() => ({\n      transitionDuration: `${ANIMATION_DURATION}ms`,\n      transform: `translate3d(0, ${distance.value}px, 0)`,\n    }));\n    const loadingBarStyles = computed(() => ({\n      height: typeof props.loadingBarHeight === 'number' ? `${props.loadingBarHeight}px` : props.loadingBarHeight,\n    }));\n    const maxBarStyles = computed(() => ({\n      height: typeof props.maxBarHeight === 'number' ? `${props.maxBarHeight}px` : props.maxBarHeight,\n    }));\n\n    // 动态生成loadingIcon的props\n    const loadingIconProps = computed(() => ({ ...props.loadingProps }));\n\n    // 是否处于加载状态\n    const isLoading = ref(false);\n\n    // 滑动距离\n    const distance = ref(0);\n    const { value, modelValue } = toRefs(props);\n    const [statusValue, setStatusValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    // 组件当前状态\n    const status = computed(() => {\n      if (!statusValue.value && isLoading.value) {\n        return 'success';\n      }\n      if (!statusValue.value || distance.value === 0) {\n        return 'initial';\n      }\n      if (distance.value < loadingBarHeight.value) {\n        return 'pulling';\n      }\n      if (isLoading.value) {\n        return 'loading';\n      }\n      return 'loosing';\n    });\n\n    watch(status, (newVal) => {\n      // 下拉刷新结束后，收起下拉页面\n      if (newVal === 'success' || newVal === 'initial') {\n        // 延时300ms收起下拉框，加强刷新成功提示\n        setTimeout(() => {\n          distance.value = 0;\n          isLoading.value = false;\n        }, 300);\n      }\n    });\n\n    // 根据状态修改loadingText值\n    const loadingTexts = ref(\n      props.loadingTexts?.length ? props.loadingTexts : ['下拉刷新', '松手刷新', '正在刷新', '刷新完成'],\n    );\n    const loadingText = computed(() => {\n      const index = statusName.indexOf(status.value);\n      return index >= 0 ? loadingTexts.value[index] : '';\n    });\n\n    const touch = useTouch();\n    const loadingBar = ref(null);\n    const maxBar = ref(null);\n    const { height: loadingBarHeight } = useElementSize(loadingBar);\n    const { height: maxBarHeight } = useElementSize(maxBar);\n\n    const onTouchStart = (e: TouchEvent) => {\n      if (!isReachTop(e) || isLoading.value) return;\n\n      setStatusValue(true);\n      distance.value = 0;\n      touch.start(e);\n    };\n\n    const onTouchMove = (e: TouchEvent) => {\n      if (!isReachTop(e) || isLoading.value) return;\n\n      const { deltaY } = touch;\n      const nextDistance = easeDistance(deltaY.value, loadingBarHeight.value);\n      // 下拉时，防止下拉整个页面\n      if (deltaY.value > 0) {\n        e.preventDefault();\n      }\n      if (nextDistance >= 0 && nextDistance < maxBarHeight.value) {\n        distance.value = nextDistance;\n      }\n      touch.move(e);\n    };\n\n    let timer: any = null;\n    const onTouchEnd = (e: TouchEvent) => {\n      if (!isReachTop(e) || isLoading.value) return;\n\n      if (status.value === 'loosing') {\n        distance.value = loadingBarHeight.value;\n        isLoading.value = true;\n        emitEvent('refresh');\n        timer = setTimeout(() => {\n          if (isLoading.value) {\n            emitEvent('timeout');\n            setStatusValue(false);\n          }\n        }, props.refreshTimeout);\n      } else {\n        setStatusValue(false);\n      }\n    };\n\n    onUnmounted(() => {\n      clearTimeout(timer);\n    });\n\n    return {\n      name,\n      status,\n      trackStyle,\n      loadingText,\n      maxBarStyles,\n      loadingBarStyles,\n      loadingIconProps,\n      loadingBar,\n      maxBar,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","ANIMATION_DURATION","statusName","defineComponent","components","TLoading","props","PullDownRefreshProps","emits","setup","context","emitEvent","useEmitEvent","emit","trackStyle","computed","transitionDuration","transform","distance","value","loadingBarStyles","height","loadingBarHeight","maxBarStyles","maxBarHeight","loadingIconProps","loadingProps","isLoading","ref","toRefs","modelValue","useVModel","defaultValue","onChange","statusValue","setStatusValue","status","watch","newVal","setTimeout","loadingTexts","length","loadingText","index","indexOf","touch","useTouch","loadingBar","maxBar","useElementSize","onTouchStart","e","isReachTop","start","onTouchMove","deltaY","nextDistance","easeDistance","preventDefault","move","timer","onTouchEnd","refreshTimeout","onUnmounted","clearTimeout","_createElementBlock","class","_ctx","_createElementVNode","style","onTouchstart","onTouchmove","onTouchend","onTouchcancel","_hoisted_1","_createVNode","_component_t_loading","_mergeProps","text","_openBlock","_renderSlot","$slots"],"mappings":"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"}