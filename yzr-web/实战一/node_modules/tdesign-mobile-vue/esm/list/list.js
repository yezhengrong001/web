/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import { defineComponent, ref, getCurrentInstance, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, renderSlot, createElementVNode, withModifiers, createBlock, createCommentVNode } from 'vue';
import { useWindowSize, useElementBounding, useEventListener } from '@vueuse/core';
import _Loading from '../loading/index.js';
import config from '../config.js';
import ListProps from './props.js';
import '../shared/index.js';
import TNodeComponent from '../shared/render-tnode.js';
import { useEmitEvent } from '../shared/useEmitEvent/index.js';
import { useScrollParent } from '../shared/useScrollParent/index.js';
import { renderTNode } from '../shared/render.js';
import '../loading/loading.js';
import '@babel/runtime/helpers/defineProperty';
import '../loading/icon/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import '../loading/icon/spinner.js';
import '../shared/constants.js';
import '../loading/props.js';
import '../loading/style';
import '../loading/type.js';
import '../shared/component.js';
import '@babel/runtime/helpers/typeof';
import 'lodash/camelCase';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useChildSlots/index.js';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useExpose/index.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-list");
var LOADING_TEXT_MAP = {
  loading: "\u52A0\u8F7D\u4E2D...",
  "load-more": "\u70B9\u51FB\u52A0\u8F7D\u66F4\u591A"
};
var script = defineComponent({
  name: name,
  components: {
    TLoading: _Loading,
    TNode: TNodeComponent
  },
  props: ListProps,
  emits: ["load-more", "scroll"],
  setup: function setup(props, context) {
    var emitEvent = useEmitEvent(props, context.emit);
    var root = ref();
    var empty = ref();
    var scrollParent = useScrollParent(root);
    var _useWindowSize = useWindowSize(),
      height = _useWindowSize.height;
    var internalInstance = getCurrentInstance();
    var headerContent = computed(function () {
      return renderTNode(internalInstance, "header");
    });
    var footerContent = computed(function () {
      return renderTNode(internalInstance, "footer");
    });
    var onLoadMore = function onLoadMore(e) {
      if (props.asyncLoading === "load-more") {
        emitEvent("load-more");
      }
    };
    var handleScroll = function handleScroll(e) {
      var _useElementBounding = useElementBounding(root),
        bottom = _useElementBounding.bottom;
      emitEvent("scroll", bottom.value - height.value);
    };
    useEventListener(scrollParent, "scroll", handleScroll);
    return {
      name: name,
      root: root,
      empty: empty,
      onLoadMore: onLoadMore,
      handleScroll: handleScroll,
      headerContent: headerContent,
      footerContent: footerContent,
      LOADING_TEXT_MAP: LOADING_TEXT_MAP
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  var _component_t_loading = resolveComponent("t-loading");
  return openBlock(), createElementBlock("div", {
    ref: "root",
    class: normalizeClass(_ctx.name),
    onScroll: _cache[1] || (_cache[1] = function () {
      return _ctx.handleScroll && _ctx.handleScroll.apply(_ctx, arguments);
    })
  }, [createVNode(_component_t_node, {
    content: _ctx.headerContent
  }, null, 8, ["content"]), renderSlot(_ctx.$slots, "default"), createElementVNode("div", {
    onClick: _cache[0] || (_cache[0] = withModifiers(function () {
      return _ctx.onLoadMore && _ctx.onLoadMore.apply(_ctx, arguments);
    }, ["stop"]))
  }, [typeof _ctx.asyncLoading === "string" && ["loading", "load-more"].includes(_ctx.asyncLoading) ? (openBlock(), createBlock(_component_t_loading, {
    key: 0,
    loading: _ctx.asyncLoading === "loading",
    text: typeof _ctx.asyncLoading === "string" ? _ctx.LOADING_TEXT_MAP[_ctx.asyncLoading] : "",
    class: normalizeClass("".concat(_ctx.name, "__loading"))
  }, null, 8, ["loading", "text", "class"])) : createCommentVNode("", true)]), createVNode(_component_t_node, {
    content: _ctx.footerContent
  }, null, 8, ["content"])], 34);
}

script.render = render;

export { script as default };
//# sourceMappingURL=list.js.map
