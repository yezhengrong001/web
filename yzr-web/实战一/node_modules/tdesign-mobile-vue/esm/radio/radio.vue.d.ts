import { h } from 'vue';
import { RadioValue } from './type';
declare const _default: import("vue").DefineComponent<{
    borderless: {
        type: BooleanConstructor;
        value: boolean;
    };
    align: {
        type: import("vue").PropType<"left" | "right" | undefined>;
        default: "left" | "right" | undefined;
        validator(val: "left" | "right" | undefined): boolean;
    };
    checked: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultChecked: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    contentDisabled: BooleanConstructor;
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    icon: {
        type: import("vue").PropType<((h: typeof h) => import("../common").SlotReturnValue)[] | "fill-circle" | "stroke-line" | undefined>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: boolean;
    };
    onChange: import("vue").PropType<((checked: boolean, context: {
        e: Event;
    }) => void) | undefined>;
}, {
    name: string;
    iconClass: import("vue").ComputedRef<(string | {
        [x: string]: boolean | undefined;
    })[]>;
    radioContent: import("vue").ComputedRef<any>;
    labelContent: import("vue").ComputedRef<any>;
    iconContent: import("vue").ComputedRef<string | import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    radioContentChange: (e: Event) => void;
    radioOrgChange: (e: Event) => void;
    radioClasses: import("vue").ComputedRef<(string | {
        [x: string]: boolean | undefined;
    })[]>;
    titleClasses: import("vue").ComputedRef<(string | {
        [x: string]: boolean | undefined;
    })[]>;
    inputProps: import("vue").ComputedRef<{
        name: string;
        checked: boolean | undefined;
        disabled: boolean | undefined;
        value: RadioValue | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "change" | "update:checked", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    borderless: {
        type: BooleanConstructor;
        value: boolean;
    };
    align: {
        type: import("vue").PropType<"left" | "right" | undefined>;
        default: "left" | "right" | undefined;
        validator(val: "left" | "right" | undefined): boolean;
    };
    checked: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultChecked: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    contentDisabled: BooleanConstructor;
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    icon: {
        type: import("vue").PropType<((h: typeof h) => import("../common").SlotReturnValue)[] | "fill-circle" | "stroke-line" | undefined>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: import("vue").PropType<RadioValue | undefined>;
        default: boolean;
    };
    onChange: import("vue").PropType<((checked: boolean, context: {
        e: Event;
    }) => void) | undefined>;
}>>, {
    value: RadioValue | undefined;
    modelValue: boolean;
    name: string;
    icon: ((h: typeof h) => import("../common").SlotReturnValue)[] | "fill-circle" | "stroke-line" | undefined;
    align: "left" | "right" | undefined;
    disabled: boolean;
    borderless: boolean;
    checked: boolean;
    defaultChecked: boolean;
    contentDisabled: boolean;
}>;
export default _default;
