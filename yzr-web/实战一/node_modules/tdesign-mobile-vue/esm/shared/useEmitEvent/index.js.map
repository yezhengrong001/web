{"version":3,"file":"index.js","sources":["../../../src/shared/useEmitEvent/index.ts"],"sourcesContent":["import camelCase from 'lodash/camelCase';\n\nexport type EmitEventName = { event: string; method: string } | string;\n\n/**\n * 组件对外传递事件\n * @param props 组件props\n * @param emit 事件名(注意使用中划线)\n * @param args 事件参数\n * @returns {emitEvent}\n * @example useEmitEvent<IProps>(props, emit);\n */\nexport function useEmitEvent<P extends Record<string, any>>(props: P, emit: (event: string, ...args: any[]) => void) {\n  return function emitEvent<T extends any[] = any[]>(eventName: string, ...args: T) {\n    let emitEventMethodName = '';\n    if (typeof eventName === 'string') {\n      emitEventMethodName = camelCase(`on-${eventName}`);\n    }\n\n    if (typeof props[emitEventMethodName] === 'function') {\n      props[emitEventMethodName](...args);\n    } else {\n      emit(eventName, ...args);\n    }\n  };\n}\n"],"names":["useEmitEvent","props","emit","emitEvent","eventName","emitEventMethodName","camelCase","args"],"mappings":";;;;;;;;AAYgB,SAAAA,YAAA,CAA4CC,OAAUC,IAA+C,EAAA;AAC5G,EAAA,OAAA,SAASC,SAAmC,CAAAC,SAAA,EAA+B;IAChF,IAAIC,mBAAsB,GAAA,EAAA,CAAA;AACtB,IAAA,IAAA,OAAOD,cAAc,QAAU,EAAA;AACXC,MAAAA,mBAAA,GAAAC,SAAA,CAAgBF,KAAAA,CAAAA,MAAAA,CAAAA,SAAW,CAAA,CAAA,CAAA;AACnD,KAAA;AAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAJuEG,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAATA,IAAS,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,KAAA;AAM5E,IAAA,IAAA,OAAON,KAAM,CAAAI,mBAAA,CAAA,KAAyB,UAAY,EAAA;AAC9CJ,MAAAA,KAAA,CAAAI,mBAAA,CAAA,OAAAJ,KAAA,EAAwBM,IAAI,CAAA,CAAA;AACpC,KAAO,MAAA;AACAL,MAAAA,IAAA,CAAAE,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,SAAA,CAAcG,CAAAA,MAAAA,CAAAA,IAAI,CAAA,CAAA,CAAA;AACzB,KAAA;GACF,CAAA;AACF;;;;"}