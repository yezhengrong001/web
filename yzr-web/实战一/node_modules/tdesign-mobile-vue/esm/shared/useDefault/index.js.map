{"version":3,"file":"index.js","sources":["../../../src/shared/useDefault/index.ts"],"sourcesContent":["import { computed, ref, SetupContext, watchEffect, WritableComputedRef } from 'vue';\nimport camelCase from 'lodash/camelCase';\n\nfunction getDefaultName(key: string): string {\n  const str = camelCase(key);\n  return `default${str[0].toLocaleUpperCase() + str.slice(1)}`;\n}\n\n// eventName is keybase, change -> onChange; visible-change -> onVisibleChange\nfunction getEventPropsName(eventName: string): string {\n  const str = camelCase(eventName);\n  return `on${str[0].toLocaleUpperCase()}${str.slice(1)}`;\n}\n\n/**\n * 受控和非受控逻辑处理，包含 value / modelValue / events\n * @param props 属性\n * @param emit 触发方法，context.emit\n * @param key 受控属性名称\n * @param eventName 事件名称\n * @example const [value, setValue] = useDefault();\n * @returns [value, setValue]\n */\nexport function useDefault<V, T>(props: T, emit: SetupContext['emit'], key: string, eventName: string) {\n  const modelValue = 'modelValue';\n  const defaultName = getDefaultName(String(key));\n\n  const isUsedModelValue = props[modelValue] !== undefined;\n  const isUsedKey = props[key] !== undefined;\n\n  const innerValue = ref<V>();\n\n  if (isUsedKey) {\n    innerValue.value = props[key];\n  } else if (isUsedModelValue) {\n    innerValue.value = props[modelValue];\n  } else {\n    innerValue.value = props[defaultName];\n  }\n  watchEffect(() => {\n    if (isUsedModelValue) {\n      innerValue.value = props[modelValue];\n    }\n    if (isUsedKey) {\n      innerValue.value = props[key];\n    }\n  });\n\n  function emitEvents<T extends Array<any>>(value: V, ...arg: T) {\n    const updateKeys = [`update:${key}`];\n    if (isUsedModelValue) {\n      updateKeys.push(`update:modelValue`);\n    }\n    // Props Event exists in Vue3. `props.onChange()` is equal `context.emit('change')`\n    updateKeys.forEach((updateKey) => {\n      emit(updateKey, value, ...arg);\n    });\n    const propsEventName = getEventPropsName(eventName);\n    props[propsEventName]?.(value, ...arg);\n  }\n\n  function setInnerValue<M extends Array<any>>(value: V, ...arg: M) {\n    if (!isUsedKey && !isUsedModelValue) {\n      innerValue.value = value;\n    }\n    emitEvents<M>(value, ...arg);\n  }\n\n  const innerValueRef = computed<V>({\n    get() {\n      return innerValue.value as V;\n    },\n    set(value: V) {\n      setInnerValue(value);\n    },\n  });\n\n  return [innerValueRef, setInnerValue] as [WritableComputedRef<V>, typeof setInnerValue];\n}\n"],"names":["getDefaultName","key","str","camelCase","toLocaleUpperCase","slice","getEventPropsName","eventName","useDefault","props","emit","modelValue","defaultName","String","isUsedModelValue","isUsedKey","innerValue","ref","value","watchEffect","emitEvents","arg","updateKeys","push","forEach","updateKey","propsEventName","setInnerValue","innerValueRef","computed","get","set"],"mappings":"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"}