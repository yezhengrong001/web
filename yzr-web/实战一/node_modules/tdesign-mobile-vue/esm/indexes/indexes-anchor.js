/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import { defineComponent, computed, getCurrentInstance, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, createVNode } from 'vue';
import { templateRef, useElementBounding } from '@vueuse/core';
import config from '../config.js';
import '../shared/index.js';
import TNodeComponent from '../shared/render-tnode.js';
import { renderContent } from '../shared/render.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useEmitEvent/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

var name = "".concat(config.prefix, "-indexes-anchor");
var script = defineComponent({
  name: name,
  components: {
    TNode: TNodeComponent
  },
  props: {
    anchorStyle: {
      type: String,
      default: ""
    }
  },
  setup: function setup(props, context) {
    var boxClasses = name;
    var stickyContent = computed(function () {
      return renderContent(getCurrentInstance(), "default", "");
    });
    var boxRef = templateRef("boxRef");
    var contentRef = templateRef("contentRef");
    var _useElementBounding = useElementBounding(contentRef),
      height = _useElementBounding.height;
    var boxStyles = computed(function () {
      return "height:".concat(height.value, "px;");
    });
    return {
      boxClasses: boxClasses,
      boxStyles: boxStyles,
      stickyContent: stickyContent
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  return openBlock(), createElementBlock("div", {
    ref: "boxRef",
    class: normalizeClass(_ctx.boxClasses),
    style: normalizeStyle(_ctx.boxStyles)
  }, [createElementVNode("div", {
    ref: "contentRef",
    class: "t-indexes__anchor",
    style: normalizeStyle(_ctx.anchorStyle)
  }, [createVNode(_component_t_node, {
    content: _ctx.stickyContent
  }, null, 8, ["content"])], 4)], 6);
}

script.render = render;

export { script as default };
//# sourceMappingURL=indexes-anchor.js.map
