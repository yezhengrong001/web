/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import { defineComponent, reactive, resolveComponent, openBlock, createBlock, normalizeClass } from 'vue';
import _Cell from '../cell/index.js';
import config from '../config.js';
import '../cell/cell.js';
import '@babel/runtime/helpers/defineProperty';
import 'tdesign-icons-vue-next';
import '../shared/index.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/render.js';
import '@babel/runtime/helpers/typeof';
import 'lodash/camelCase';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useEmitEvent/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../cell/props.js';
import '../cell/style';
import '../cell/type.js';

var prefix = config.prefix;
var componentName = "".concat(prefix, "-indexes-cell");
var script = defineComponent({
  name: componentName,
  components: {
    TCell: _Cell
  },
  props: {
    title: {
      type: String,
      default: ""
    },
    key: {
      type: String,
      default: ""
    },
    value: {
      type: String,
      default: ""
    },
    link: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, context) {
    var currentSidebar = "";
    var state = reactive({
      title: props.title,
      value: props.value,
      link: props.link,
      key: props.key,
      componentName: componentName
    });
    return {
      state: state,
      currentSidebar: currentSidebar
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_cell = resolveComponent("t-cell");
  return openBlock(), createBlock(_component_t_cell, {
    class: normalizeClass(_ctx.state.componentName),
    "data-key": _ctx.state.key,
    title: _ctx.state.title,
    value: _ctx.state.value,
    link: _ctx.state.link
  }, null, 8, ["class", "data-key", "title", "value", "link"]);
}

script.render = render;

export { script as default };
//# sourceMappingURL=indexes-cell.js.map
