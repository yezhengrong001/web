/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, getCurrentInstance, computed, h, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createBlock, createCommentVNode, Fragment, createVNode } from 'vue';
import { ChevronRightIcon } from 'tdesign-icons-vue-next';
import '../shared/index.js';
import config from '../config.js';
import CellProps from './props.js';
import TNodeComponent from '../shared/render-tnode.js';
import { useEmitEvent } from '../shared/useEmitEvent/index.js';
import { renderContent, renderTNode } from '../shared/render.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config.prefix;
var name = "".concat(prefix, "-cell");
var script = defineComponent({
  name: name,
  components: {
    TNode: TNodeComponent
  },
  props: CellProps,
  emits: ["click"],
  setup: function setup(props, context) {
    var emitEvent = useEmitEvent(props, context.emit);
    var internalInstance = getCurrentInstance();
    var noteContent = computed(function () {
      return renderContent(internalInstance, "default", "note");
    });
    var titleContent = computed(function () {
      return renderTNode(internalInstance, "title");
    });
    var descriptionContent = computed(function () {
      return renderTNode(internalInstance, "description");
    });
    var rightIconContent = computed(function () {
      if (props.arrow) {
        return h(ChevronRightIcon);
      }
      return renderTNode(internalInstance, "rightIcon");
    });
    var imageContent = computed(function () {
      return renderTNode(internalInstance, "image");
    });
    var leftIconContent = computed(function () {
      return renderTNode(internalInstance, "leftIcon");
    });
    var styleCell = computed(function () {
      var _ref;
      return ["".concat(name), "".concat(name, "--").concat(props.align), (_ref = {}, _defineProperty(_ref, "".concat(name, "--hover"), props.hover), _defineProperty(_ref, "".concat(name, "--bordered"), props.bordered), _ref)];
    });
    var onClick = function onClick(e) {
      return emitEvent("click", e);
    };
    return _objectSpread(_objectSpread({}, toRefs(props)), {}, {
      name: name,
      onClick: onClick,
      styleCell: styleCell,
      imageContent: imageContent,
      rightIconContent: rightIconContent,
      leftIconContent: leftIconContent,
      noteContent: noteContent,
      titleContent: titleContent,
      descriptionContent: descriptionContent
    });
  }
});

var _hoisted_1 = ["src"];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.styleCell),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.onClick && _ctx.onClick.apply(_ctx, arguments);
    })
  }, [createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "__left-icon"))
  }, [_ctx.leftIconContent ? (openBlock(), createBlock(_component_t_node, {
    key: 0,
    content: _ctx.leftIconContent
  }, null, 8, ["content"])) : createCommentVNode("", true), _ctx.image ? (openBlock(), createElementBlock(Fragment, {
    key: 1
  }, [typeof _ctx.image === "string" ? (openBlock(), createElementBlock("img", {
    key: 0,
    src: _ctx.image,
    class: normalizeClass("".concat(_ctx.name, "__image"))
  }, null, 10, _hoisted_1)) : (openBlock(), createBlock(_component_t_node, {
    key: 1,
    content: _ctx.imageContent
  }, null, 8, ["content"]))], 64)) : createCommentVNode("", true)], 2), _ctx.titleContent ? (openBlock(), createElementBlock("div", {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "__title"))
  }, [createVNode(_component_t_node, {
    content: _ctx.titleContent
  }, null, 8, ["content"]), _ctx.required ? (openBlock(), createElementBlock("span", {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "--required"))
  }, "\xA0*", 2)) : createCommentVNode("", true), _ctx.descriptionContent ? (openBlock(), createElementBlock("div", {
    key: 1,
    class: normalizeClass("".concat(_ctx.name, "__description"))
  }, [createVNode(_component_t_node, {
    content: _ctx.descriptionContent
  }, null, 8, ["content"])], 2)) : createCommentVNode("", true)], 2)) : createCommentVNode("", true), _ctx.noteContent ? (openBlock(), createElementBlock("div", {
    key: 1,
    class: normalizeClass("".concat(_ctx.name, "__note"))
  }, [createVNode(_component_t_node, {
    content: _ctx.noteContent
  }, null, 8, ["content"])], 2)) : createCommentVNode("", true), _ctx.rightIconContent ? (openBlock(), createElementBlock("div", {
    key: 2,
    class: normalizeClass("".concat(_ctx.name, "__right-icon"))
  }, [createVNode(_component_t_node, {
    content: _ctx.rightIconContent
  }, null, 8, ["content"])], 2)) : createCommentVNode("", true)], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=cell.js.map
