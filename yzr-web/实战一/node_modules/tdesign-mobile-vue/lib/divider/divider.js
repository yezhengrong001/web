/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var divider_props = require('./props.js');
var config = require('../config.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-divider");
var script = vue.defineComponent({
  name: name,
  components: {
    TNode: shared_renderTnode["default"]
  },
  props: divider_props["default"],
  setup: function setup(props) {
    var internalInstance = vue.getCurrentInstance();
    var dividerContent = vue.computed(function () {
      return shared_render.renderContent(internalInstance, "default", "content");
    });
    var dividerClass = vue.computed(function () {
      var _ref;
      return ["".concat(name), "".concat(name, "--hairline"), (_ref = {}, _defineProperty__default["default"](_ref, "".concat(name, "--content-").concat(props.align), dividerContent.value), _defineProperty__default["default"](_ref, "".concat(name, "--dashed"), props.dashed), _defineProperty__default["default"](_ref, "".concat(name, "-vertical"), props.layout === "vertical"), _ref)];
    });
    return _objectSpread(_objectSpread({}, vue.toRefs(props)), {}, {
      dividerContent: dividerContent,
      dividerClass: dividerClass
    });
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = vue.resolveComponent("t-node");
  return vue.openBlock(), vue.createElementBlock("div", {
    role: "separator",
    class: vue.normalizeClass(_ctx.dividerClass),
    style: vue.normalizeStyle("border-color:".concat(_ctx.lineColor))
  }, [vue.createVNode(_component_t_node, {
    content: _ctx.dividerContent
  }, null, 8, ["content"])], 6);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=divider.js.map
