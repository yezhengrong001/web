{"version":3,"file":"utils.js","sources":["../../../src/shared/useCountDown/utils.ts"],"sourcesContent":["import { TimeData, TdUseCountDownShowTimes } from './type';\n\n/**\n * getRemainTimes\n * @param time\n * @returns\n */\nexport const getRemainTimes = (time?: number): TimeData => {\n  if (!time) {\n    return {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      milliseconds: 0,\n    };\n  }\n  const stime = Math.floor(time / 1000); // 秒\n  return {\n    days: Math.floor(stime / 3600 / 24),\n    hours: Math.floor((stime / 3600) % 24),\n    minutes: Math.floor((stime / 60) % 60),\n    seconds: stime % 60,\n    milliseconds: time % 1000,\n  };\n};\n\n/**\n * fillZero\n * @param num\n * @returns\n */\nexport const fillZero = (num: number, isMillieconds = false): string | number => {\n  if (isMillieconds) {\n    if (num >= 100) {\n      return num;\n    }\n\n    return num >= 10 ? `0${num}` : `00${num}`;\n  }\n\n  return num >= 10 ? num : `0${num}`;\n};\n\n/**\n * getMark\n * @param format\n * @param type\n * @returns\n */\nexport const getMark = (format: string, type: string): string => format?.split?.(type)?.[1]?.split?.('')?.[0];\n\n/**\n * getShowTimes\n * @param time\n * @returns\n */\nexport const getShowTimes = (times: TimeData, format: string, milliseconds = false): TdUseCountDownShowTimes => {\n  format = (format || 'DD:HH:mm:ss')?.toUpperCase?.();\n  milliseconds && !format.includes(':SSS') && (format = format.concat(':SSS'));\n  const showTimes: TdUseCountDownShowTimes = [];\n  if (format?.indexOf('DD') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'DD'),\n      value: fillZero(times?.days),\n    });\n  }\n  if (format?.indexOf('HH') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'HH'),\n      value: fillZero(times?.hours),\n    });\n  }\n  if (format?.indexOf('MM') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'MM'),\n      value: fillZero(times?.minutes),\n    });\n  }\n  if (format?.indexOf('SS') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'SS'),\n      value: fillZero(times?.seconds),\n    });\n  }\n  if (format?.indexOf('SSS') > -1) {\n    showTimes?.push({\n      mark: getMark(format, 'SSS'),\n      value: fillZero(times?.milliseconds, true),\n    });\n  }\n\n  return showTimes;\n};\n\n/**\n * @param {number} targetCount 不小于1的整数，表示经过targetCount帧之后返回结果\n * @return {Promise<number>}\n */\nexport const getScreenFps = (() => {\n  const { requestAnimationFrame, mozRequestAnimationFrame, webkitRequestAnimationFrame } = window as any;\n  // 先做一下兼容性处理\n  const nextFrame = [requestAnimationFrame, mozRequestAnimationFrame, webkitRequestAnimationFrame]?.find?.((fn) => fn);\n  //\n  if (!nextFrame) {\n    console.error('requestAnimationFrame is not supported!');\n    return;\n  }\n  return (targetCount = 50) => {\n    if (targetCount < 1) {\n      return;\n    }\n    let count = 0;\n    const beginDate = Date.now();\n    return new Promise((resolve) => {\n      (function log() {\n        nextFrame?.(() => {\n          if (++count >= targetCount) {\n            const diffDate = Date.now() - beginDate;\n            const fps = (count / diffDate) * 1000;\n            return resolve(fps);\n          }\n          log();\n        });\n      })();\n    });\n  };\n})();\n"],"names":["getRemainTimes","time","days","hours","minutes","seconds","milliseconds","stime","Math","floor","fillZero","num","isMillieconds","getMark","format","type","split","getShowTimes","times","toUpperCase","includes","concat","showTimes","indexOf","push","mark","value","getScreenFps","window","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","nextFrame","find","fn","console","error","targetCount","count","beginDate","Date","now","Promise","resolve","log","diffDate","fps"],"mappings":"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"}