{"version":3,"file":"util.js","sources":["../../src/shared/util.ts"],"sourcesContent":["export function isArray(x: unknown): boolean {\n  return Array.isArray(x);\n}\n\nexport function isNumber(x: unknown): boolean {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}\n\nexport function isString(x: unknown): boolean {\n  return typeof x === 'string';\n}\n\nexport function isBoolean(x: unknown): boolean {\n  return typeof x === 'boolean';\n}\n\nexport function isNull(s: unknown): boolean {\n  return s === null;\n}\n\nexport function isObject(x: unknown): boolean {\n  return x === null ? false : Object.prototype.toString.call(x) === '[object Object]';\n}\n\nexport function isDate(x: unknown): x is Date {\n  return Object.prototype.toString.call(x) === '[object Date]';\n}\n\nexport function isFunction(x: unknown): boolean {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\n\nexport function toCamel(str: string): string {\n  return str.replace(/^\\S/, (m) => m.toUpperCase());\n}\n\nexport const inBrowser = typeof window !== 'undefined';\n\n/**\n * 计算字符串字符的长度并可以截取字符串。\n * @param str 传入字符串\n * @param maxCharacter 规定最大字符串长度\n * @returns 当没有传入maxCharacter时返回字符串字符长度，当传入maxCharacter时返回截取之后的字符串和长度。\n */\nexport function getCharacterLength(str: string, maxCharacter?: number) {\n  const hasMaxCharacter = typeof maxCharacter === 'number';\n  if (!str || str.length === 0) {\n    if (hasMaxCharacter) {\n      return {\n        length: 0,\n        characters: str,\n      };\n    }\n    return 0;\n  }\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    let currentStringLength = 0;\n    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {\n      currentStringLength = 2;\n    } else {\n      currentStringLength = 1;\n    }\n    if (hasMaxCharacter && len + currentStringLength > maxCharacter) {\n      return {\n        length: len,\n        characters: str.slice(0, i),\n      };\n    }\n    len += currentStringLength;\n  }\n  if (hasMaxCharacter) {\n    return {\n      length: len,\n      characters: str,\n    };\n  }\n  return len;\n}\n"],"names":["isArray","x","Array","isNumber","Object","prototype","toString","call","isString","isBoolean","isNull","s","isObject","isDate","isFunction","toCamel","str","replace","m","toUpperCase","inBrowser","window","getCharacterLength","maxCharacter","hasMaxCharacter","length","characters","len","i","currentStringLength","charCodeAt","slice"],"mappings":"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"}