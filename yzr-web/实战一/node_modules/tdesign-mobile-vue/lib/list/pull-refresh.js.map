{"version":3,"file":"pull-refresh.js","sources":["../../src/list/pull-refresh.vue","../../src/list/pull-refresh.vue?vue&type=template&id=03a5dd44&lang.js"],"sourcesContent":["<template>\n  <div :class=\"name\">\n    <div\n      :class=\"`${name}__track`\"\n      :style=\"trackStyle\"\n      @touchstart.stop=\"onTouchStart\"\n      @touchmove.stop=\"onTouchMove\"\n      @touchend.stop=\"onTouchEnd\"\n      @touchcancel.stop=\"onTouchEnd\"\n    >\n      <div :class=\"`${name}__head`\">\n        <div v-if=\"SHOW_TEXT_LIST.includes(state.status)\">{{ TEXT_MAP[state.status] }}</div>\n        <div v-if=\"state.status === 'loading'\">\n          <t-loading text=\"加载中...\" />\n        </div>\n      </div>\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, reactive, ref, computed, watch } from 'vue';\nimport config from '../config';\nimport TLoading from '../loading';\n\nconst { prefix } = config;\nconst name = `${prefix}-pull-refresh`;\ntype PullRefreshStatus = 'normal' | 'loading' | 'loosing' | 'pulling' | 'success';\n\nfunction useTouch() {\n  const startY = ref(0);\n  const deltaY = ref(0);\n\n  const start = (event: TouchEvent) => {\n    startY.value = event.touches[0].clientY;\n    deltaY.value = 0;\n  };\n  const move = (event: TouchEvent) => {\n    const touch = event.touches[0];\n    deltaY.value = touch.clientY - startY.value;\n  };\n  return {\n    startY,\n    deltaY,\n    start,\n    move,\n  };\n}\n\nconst PULL_DISTANCE = 50;\nconst ANIMATION_DURATION = 300;\nconst TEXT_MAP = {\n  loading: '加载中',\n  pulling: '下拉即可刷新...',\n  loosing: '释放即可刷新...',\n  success: '刷新成功',\n};\nconst SHOW_TEXT_LIST = ['pulling', 'loosing', 'success'];\nconst PullRefreshProps = {\n  modelValue: Boolean,\n};\n\nconst easeDistance = (distance: number, pullDistance: number) => {\n  if (distance > pullDistance) {\n    if (distance < pullDistance * 2) {\n      distance = pullDistance + (distance - pullDistance) / 2;\n    } else {\n      distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n    }\n  }\n  return Math.round(distance);\n};\n\nfunction isElement(node: Element) {\n  const ELEMENT_NODE_TYPE = 1;\n  return node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === ELEMENT_NODE_TYPE;\n}\nconst getScrollParent = (node: Element) => {\n  let res = node;\n  while (res && isElement(res)) {\n    if (/auto|scroll/i.test(window.getComputedStyle(res).overflowY)) {\n      return res;\n    }\n    res = res.parentNode as Element;\n  }\n};\n\nexport default defineComponent({\n  name,\n  components: { TLoading },\n  props: PullRefreshProps,\n  emits: ['refresh', 'update:modelValue'],\n  setup(props, { emit }) {\n    const state = reactive({\n      status: 'normal' as PullRefreshStatus,\n      distance: 0,\n      duration: 0,\n    });\n\n    const setStatus = (distance: number, isLoading?: boolean) => {\n      state.distance = distance;\n\n      if (isLoading) {\n        state.status = 'loading';\n      } else if (distance === 0) {\n        state.status = 'normal';\n      } else if (distance < PULL_DISTANCE) {\n        state.status = 'pulling';\n      } else {\n        state.status = 'loosing';\n      }\n    };\n\n    const touch = useTouch();\n\n    const isTouchable = () => state.status !== 'loading' && state.status !== 'success';\n\n    const isReachTop = (e: TouchEvent) => {\n      const scrollParent = getScrollParent(e.target as Element);\n      return !scrollParent || !scrollParent.scrollTop;\n    };\n\n    const onTouchStart = (e: TouchEvent) => {\n      if (!isReachTop(e)) return;\n\n      if (isTouchable()) {\n        state.duration = 0;\n        touch.start(e);\n      }\n    };\n\n    const onTouchMove = (e: TouchEvent) => {\n      if (!isTouchable()) return;\n      if (!isReachTop(e)) return;\n\n      const { deltaY } = touch;\n      if (deltaY.value >= 0) {\n        e.preventDefault();\n        setStatus(easeDistance(deltaY.value, PULL_DISTANCE));\n      }\n      touch.move(e);\n    };\n\n    const onTouchEnd = () => {\n      state.duration = ANIMATION_DURATION;\n      if (state.status === 'loosing') {\n        emit('update:modelValue', true);\n        nextTick(() => emit('refresh'));\n      } else {\n        setStatus(0);\n      }\n    };\n\n    const trackStyle = computed(() => ({\n      transitionDuration: `${state.duration}ms`,\n      transform: state.distance ? `translate3d(0, ${state.distance}px, 0)` : '',\n    }));\n\n    watch(\n      () => props.modelValue,\n      (value) => {\n        if (value) {\n          setStatus(PULL_DISTANCE, true);\n        } else {\n          state.status = 'success';\n\n          setTimeout(() => {\n            setStatus(0, false);\n          }, ANIMATION_DURATION);\n        }\n      },\n    );\n\n    return {\n      name,\n      state,\n      trackStyle,\n      TEXT_MAP,\n      SHOW_TEXT_LIST,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"name\">\n    <div\n      :class=\"`${name}__track`\"\n      :style=\"trackStyle\"\n      @touchstart.stop=\"onTouchStart\"\n      @touchmove.stop=\"onTouchMove\"\n      @touchend.stop=\"onTouchEnd\"\n      @touchcancel.stop=\"onTouchEnd\"\n    >\n      <div :class=\"`${name}__head`\">\n        <div v-if=\"SHOW_TEXT_LIST.includes(state.status)\">{{ TEXT_MAP[state.status] }}</div>\n        <div v-if=\"state.status === 'loading'\">\n          <t-loading text=\"加载中...\" />\n        </div>\n      </div>\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, reactive, ref, computed, watch } from 'vue';\nimport config from '../config';\nimport TLoading from '../loading';\n\nconst { prefix } = config;\nconst name = `${prefix}-pull-refresh`;\ntype PullRefreshStatus = 'normal' | 'loading' | 'loosing' | 'pulling' | 'success';\n\nfunction useTouch() {\n  const startY = ref(0);\n  const deltaY = ref(0);\n\n  const start = (event: TouchEvent) => {\n    startY.value = event.touches[0].clientY;\n    deltaY.value = 0;\n  };\n  const move = (event: TouchEvent) => {\n    const touch = event.touches[0];\n    deltaY.value = touch.clientY - startY.value;\n  };\n  return {\n    startY,\n    deltaY,\n    start,\n    move,\n  };\n}\n\nconst PULL_DISTANCE = 50;\nconst ANIMATION_DURATION = 300;\nconst TEXT_MAP = {\n  loading: '加载中',\n  pulling: '下拉即可刷新...',\n  loosing: '释放即可刷新...',\n  success: '刷新成功',\n};\nconst SHOW_TEXT_LIST = ['pulling', 'loosing', 'success'];\nconst PullRefreshProps = {\n  modelValue: Boolean,\n};\n\nconst easeDistance = (distance: number, pullDistance: number) => {\n  if (distance > pullDistance) {\n    if (distance < pullDistance * 2) {\n      distance = pullDistance + (distance - pullDistance) / 2;\n    } else {\n      distance = pullDistance * 1.5 + (distance - pullDistance * 2) / 4;\n    }\n  }\n  return Math.round(distance);\n};\n\nfunction isElement(node: Element) {\n  const ELEMENT_NODE_TYPE = 1;\n  return node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === ELEMENT_NODE_TYPE;\n}\nconst getScrollParent = (node: Element) => {\n  let res = node;\n  while (res && isElement(res)) {\n    if (/auto|scroll/i.test(window.getComputedStyle(res).overflowY)) {\n      return res;\n    }\n    res = res.parentNode as Element;\n  }\n};\n\nexport default defineComponent({\n  name,\n  components: { TLoading },\n  props: PullRefreshProps,\n  emits: ['refresh', 'update:modelValue'],\n  setup(props, { emit }) {\n    const state = reactive({\n      status: 'normal' as PullRefreshStatus,\n      distance: 0,\n      duration: 0,\n    });\n\n    const setStatus = (distance: number, isLoading?: boolean) => {\n      state.distance = distance;\n\n      if (isLoading) {\n        state.status = 'loading';\n      } else if (distance === 0) {\n        state.status = 'normal';\n      } else if (distance < PULL_DISTANCE) {\n        state.status = 'pulling';\n      } else {\n        state.status = 'loosing';\n      }\n    };\n\n    const touch = useTouch();\n\n    const isTouchable = () => state.status !== 'loading' && state.status !== 'success';\n\n    const isReachTop = (e: TouchEvent) => {\n      const scrollParent = getScrollParent(e.target as Element);\n      return !scrollParent || !scrollParent.scrollTop;\n    };\n\n    const onTouchStart = (e: TouchEvent) => {\n      if (!isReachTop(e)) return;\n\n      if (isTouchable()) {\n        state.duration = 0;\n        touch.start(e);\n      }\n    };\n\n    const onTouchMove = (e: TouchEvent) => {\n      if (!isTouchable()) return;\n      if (!isReachTop(e)) return;\n\n      const { deltaY } = touch;\n      if (deltaY.value >= 0) {\n        e.preventDefault();\n        setStatus(easeDistance(deltaY.value, PULL_DISTANCE));\n      }\n      touch.move(e);\n    };\n\n    const onTouchEnd = () => {\n      state.duration = ANIMATION_DURATION;\n      if (state.status === 'loosing') {\n        emit('update:modelValue', true);\n        nextTick(() => emit('refresh'));\n      } else {\n        setStatus(0);\n      }\n    };\n\n    const trackStyle = computed(() => ({\n      transitionDuration: `${state.duration}ms`,\n      transform: state.distance ? `translate3d(0, ${state.distance}px, 0)` : '',\n    }));\n\n    watch(\n      () => props.modelValue,\n      (value) => {\n        if (value) {\n          setStatus(PULL_DISTANCE, true);\n        } else {\n          state.status = 'success';\n\n          setTimeout(() => {\n            setStatus(0, false);\n          }, ANIMATION_DURATION);\n        }\n      },\n    );\n\n    return {\n      name,\n      state,\n      trackStyle,\n      TEXT_MAP,\n      SHOW_TEXT_LIST,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","useTouch","startY","ref","deltaY","start","event","value","touches","clientY","move","touch","PULL_DISTANCE","ANIMATION_DURATION","TEXT_MAP","loading","pulling","loosing","success","SHOW_TEXT_LIST","PullRefreshProps","modelValue","Boolean","easeDistance","distance","pullDistance","Math","round","isElement","node","ELEMENT_NODE_TYPE","tagName","nodeType","getScrollParent","res","test","window","getComputedStyle","overflowY","parentNode","defineComponent","components","TLoading","props","emits","setup","emit","state","reactive","status","duration","setStatus","isLoading","isTouchable","isReachTop","e","scrollParent","target","scrollTop","onTouchStart","onTouchMove","preventDefault","onTouchEnd","nextTick","trackStyle","computed","transitionDuration","transform","watch","setTimeout","_createElementBlock","class","_ctx","_createElementVNode","style","onTouchstart","onTouchmove","onTouchend","onTouchcancel","includes","_openBlock","_hoisted_1","_toDisplayString","_hoisted_2","_createVNode","_component_t_loading","text","_renderSlot","$slots"],"mappings":"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"}