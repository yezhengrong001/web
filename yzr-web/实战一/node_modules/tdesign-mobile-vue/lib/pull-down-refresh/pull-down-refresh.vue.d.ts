declare const _default: import("vue").DefineComponent<{
    loadingBarHeight: {
        type: import("vue").PropType<string | number | undefined>;
        default: number;
    };
    loadingProps: {
        type: import("vue").PropType<import("../loading").TdLoadingProps | undefined>;
    };
    loadingTexts: {
        type: import("vue").PropType<string[] | undefined>;
        default: () => string[] | undefined;
    };
    maxBarHeight: {
        type: import("vue").PropType<string | number | undefined>;
        default: number;
    };
    refreshTimeout: {
        type: NumberConstructor;
        default: number;
    };
    value: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultValue: BooleanConstructor;
    onChange: import("vue").PropType<((value: boolean) => void) | undefined>;
    onRefresh: import("vue").PropType<(() => void) | undefined>;
    onTimeout: import("vue").PropType<(() => void) | undefined>;
}, {
    name: string;
    status: import("vue").ComputedRef<"initial" | "loading" | "loosing" | "pulling" | "success">;
    trackStyle: import("vue").ComputedRef<{
        transitionDuration: string;
        transform: string;
    }>;
    loadingText: import("vue").ComputedRef<string>;
    maxBarStyles: import("vue").ComputedRef<{
        height: string | undefined;
    }>;
    loadingBarStyles: import("vue").ComputedRef<{
        height: string | undefined;
    }>;
    loadingIconProps: import("vue").ComputedRef<{
        default?: string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined;
        content?: string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined;
        delay?: number | undefined;
        duration?: number | undefined;
        indicator?: boolean | undefined;
        inheritColor?: boolean | undefined;
        layout?: "vertical" | "horizontal" | undefined;
        loading?: boolean | undefined;
        pause?: boolean | undefined;
        progress?: number | undefined;
        reverse?: boolean | undefined;
        size?: string | undefined;
        text?: string | undefined;
        theme?: "error" | "spinner" | "dots" | "circular" | "bar" | undefined;
    }>;
    loadingBar: import("vue").Ref<null>;
    maxBar: import("vue").Ref<null>;
    onTouchStart: (e: TouchEvent) => void;
    onTouchMove: (e: TouchEvent) => void;
    onTouchEnd: (e: TouchEvent) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "update:value" | "refresh" | "timeout", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    loadingBarHeight: {
        type: import("vue").PropType<string | number | undefined>;
        default: number;
    };
    loadingProps: {
        type: import("vue").PropType<import("../loading").TdLoadingProps | undefined>;
    };
    loadingTexts: {
        type: import("vue").PropType<string[] | undefined>;
        default: () => string[] | undefined;
    };
    maxBarHeight: {
        type: import("vue").PropType<string | number | undefined>;
        default: number;
    };
    refreshTimeout: {
        type: NumberConstructor;
        default: number;
    };
    value: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultValue: BooleanConstructor;
    onChange: import("vue").PropType<((value: boolean) => void) | undefined>;
    onRefresh: import("vue").PropType<(() => void) | undefined>;
    onTimeout: import("vue").PropType<(() => void) | undefined>;
}>>, {
    value: boolean;
    modelValue: boolean;
    defaultValue: boolean;
    loadingBarHeight: string | number | undefined;
    loadingTexts: string[] | undefined;
    maxBarHeight: string | number | undefined;
    refreshTimeout: number;
}>;
export default _default;
