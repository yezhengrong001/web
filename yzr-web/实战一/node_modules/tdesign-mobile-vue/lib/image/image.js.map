{"version":3,"file":"image.js","sources":["../../src/image/image.vue","../../src/image/image.vue?vue&type=template&id=20dad93f&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div v-if=\"loadingValue || errorValue\" :class=\"`${name}__status`\">\n      <t-node :content=\"statusContent\" />\n    </div>\n    <img\n      ref=\"imageDOM\"\n      :class=\"`${name}__img`\"\n      :style=\"imageStyles\"\n      :src=\"realSrc\"\n      :alt=\"alt\"\n      @load=\"handleImgLoadCompleted\"\n      @error=\"handleImgLoadError\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, SetupContext, getCurrentInstance, h, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { EllipsisIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport { useEmitEvent, renderTNode, TNode } from '../shared';\nimport ImageProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ImageProps,\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    // 默认loading和error状态展示，slot支持Node和Function\n    const internalInstance = getCurrentInstance();\n    const statusContent = computed(() => {\n      if (context.slots?.loading && loadingValue.value) {\n        return renderTNode(internalInstance, 'loading');\n      }\n      if (!context.slots?.loading && loadingValue.value) {\n        return h(EllipsisIcon);\n      }\n      if (context.slots?.error && errorValue.value) {\n        return renderTNode(internalInstance, 'error');\n      }\n      if (!context.slots?.error && errorValue.value) {\n        return h(CloseIcon);\n      }\n      return '';\n    });\n\n    // 记录图片的loading、error状态\n    const loadingValue = ref(true);\n    const errorValue = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => {\n      return {\n        objectFit: props.fit,\n        objectPosition: props.position,\n      };\n    });\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      emitEvent('load', e);\n      loadingValue.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      emitEvent('error', e);\n      loadingValue.value = false;\n      errorValue.value = true;\n    };\n    return {\n      imageDOM,\n      statusContent,\n      name,\n      classes,\n      imageStyles,\n      loadingValue,\n      realSrc,\n      errorValue,\n      handleImgLoadCompleted,\n      handleImgLoadError,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div v-if=\"loadingValue || errorValue\" :class=\"`${name}__status`\">\n      <t-node :content=\"statusContent\" />\n    </div>\n    <img\n      ref=\"imageDOM\"\n      :class=\"`${name}__img`\"\n      :style=\"imageStyles\"\n      :src=\"realSrc\"\n      :alt=\"alt\"\n      @load=\"handleImgLoadCompleted\"\n      @error=\"handleImgLoadError\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, SetupContext, getCurrentInstance, h, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { EllipsisIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport { useEmitEvent, renderTNode, TNode } from '../shared';\nimport ImageProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ImageProps,\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n\n    // 默认loading和error状态展示，slot支持Node和Function\n    const internalInstance = getCurrentInstance();\n    const statusContent = computed(() => {\n      if (context.slots?.loading && loadingValue.value) {\n        return renderTNode(internalInstance, 'loading');\n      }\n      if (!context.slots?.loading && loadingValue.value) {\n        return h(EllipsisIcon);\n      }\n      if (context.slots?.error && errorValue.value) {\n        return renderTNode(internalInstance, 'error');\n      }\n      if (!context.slots?.error && errorValue.value) {\n        return h(CloseIcon);\n      }\n      return '';\n    });\n\n    // 记录图片的loading、error状态\n    const loadingValue = ref(true);\n    const errorValue = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => {\n      return {\n        objectFit: props.fit,\n        objectPosition: props.position,\n      };\n    });\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      emitEvent('load', e);\n      loadingValue.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      emitEvent('error', e);\n      loadingValue.value = false;\n      errorValue.value = true;\n    };\n    return {\n      imageDOM,\n      statusContent,\n      name,\n      classes,\n      imageStyles,\n      loadingValue,\n      realSrc,\n      errorValue,\n      handleImgLoadCompleted,\n      handleImgLoadError,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","props","ImageProps","setup","context","emitEvent","useEmitEvent","emit","internalInstance","getCurrentInstance","statusContent","computed","slots","loading","loadingValue","value","renderTNode","h","EllipsisIcon","error","errorValue","CloseIcon","ref","imageStyles","objectFit","fit","objectPosition","position","classes","shape","imageDOM","realSrc","watchEffect","lazy","src","useIntersectionObserver","observerElement","_slicedToArray","isIntersecting","stop","handleImgLoadCompleted","e","handleImgLoadError","_createElementBlock","class","_ctx","_createVNode","_component_t_node","content","_createElementVNode","style","alt","onLoad","onError"],"mappings":"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"}