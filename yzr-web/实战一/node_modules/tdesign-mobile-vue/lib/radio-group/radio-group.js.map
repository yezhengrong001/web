{"version":3,"file":"radio-group.js","sources":["../../src/radio-group/radio-group.vue","../../src/radio-group/radio-group.vue?vue&type=template&id=63ba94bd&lang.js"],"sourcesContent":["<template>\n  <div :class=\"componentName\" role=\"radiogroup\">\n    <template v-if=\"options\">\n      <radio\n        v-for=\"(opt, idx) in groupOptions\"\n        :key=\"`radio-group-options-${idx}-${Math.random()}`\"\n        :name=\"name\"\n        :checked=\"value === opt.value\"\n        :disabled=\"'disabled' in opt ? opt.disabled : disabled\"\n        :value=\"opt.value\"\n        :label=\"opt.label\"\n      ></radio>\n    </template>\n    <slot v-if=\"!options\"></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, defineComponent, toRefs, computed, SetupContext } from 'vue';\nimport { useDefault } from '../shared';\nimport RadioGroupProps from '../radio/radio-group-props';\nimport { RadioOption, RadioOptionObj, RadioValue, TdRadioGroupProps } from '../radio/type';\nimport Radio from '../radio/radio.vue';\nimport config from '../config';\n\nconst { prefix } = config;\nconst componentName = `${prefix}-radio-group`;\n\nexport default defineComponent({\n  name: componentName,\n  components: { Radio },\n  props: RadioGroupProps,\n  emits: ['update:value', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const [groupValue, setGroupValue] = useDefault<RadioValue, TdRadioGroupProps>(\n      props,\n      context.emit,\n      'value',\n      'change',\n    );\n    const groupOptions = computed(() => {\n      return props.options?.map((option: RadioOption) => {\n        let opt = option as RadioOptionObj;\n        if (typeof option === 'string' || typeof option === 'number') {\n          opt = { value: option, label: option.toString() };\n        }\n        return opt;\n      });\n    });\n    const handleRadioChange = (val: RadioValue, e: Event) => {\n      setGroupValue(val, { e });\n    };\n    provide('rootGroupProps', props);\n    provide('rootGroupValue', groupValue);\n    provide('rootGroupChange', handleRadioChange);\n    return {\n      ...toRefs(props),\n      componentName,\n      groupOptions,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"componentName\" role=\"radiogroup\">\n    <template v-if=\"options\">\n      <radio\n        v-for=\"(opt, idx) in groupOptions\"\n        :key=\"`radio-group-options-${idx}-${Math.random()}`\"\n        :name=\"name\"\n        :checked=\"value === opt.value\"\n        :disabled=\"'disabled' in opt ? opt.disabled : disabled\"\n        :value=\"opt.value\"\n        :label=\"opt.label\"\n      ></radio>\n    </template>\n    <slot v-if=\"!options\"></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { provide, defineComponent, toRefs, computed, SetupContext } from 'vue';\nimport { useDefault } from '../shared';\nimport RadioGroupProps from '../radio/radio-group-props';\nimport { RadioOption, RadioOptionObj, RadioValue, TdRadioGroupProps } from '../radio/type';\nimport Radio from '../radio/radio.vue';\nimport config from '../config';\n\nconst { prefix } = config;\nconst componentName = `${prefix}-radio-group`;\n\nexport default defineComponent({\n  name: componentName,\n  components: { Radio },\n  props: RadioGroupProps,\n  emits: ['update:value', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const [groupValue, setGroupValue] = useDefault<RadioValue, TdRadioGroupProps>(\n      props,\n      context.emit,\n      'value',\n      'change',\n    );\n    const groupOptions = computed(() => {\n      return props.options?.map((option: RadioOption) => {\n        let opt = option as RadioOptionObj;\n        if (typeof option === 'string' || typeof option === 'number') {\n          opt = { value: option, label: option.toString() };\n        }\n        return opt;\n      });\n    });\n    const handleRadioChange = (val: RadioValue, e: Event) => {\n      setGroupValue(val, { e });\n    };\n    provide('rootGroupProps', props);\n    provide('rootGroupValue', groupValue);\n    provide('rootGroupChange', handleRadioChange);\n    return {\n      ...toRefs(props),\n      componentName,\n      groupOptions,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","componentName","defineComponent","name","components","Radio","props","RadioGroupProps","emits","setup","context","useDefault","emit","_slicedToArray","groupValue","setGroupValue","groupOptions","computed","options","map","option","opt","value","label","toString","handleRadioChange","val","e","provide","toRefs","_createElementBlock","class","_ctx","role","_openBlock","_Fragment","key","_renderList","idx","_createBlock","_component_radio","Math","random","checked","disabled","_renderSlot","$slots"],"mappings":"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"}