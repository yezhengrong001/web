/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var _common_js_loading_circleAdapter = require('../../_common/js/loading/circle-adapter.js');
var config = require('../../config.js');
require('@babel/runtime/helpers/defineProperty');
require('../../_common/js/utils/set-style.js');
require('../../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-loading__gradient");
var classname = "".concat(prefix, "-icon-loading");
var script = vue.defineComponent({
  name: name,
  props: {
    style: [Object, String]
  },
  setup: function setup() {
    var classes = [name, classname];
    return {
      name: name,
      classes: classes
    };
  },
  mounted: function mounted() {
    var _this = this;
    this.$nextTick(function () {
      _this.updateColor();
    });
  },
  updated: function updated() {
    this.updateColor();
  },
  methods: {
    updateColor: function updateColor() {
      var circleElem = this.$refs.circle;
      _common_js_loading_circleAdapter["default"](circleElem);
    }
  }
});

var _hoisted_1 = {
  x: "1",
  y: "1",
  width: "12",
  height: "12"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return vue.openBlock(), vue.createElementBlock("svg", {
    style: vue.normalizeStyle(_ctx.style),
    class: vue.normalizeClass(_ctx.classes),
    viewBox: "0 0 14 14",
    version: "1.1",
    width: "1em",
    height: "1em",
    xmlns: "http://www.w3.org/2000/svg"
  }, [(vue.openBlock(), vue.createElementBlock("foreignObject", _hoisted_1, [vue.createElementVNode("div", {
    ref: "circle",
    class: vue.normalizeClass("".concat(_ctx.name, "-conic"))
  }, null, 2)]))], 6);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=gradient.js.map
