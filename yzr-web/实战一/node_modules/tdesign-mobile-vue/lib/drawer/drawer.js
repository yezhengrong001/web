/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var popup_index = require('../popup/index.js');
var config = require('../config.js');
var drawer_props = require('./props.js');
var shared_useEmitEvent_index = require('../shared/useEmitEvent/index.js');
require('../popup/popup.js');
require('@babel/runtime/helpers/defineProperty');
require('@babel/runtime/helpers/slicedToArray');
require('../popup/props.js');
require('../overlay/index.js');
require('../overlay/overlay.js');
require('../overlay/props.js');
require('../shared/component.js');
require('../shared/useDefault/index.js');
require('lodash/camelCase');

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-drawer");
var script = vue.defineComponent({
  name: name,
  components: {
    TPopup: popup_index["default"]
  },
  props: drawer_props["default"],
  emits: ["update:visible", "itemClick", "overlayClick"],
  setup: function setup(props, context) {
    var emitEvent = shared_useEmitEvent_index.useEmitEvent(props, context.emit);
    var _toRefs = vue.toRefs(props),
      visible = _toRefs.visible,
      items = _toRefs.items,
      placement = _toRefs.placement,
      showOverlay = _toRefs.showOverlay,
      zIndex = _toRefs.zIndex,
      closeOnOverlayClick = _toRefs.closeOnOverlayClick;
    var open = vue.ref(visible.value || false);
    var dSideBarClassName = vue.computed(function () {
      return "".concat(name, "__sidebar");
    });
    var dSideBarItemClassName = vue.computed(function () {
      return "".concat(name, "__sidebar-item");
    });
    var dSideBarItemIconClassName = vue.computed(function () {
      return "".concat(name, "__sidebar-item-icon");
    });
    var dSideBarItemTitleClassName = vue.computed(function () {
      return "".concat(name, "__sidebar-item-title");
    });
    vue.watch(open, function () {
      emitEvent("update:visible", open.value);
    });
    vue.watch(visible, function () {
      open.value = visible.value;
    });
    var onItemClick = function onItemClick(index, item, context2) {
      emitEvent("itemClick", index, item, context2);
    };
    var onVisibleChange = function onVisibleChange(visible2) {
      if (showOverlay.value) {
        emitEvent("overlayClick", {
          visible: visible2
        });
      }
    };
    var onClose = function onClose() {
      emitEvent("close", {
        trigger: "overlay"
      });
    };
    return {
      items: items,
      placement: placement,
      showOverlay: showOverlay,
      zIndex: zIndex,
      closeOnOverlayClick: closeOnOverlayClick,
      open: open,
      dSideBarClassName: dSideBarClassName,
      dSideBarItemClassName: dSideBarItemClassName,
      dSideBarItemIconClassName: dSideBarItemIconClassName,
      dSideBarItemTitleClassName: dSideBarItemTitleClassName,
      onItemClick: onItemClick,
      onVisibleChange: onVisibleChange,
      onClose: onClose
    };
  }
});

var _hoisted_1 = ["onClick"];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_popup = vue.resolveComponent("t-popup");
  return vue.openBlock(), vue.createBlock(_component_t_popup, {
    modelValue: _ctx.open,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = function ($event) {
      return _ctx.open = $event;
    }),
    placement: _ctx.placement,
    "show-overlay": _ctx.showOverlay,
    "z-index": _ctx.zIndex,
    "close-on-overlay-click": _ctx.closeOnOverlayClick,
    onVisibleChange: _ctx.onVisibleChange,
    onClose: _ctx.onClose
  }, {
    default: vue.withCtx(function () {
      return [vue.createElementVNode("div", {
        class: vue.normalizeClass(_ctx.dSideBarClassName)
      }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.items, function (item, index) {
        return vue.openBlock(), vue.createElementBlock("div", {
          key: item.title,
          class: vue.normalizeClass(_ctx.dSideBarItemClassName),
          onClick: function onClick($event) {
            return _ctx.onItemClick(index, item, {
              e: $event
            });
          }
        }, [!!item.icon ? (vue.openBlock(), vue.createElementBlock("span", {
          key: 0,
          class: vue.normalizeClass(_ctx.dSideBarItemIconClassName)
        }, [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(item.icon)))], 2)) : vue.createCommentVNode("", true), vue.createElementVNode("div", {
          class: vue.normalizeClass(_ctx.dSideBarItemTitleClassName)
        }, vue.toDisplayString(item.title), 3)], 10, _hoisted_1);
      }), 128))], 2)];
    }),
    _: 1
  }, 8, ["modelValue", "placement", "show-overlay", "z-index", "close-on-overlay-click", "onVisibleChange", "onClose"]);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=drawer.js.map
