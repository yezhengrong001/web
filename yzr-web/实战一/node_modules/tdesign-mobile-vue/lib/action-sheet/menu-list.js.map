{"version":3,"file":"menu-list.js","sources":["../../src/action-sheet/menu-list.vue","../../src/action-sheet/menu-list.vue?vue&type=template&id=54824633&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}__menu`\">\n    <button\n      v-for=\"(item, index) in items\"\n      :key=\"index\"\n      :class=\"`${name}__cell`\"\n      :disabled=\"item.disabled\"\n      @click=\"handleSelected(index)\"\n    >\n      <slot name=\"cell\" :item=\"item\">\n        <div :class=\"`${name}__cell-text`\" :style=\"{ color: item.color }\">{{ item.label }}</div>\n      </slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, SetupContext, defineComponent, PropType } from 'vue';\n\nimport config from '../config';\nimport { ActionSheetItem } from './type';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  props: {\n    items: {\n      type: Array as PropType<ActionSheetItem[]>,\n      required: true,\n    },\n  },\n  emits: ['selected'],\n  setup(props, context: SetupContext) {\n    const handleSelected = (index: number) => {\n      context.emit('selected', index);\n    };\n\n    return {\n      name: ref(name),\n      handleSelected,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}__menu`\">\n    <button\n      v-for=\"(item, index) in items\"\n      :key=\"index\"\n      :class=\"`${name}__cell`\"\n      :disabled=\"item.disabled\"\n      @click=\"handleSelected(index)\"\n    >\n      <slot name=\"cell\" :item=\"item\">\n        <div :class=\"`${name}__cell-text`\" :style=\"{ color: item.color }\">{{ item.label }}</div>\n      </slot>\n    </button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, SetupContext, defineComponent, PropType } from 'vue';\n\nimport config from '../config';\nimport { ActionSheetItem } from './type';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  props: {\n    items: {\n      type: Array as PropType<ActionSheetItem[]>,\n      required: true,\n    },\n  },\n  emits: ['selected'],\n  setup(props, context: SetupContext) {\n    const handleSelected = (index: number) => {\n      context.emit('selected', index);\n    };\n\n    return {\n      name: ref(name),\n      handleSelected,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","props","items","type","Array","required","emits","setup","context","handleSelected","index","emit","ref","_createElementBlock","class","_ctx","_openBlock","_Fragment","_renderList","item","key","disabled","onClick","$event","_renderSlot","$slots","_createElementVNode","style","_normalizeStyle","color","_toDisplayString","label"],"mappings":";;;;;;;;;;;;;AAsBA,IAAQA,SAAWC,iBAAA,CAAXD;AAER,IAAME,OAAUF,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,EAAA,eAAA,CAAA,CAAA;AAEhB,aAAeG,mBAAgB,CAAA;AAC7BC,EAAAA,KAAO,EAAA;AACLC,IAAAA,KAAO,EAAA;AACLC,MAAAA,IAAM,EAAAC,KAAA;AACNC,MAAAA,QAAU,EAAA,IAAA;AACZ,KAAA;GACF;EACAC,KAAA,EAAO,CAAC,UAAU,CAAA;AAClBC,EAAAA,KAAA,EAAMN,SAAAA,KAAAA,CAAAA,OAAOO,OAAuB,EAAA;AAC5B,IAAA,IAAAC,cAAA,GAAiB,SAAjBA,cAAA,CAAkBC,KAAkB,EAAA;AAChCF,MAAAA,OAAA,CAAAG,IAAA,CAAK,YAAYD,KAAK,CAAA,CAAA;KAChC,CAAA;IAEO,OAAA;AACLX,MAAAA,IAAA,EAAMa,QAAIb,IAAI,CAAA;AACdU,MAAAA,cAAA,EAAAA,cAAAA;KACF,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;wBC3CC,EAAAI,sBAAA,CAYK,KAAA,EAAA;AAZCC,IAAAA,0BAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAIhB,IAAA,EAAA,QAAA,CAAA,CAAA;OAClBiB,aAAA,CAAA,IAAA,CAAA,EAAAH,sBAUQ,CAAAI,YAAA,EATkB,IAAA,EAAAC,cAAA,CAAAH,IAAA,CAAAb,KAAA,EAAhB,UAAAiB,IAAA,EAAMT,KAAK,EAAA;0BADrB,EAAAG,sBAAA,CAUQ,QAAA,EAAA;AARLO,MAAAA,GAAK,EAAAV,KAAA;AACLI,MAAAA,oCAAUC,IAAA,CAAIhB,IAAA,EAAA,QAAA,CAAA,CAAA;MACdsB,UAAUF,IAAK,CAAAE,QAAA;MACfC,OAAK,EAAA,iBAAAC,MAAA,EAAA;AAAA,QAAA,OAAER,IAAc,CAAAN,cAAA,CAACC,KAAK,CAAA,CAAA;AAAA,OAAA;QAE5Bc,eAEMT,IAFa,CAAAU,MAAA,EAAA,QAAA;AAAAN,MAAAA,IAAA,EAAAA,IAAAA;OAAnB,YAAA;AAAA,MAAA,OAEM,CADJO,uBAAuF,KAAA,EAAA;AAAjFZ,QAAAA,oCAAUC,IAAA,CAAIhB,IAAA,EAAA,aAAA,CAAA,CAAA;QAAgB4B,OAAKC,kBAAA,CAAA;UAAAC,KAAW,EAAAV,IAAA,CAAKU,KAAAA;;OAAY,EAAAC,mBAAA,CAAAX,IAAK,CAAAY;;;;;;;;;"}