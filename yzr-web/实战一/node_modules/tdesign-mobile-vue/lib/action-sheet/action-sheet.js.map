{"version":3,"file":"action-sheet.js","sources":["../../src/action-sheet/action-sheet.vue","../../src/action-sheet/action-sheet.vue?vue&type=template&id=82b57fe6&lang.js"],"sourcesContent":["<template>\n  <t-popup :class=\"name\" :visible=\"currentVisible\" placement=\"bottom\" @close=\"handleClose\">\n    <div :class=\"rootClasses\">\n      <!-- @ts-ignore -->\n      <menu-list v-if=\"type === 'list'\" :items=\"actionItems\" @selected=\"handleSelected\">\n        <template #cell=\"slotProps\">\n          <slot name=\"cell\" :item=\"slotProps.item\"></slot>\n        </template>\n      </menu-list>\n\n      <menu-grid v-else :items=\"actionItems\" :count=\"count\" @selected=\"handleSelected\">\n        <template #cell=\"slotProps\">\n          <slot name=\"cell\" :item=\"slotProps.item\"></slot>\n        </template>\n      </menu-grid>\n\n      <template v-if=\"showCancel\">\n        <div v-if=\"type === 'list'\" :class=\"`${name}__separation`\"></div>\n        <button :class=\"`${name}__action`\" @click=\"handleCancel\">{{ cancelText }}</button>\n      </template>\n    </div>\n  </t-popup>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, watch, defineComponent, PropType, ComputedRef, SetupContext } from 'vue';\nimport { useEmitEvent } from '../shared';\nimport MenuList from './menu-list.vue';\nimport MenuGrid from './menu-grid.vue';\nimport TPopup from '../popup';\nimport config from '../config';\nimport { ActionSheetItem } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  name,\n  components: {\n    TPopup,\n    MenuList,\n    MenuGrid,\n  },\n  props: {\n    modelValue: Boolean,\n    /**\n     * @description 是否显示\n     * @attribute visible\n     */\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * @description 菜单项\n     * @attribute items\n     */\n    items: {\n      type: Array as PropType<Array<ActionSheetItem | string>>,\n      required: true,\n    },\n    /**\n     * @description 展示类型\n     * @attribute type\n     */\n    type: {\n      type: String,\n      default: 'list',\n    },\n    /**\n     * @description grid时每页显示的数量\n     * @attribute count\n     */\n    count: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * @description 是否展示【取消】选项\n     * @attribute show-cancel\n     */\n    showCancel: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description 【取消】选项的文本\n     * @attribute cancel-text\n     */\n    cancelText: {\n      type: String,\n      default: '取消',\n    },\n  },\n  emits: ['selected', 'update:modelValue', 'cancel', 'close'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const actionItems = ref([]);\n\n    const currentVisible = computed(() => props.modelValue || props.visible) as ComputedRef<boolean>;\n    const rootClasses = computed(() => ({\n      [`${name}__panel`]: true,\n      [`${name}__panel-list`]: props.type === 'list',\n      [`${name}__panel-grid`]: props.type === 'grid',\n    }));\n\n    watch(\n      () => props.items,\n      (val) => {\n        let items = JSON.parse(JSON.stringify(val));\n        // 数据格式处理，统一转为object结构\n        items = items.map((item: unknown) => {\n          if (typeof item === 'string') {\n            return { label: item };\n          }\n\n          return item;\n        });\n        actionItems.value = items;\n      },\n      {\n        immediate: true,\n        deep: true,\n      },\n    );\n\n    const handleCancel = () => {\n      emitEvent('cancel');\n      context.emit('update:modelValue', false);\n    };\n\n    const handleSelected = (index: number) => {\n      emitEvent('selected', props.items[index], index);\n    };\n\n    const handleClose = () => {\n      emitEvent('close');\n      context.emit('update:modelValue', false);\n    };\n\n    return {\n      name: ref(name),\n      rootClasses,\n      actionItems,\n      currentVisible,\n      handleCancel,\n      handleSelected,\n      handleClose,\n    };\n  },\n});\n</script>\n","<template>\n  <t-popup :class=\"name\" :visible=\"currentVisible\" placement=\"bottom\" @close=\"handleClose\">\n    <div :class=\"rootClasses\">\n      <!-- @ts-ignore -->\n      <menu-list v-if=\"type === 'list'\" :items=\"actionItems\" @selected=\"handleSelected\">\n        <template #cell=\"slotProps\">\n          <slot name=\"cell\" :item=\"slotProps.item\"></slot>\n        </template>\n      </menu-list>\n\n      <menu-grid v-else :items=\"actionItems\" :count=\"count\" @selected=\"handleSelected\">\n        <template #cell=\"slotProps\">\n          <slot name=\"cell\" :item=\"slotProps.item\"></slot>\n        </template>\n      </menu-grid>\n\n      <template v-if=\"showCancel\">\n        <div v-if=\"type === 'list'\" :class=\"`${name}__separation`\"></div>\n        <button :class=\"`${name}__action`\" @click=\"handleCancel\">{{ cancelText }}</button>\n      </template>\n    </div>\n  </t-popup>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, watch, defineComponent, PropType, ComputedRef, SetupContext } from 'vue';\nimport { useEmitEvent } from '../shared';\nimport MenuList from './menu-list.vue';\nimport MenuGrid from './menu-grid.vue';\nimport TPopup from '../popup';\nimport config from '../config';\nimport { ActionSheetItem } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  name,\n  components: {\n    TPopup,\n    MenuList,\n    MenuGrid,\n  },\n  props: {\n    modelValue: Boolean,\n    /**\n     * @description 是否显示\n     * @attribute visible\n     */\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * @description 菜单项\n     * @attribute items\n     */\n    items: {\n      type: Array as PropType<Array<ActionSheetItem | string>>,\n      required: true,\n    },\n    /**\n     * @description 展示类型\n     * @attribute type\n     */\n    type: {\n      type: String,\n      default: 'list',\n    },\n    /**\n     * @description grid时每页显示的数量\n     * @attribute count\n     */\n    count: {\n      type: Number,\n      default: 8,\n    },\n    /**\n     * @description 是否展示【取消】选项\n     * @attribute show-cancel\n     */\n    showCancel: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * @description 【取消】选项的文本\n     * @attribute cancel-text\n     */\n    cancelText: {\n      type: String,\n      default: '取消',\n    },\n  },\n  emits: ['selected', 'update:modelValue', 'cancel', 'close'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const actionItems = ref([]);\n\n    const currentVisible = computed(() => props.modelValue || props.visible) as ComputedRef<boolean>;\n    const rootClasses = computed(() => ({\n      [`${name}__panel`]: true,\n      [`${name}__panel-list`]: props.type === 'list',\n      [`${name}__panel-grid`]: props.type === 'grid',\n    }));\n\n    watch(\n      () => props.items,\n      (val) => {\n        let items = JSON.parse(JSON.stringify(val));\n        // 数据格式处理，统一转为object结构\n        items = items.map((item: unknown) => {\n          if (typeof item === 'string') {\n            return { label: item };\n          }\n\n          return item;\n        });\n        actionItems.value = items;\n      },\n      {\n        immediate: true,\n        deep: true,\n      },\n    );\n\n    const handleCancel = () => {\n      emitEvent('cancel');\n      context.emit('update:modelValue', false);\n    };\n\n    const handleSelected = (index: number) => {\n      emitEvent('selected', props.items[index], index);\n    };\n\n    const handleClose = () => {\n      emitEvent('close');\n      context.emit('update:modelValue', false);\n    };\n\n    return {\n      name: ref(name),\n      rootClasses,\n      actionItems,\n      currentVisible,\n      handleCancel,\n      handleSelected,\n      handleClose,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TPopup","MenuList","MenuGrid","props","modelValue","Boolean","visible","type","default","items","Array","required","String","count","Number","showCancel","cancelText","emits","setup","context","emitEvent","useEmitEvent","emit","actionItems","ref","currentVisible","computed","rootClasses","_defineProperty","watch","val","JSON","parse","stringify","map","item","label","value","immediate","deep","handleCancel","handleSelected","index","handleClose","_createBlock","_component_t_popup","class","_ctx","placement","onClose","_createElementVNode","_component_menu_list","onSelected","cell","_withCtx","slotProps","_renderSlot","$slots","_component_menu_grid","_createElementBlock","_Fragment","key","onClick"],"mappings":"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"}