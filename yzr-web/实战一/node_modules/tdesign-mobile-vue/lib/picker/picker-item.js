/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var picker_picker_class = require('./picker.class.js');
var shared_useEmitEvent_index = require('../shared/useEmitEvent/index.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-picker-item");
var script = vue.defineComponent({
  name: name,
  props: {
    options: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    defaultValue: {
      type: [String, Number],
      default: void 0
    },
    renderLabel: {
      type: Function,
      default: void 0
    }
  },
  emits: ["pick"],
  setup: function setup(props, context) {
    var emitEvent = shared_useEmitEvent_index.useEmitEvent(props, context.emit);
    var picker = null;
    var el = document.createElement("div");
    var root = vue.ref(el);
    var getIndexByValue = function getIndexByValue(val) {
      var defaultIndex = 0;
      if (val !== void 0) {
        defaultIndex = props.options.findIndex(function (item) {
          return item.value === val;
        });
      }
      return defaultIndex < 0 ? 0 : defaultIndex;
    };
    var className = vue.computed(function () {
      return "".concat(name);
    });
    var wrapperClassName = vue.computed(function () {
      return ["".concat(name, "__wrapper")];
    });
    var itemClassName = vue.computed(function () {
      return ["".concat(name, "__item")];
    });
    var setIndex = function setIndex(index) {
      if (picker) {
        picker.updateItems();
        picker.updateIndex(index, {
          isChange: false
        });
      }
    };
    var setValue = function setValue(value) {
      if (picker) {
        picker.updateItems();
        picker.updateIndex(getIndexByValue(value), {
          isChange: false
        });
      }
    };
    var setOptions = function setOptions() {
      picker && picker.update();
    };
    var setUpdateItems = function setUpdateItems() {
      picker && picker.updateItems();
    };
    context.expose({
      setIndex: setIndex,
      setValue: setValue,
      setOptions: setOptions,
      setUpdateItems: setUpdateItems
    });
    vue.onMounted(function () {
      picker = new picker_picker_class["default"]({
        el: root.value,
        defaultIndex: getIndexByValue(props.defaultValue) || 0,
        onChange: function onChange(index) {
          var curItem = props.options[index];
          var changeValue = {
            value: curItem.value,
            index: index
          };
          emitEvent("pick", changeValue);
        }
      });
    });
    return _objectSpread({
      root: root,
      className: className,
      wrapperClassName: wrapperClassName,
      itemClassName: itemClassName
    }, vue.toRefs(props));
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return vue.openBlock(), vue.createElementBlock("div", {
    ref: "root",
    class: vue.normalizeClass(_ctx.className)
  }, [vue.createElementVNode("ul", {
    class: vue.normalizeClass(_ctx.wrapperClassName)
  }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.options, function (option, index) {
    return vue.openBlock(), vue.createElementBlock("li", {
      key: index,
      class: vue.normalizeClass(_ctx.itemClassName)
    }, vue.toDisplayString(_ctx.renderLabel ? _ctx.renderLabel(option) : option.label), 3);
  }), 128))], 2)], 2);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=picker-item.js.map
