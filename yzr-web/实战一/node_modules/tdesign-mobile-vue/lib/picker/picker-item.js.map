{"version":3,"file":"picker-item.js","sources":["../../src/picker/picker-item.vue","../../src/picker/picker-item.vue?vue&type=template&id=96b0cbfc&lang.js"],"sourcesContent":["<template>\n  <div ref=\"root\" :class=\"className\">\n    <ul :class=\"wrapperClassName\">\n      <li v-for=\"(option, index) in options\" :key=\"index\" :class=\"itemClassName\">\n        {{ renderLabel ? renderLabel(option) : option.label }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, onMounted, toRefs, defineComponent, PropType, SetupContext } from 'vue';\nimport config from '../config';\nimport Picker from './picker.class';\nimport { PickerColumnItem, PickerValue } from './type';\nimport { useEmitEvent } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-picker-item`;\nexport default defineComponent({\n  name,\n  props: {\n    options: {\n      type: Array as PropType<PickerColumnItem[]>,\n      default: () => [],\n    },\n    defaultValue: {\n      type: [String, Number] as PropType<PickerValue>,\n      default: undefined,\n    },\n    renderLabel: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  emits: ['pick'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    let picker: Picker | null = null;\n    const el = document.createElement('div');\n    const root = ref(el);\n    const getIndexByValue = (val: number | string | undefined) => {\n      let defaultIndex = 0;\n      if (val !== undefined) {\n        defaultIndex = props.options.findIndex((item: any) => item.value === val);\n      }\n      return defaultIndex < 0 ? 0 : defaultIndex;\n    };\n\n    const className = computed(() => `${name}`);\n    const wrapperClassName = computed(() => [`${name}__wrapper`]);\n    const itemClassName = computed(() => [`${name}__item`]);\n    const setIndex = (index: number) => {\n      if (picker) {\n        picker.updateItems();\n        picker.updateIndex(index, {\n          isChange: false,\n        });\n      }\n    };\n    const setValue = (value: number | string | undefined) => {\n      if (picker) {\n        picker.updateItems();\n        picker.updateIndex(getIndexByValue(value), {\n          isChange: false,\n        });\n      }\n    };\n    const setOptions = () => {\n      picker && picker.update();\n    };\n    const setUpdateItems = () => {\n      picker && picker.updateItems();\n    };\n    context.expose({\n      setIndex,\n      setValue,\n      setOptions,\n      setUpdateItems,\n    });\n\n    onMounted(() => {\n      picker = new Picker({\n        el: root.value,\n        defaultIndex: getIndexByValue(props.defaultValue) || 0,\n        onChange: (index: number) => {\n          const curItem = props.options[index];\n          const changeValue = { value: curItem.value, index };\n          emitEvent('pick', changeValue);\n        },\n      });\n    });\n\n    return {\n      root,\n      className,\n      wrapperClassName,\n      itemClassName,\n      ...toRefs(props),\n    };\n  },\n});\n</script>\n","<template>\n  <div ref=\"root\" :class=\"className\">\n    <ul :class=\"wrapperClassName\">\n      <li v-for=\"(option, index) in options\" :key=\"index\" :class=\"itemClassName\">\n        {{ renderLabel ? renderLabel(option) : option.label }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, onMounted, toRefs, defineComponent, PropType, SetupContext } from 'vue';\nimport config from '../config';\nimport Picker from './picker.class';\nimport { PickerColumnItem, PickerValue } from './type';\nimport { useEmitEvent } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-picker-item`;\nexport default defineComponent({\n  name,\n  props: {\n    options: {\n      type: Array as PropType<PickerColumnItem[]>,\n      default: () => [],\n    },\n    defaultValue: {\n      type: [String, Number] as PropType<PickerValue>,\n      default: undefined,\n    },\n    renderLabel: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  emits: ['pick'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    let picker: Picker | null = null;\n    const el = document.createElement('div');\n    const root = ref(el);\n    const getIndexByValue = (val: number | string | undefined) => {\n      let defaultIndex = 0;\n      if (val !== undefined) {\n        defaultIndex = props.options.findIndex((item: any) => item.value === val);\n      }\n      return defaultIndex < 0 ? 0 : defaultIndex;\n    };\n\n    const className = computed(() => `${name}`);\n    const wrapperClassName = computed(() => [`${name}__wrapper`]);\n    const itemClassName = computed(() => [`${name}__item`]);\n    const setIndex = (index: number) => {\n      if (picker) {\n        picker.updateItems();\n        picker.updateIndex(index, {\n          isChange: false,\n        });\n      }\n    };\n    const setValue = (value: number | string | undefined) => {\n      if (picker) {\n        picker.updateItems();\n        picker.updateIndex(getIndexByValue(value), {\n          isChange: false,\n        });\n      }\n    };\n    const setOptions = () => {\n      picker && picker.update();\n    };\n    const setUpdateItems = () => {\n      picker && picker.updateItems();\n    };\n    context.expose({\n      setIndex,\n      setValue,\n      setOptions,\n      setUpdateItems,\n    });\n\n    onMounted(() => {\n      picker = new Picker({\n        el: root.value,\n        defaultIndex: getIndexByValue(props.defaultValue) || 0,\n        onChange: (index: number) => {\n          const curItem = props.options[index];\n          const changeValue = { value: curItem.value, index };\n          emitEvent('pick', changeValue);\n        },\n      });\n    });\n\n    return {\n      root,\n      className,\n      wrapperClassName,\n      itemClassName,\n      ...toRefs(props),\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","props","options","type","Array","default","defaultValue","String","Number","renderLabel","Function","emits","setup","context","emitEvent","useEmitEvent","emit","picker","el","document","createElement","root","ref","getIndexByValue","val","defaultIndex","findIndex","item","value","className","computed","wrapperClassName","itemClassName","setIndex","index","updateItems","updateIndex","isChange","setValue","setOptions","update","setUpdateItems","expose","onMounted","Picker","onChange","curItem","changeValue","toRefs","_createElementBlock","class","_ctx","_createElementVNode","_openBlock","_Fragment","_renderList","option","key","_toDisplayString","label"],"mappings":"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"}