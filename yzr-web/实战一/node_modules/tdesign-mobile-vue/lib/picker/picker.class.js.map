{"version":3,"file":"picker.class.js","sources":["../../src/picker/picker.class.ts"],"sourcesContent":["import config from '../config';\n\nconst { prefix } = config;\n\nexport interface PickerOptions {\n  defaultIndex?: number;\n  el: HTMLElement | HTMLDivElement | HTMLUListElement;\n  onChange: (index: number) => void;\n}\n\nconst quartEaseOut = function (t: number, b: number, c: number, d: number) {\n  let tempT = t;\n  return -c * ((tempT = tempT / d - 1) * tempT * tempT * tempT - 1) + b;\n};\n\n/**\n * constant var\n */\nexport const DEFAULT_ITEM_HEIGHT = 40;\nconst DEFAULT_HOLDER_HEIGHT = 200;\nconst OFFSET_OF_BOUND = 60;\nexport const ANIMATION_TIME_LIMIT = 460;\nconst ANIMATION_DURATION = 150;\n\n/**\n * @name picker\n * @description 阻尼参数来源iscroll5，灵感来自mui.picker\n * @param {[HTMLDivElement]} el   [picker-item的DOM元素]\n * @param {[Function]} onChange   [发生change事件时候的回调]\n * @param {[Number]} defaultIndex [picker-item开始的索引值]\n */\nclass Picker {\n  holder: HTMLElement | HTMLDivElement | HTMLUListElement;\n\n  options: PickerOptions;\n\n  list: HTMLUListElement | null = null;\n\n  elementItems: HTMLLIElement[] = [];\n\n  height: number = DEFAULT_HOLDER_HEIGHT;\n\n  curIndex = 0;\n\n  itemClassName = '';\n\n  itemSelectedClassName = '';\n\n  itemHeight: number = DEFAULT_ITEM_HEIGHT;\n\n  lastMoveTime = 0;\n\n  lastMoveStart = 0;\n\n  stopInertiaMove = false;\n\n  startY = 0;\n\n  isPicking = false;\n\n  offsetYOfStartBound: number = OFFSET_OF_BOUND;\n\n  offsetYOfEndBound: number = -OFFSET_OF_BOUND;\n\n  offsetY = 0;\n\n  offsetYOfStart = 0;\n\n  offsetYOfEnd = 0;\n\n  onChange: (index: number) => void;\n\n  constructor(options: PickerOptions) {\n    if (!options.el) throw new Error('options el needed!');\n    this.holder = options.el;\n    this.options = options || {};\n    this.onChange = options.onChange;\n    this.init();\n  }\n\n  init(): void {\n    // 惯性滚动\n    this.initScrollParams();\n    // item 样式\n    this.setSelectedClassName();\n    // 绑定事件\n    this.bindEvent();\n  }\n\n  /**\n   * @description 获取所有的列表DOM元素\n   */\n  updateItems(): void {\n    this.elementItems = [...this.holder.querySelectorAll('li')];\n    const itemLen = this.elementItems.length;\n    this.offsetYOfEnd = -this.itemHeight * (itemLen - 3);\n    this.offsetYOfEndBound = -(this.itemHeight * (itemLen - 3) + OFFSET_OF_BOUND);\n  }\n\n  /**\n   * @description 初始化滚动参数\n   */\n  initScrollParams(): void {\n    this.list = this.holder.querySelector('ul');\n    this.elementItems = [...this.holder.querySelectorAll('li')];\n    this.itemHeight = this.holder.querySelector('li')?.offsetHeight || DEFAULT_ITEM_HEIGHT;\n    this.height = this.holder.offsetHeight || DEFAULT_HOLDER_HEIGHT;\n    this.curIndex = this.options.defaultIndex || 0;\n    this.itemClassName = `${prefix}-picker-item__item`;\n    this.itemSelectedClassName = `${prefix}-picker-item__item--selected`;\n    this.itemHeight = DEFAULT_ITEM_HEIGHT;\n    this.startY = 0;\n    this.isPicking = false;\n    this.lastMoveTime = 0;\n    this.lastMoveStart = 0;\n    this.stopInertiaMove = false;\n    const startOffsetY = (-this.curIndex + 2) * this.itemHeight;\n    const itemLen = this.elementItems.length;\n    this.setOffsetY(startOffsetY);\n    this.offsetYOfStart = startOffsetY;\n    this.offsetYOfEnd = -this.itemHeight * (itemLen - 3);\n    this.offsetYOfStartBound = this.itemHeight * 2 + OFFSET_OF_BOUND;\n    this.offsetYOfEndBound = -(this.itemHeight * (itemLen - 3) + OFFSET_OF_BOUND);\n  }\n\n  bindEvent(): void {\n    this.holder.addEventListener('touchstart', (e) => this.touchStartHandler(e as TouchEvent), false);\n    this.holder.addEventListener('touchmove', (e) => this.touchMoveHandler(e as TouchEvent), false);\n    this.holder.addEventListener('touchend', (e) => this.touchEndHandler(e as TouchEvent), false);\n    this.holder.addEventListener('touchcancel', (e) => this.touchEndHandler(e as TouchEvent), false);\n  }\n\n  touchStartHandler(event: TouchEvent): void {\n    event.preventDefault();\n    this.isPicking = true;\n    if (!this.holder) return;\n    if (this.list) this.list.style.transition = '';\n    this.startY = event.changedTouches[0].pageY;\n    // 更新惯性参数\n    this.updateInertiaParams(event, true);\n  }\n\n  touchMoveHandler(event: TouchEvent): void {\n    event.preventDefault();\n    if (!this.isPicking || !this.holder) return;\n    const endY = event.changedTouches[0].pageY;\n    const dragRange = endY - this.startY;\n    this.updateInertiaParams(event, false);\n    const moveOffsetY = (-this.curIndex + 2) * this.itemHeight + dragRange;\n    this.setOffsetY(moveOffsetY);\n  }\n\n  touchEndHandler(event: TouchEvent): void {\n    event.preventDefault();\n    this.isPicking = false;\n    if (!this.holder) return;\n    const point = event.changedTouches[0];\n    const nowTime = event.timeStamp || Date.now();\n    // move time gap\n    const moveTime = nowTime - this.lastMoveTime;\n    // 超出一定时间不再惯性滚动\n    if (moveTime > ANIMATION_TIME_LIMIT) {\n      this.stopInertiaMove = false;\n      this.endScroll();\n      return;\n    }\n    // 手指滑动的速度\n    const v = (point.pageY - this.lastMoveStart) / moveTime;\n    // 加速度方向\n    const dir = v > 0 ? -1 : 1;\n    // 摩擦系数，参考iscroll的阻尼系数\n    const dampingCoefficient = 0.0008;\n    // 加速度\n    const deceleration = -1 * dir * dampingCoefficient;\n    // 滚动持续时间\n    const duration = Math.abs(v / deceleration);\n    const endY = event.changedTouches[0].pageY;\n    const dragRange = endY - this.startY;\n    // 滚动距离\n    const dist = v * duration - (duration ** 2 * deceleration) / 2 + dragRange;\n    if (dist === 0) {\n      this.stopInertiaMove = false;\n      this.endScroll();\n      return;\n    }\n    this.scrollDist(nowTime, this.offsetY, dist, duration);\n  }\n\n  /**\n   * @description 更新惯性参数\n   * @param event\n   * @param isStart\n   */\n  updateInertiaParams(event: TouchEvent, isStart: boolean): void {\n    const point = event.changedTouches[0];\n    if (isStart) {\n      this.lastMoveStart = point.pageY;\n      this.lastMoveTime = event.timeStamp || Date.now();\n    }\n    this.stopInertiaMove = true;\n  }\n\n  /**\n   * @description 根据计算的物理惯性距离滚动\n   * @param now\n   * @param startOffsetY\n   * @param dist\n   * @param duration\n   */\n  scrollDist(now: number, startOffsetY: number, dist: number, duration: number): void {\n    this.stopInertiaMove = false;\n    let start: any = null;\n    const inertiaMove = (timestamp: number) => {\n      if (this.stopInertiaMove) {\n        return;\n      }\n      if (!start) start = timestamp;\n      const progress = timestamp - start;\n      const newOffsetY = quartEaseOut(progress, startOffsetY, dist, duration);\n      this.setOffsetY(newOffsetY);\n      if (progress > duration || newOffsetY > this.offsetYOfStartBound || newOffsetY < this.offsetYOfEndBound) {\n        this.endScroll();\n      } else {\n        window.requestAnimationFrame(inertiaMove);\n      }\n    };\n    window.requestAnimationFrame(inertiaMove);\n  }\n\n  /**\n   * @description 更新picker，一般当数据变化需要ui更新的时候调用\n   */\n  update(): void {\n    this.updateItems();\n    const updateIndex = this.curIndex > this.elementItems.length - 1 ? 0 : this.curIndex;\n    this.updateIndex(updateIndex);\n  }\n\n  /**\n   * @description 更新picker索引，数据变化时调用\n   * @param index\n   * @param duration\n   */\n  updateIndex(index: number, options?: any): void {\n    const realOptions = {\n      duration: 460,\n      isChange: true,\n      ...options,\n    };\n    this.curIndex = index;\n    this.setSelectedClassName();\n    const moveOffsetY = (-index + 2) * this.itemHeight;\n    if (this.list) {\n      this.list.style.transform = `translate(0,${moveOffsetY}px) translateZ(0)`;\n      this.list.style.transitionDuration = `${realOptions.duration}ms`;\n      this.list.style.transitionTimingFunction = 'ease-out';\n    }\n    realOptions.isChange && this.onChange(index);\n  }\n\n  /**\n   * @description 获取当前索引\n   */\n  getCurIndex(): number {\n    return this.curIndex;\n  }\n\n  /**\n   * @description 适配3d， TBD\n   * @param index\n   */\n  fix3d(index: number): void {\n    for (let i = 0; i < this.elementItems.length; i++) {\n      const deg = 25 * (-index + i);\n      this.elementItems[i].style.transform = `rotateX(${deg}deg)`;\n      this.elementItems[i].style.webkitTransform = `rotateX(${deg}deg)`;\n    }\n  }\n\n  /**\n   * @description 设置item样式\n   */\n  setSelectedClassName(): void {\n    const regClass = new RegExp(this.itemClassName, 'i');\n    const regSelected = new RegExp(this.itemSelectedClassName, 'i');\n    this.elementItems.forEach((item, i) => {\n      const tempItem = item;\n      const itemClass = tempItem.className;\n      if (itemClass === '' || !itemClass) {\n        tempItem.className = this.itemClassName;\n      } else {\n        if (!regClass.test(itemClass)) {\n          tempItem.classList.add(this.itemClassName);\n        }\n        if (regSelected.test(itemClass)) {\n          tempItem.classList.remove(this.itemSelectedClassName);\n        }\n      }\n      if (this.curIndex === i) {\n        tempItem.classList.add(this.itemSelectedClassName);\n      }\n    });\n  }\n\n  /**\n   * 设置当前picker的滚动位移\n   * @param offsetY\n   */\n  setOffsetY(offsetY: number): void {\n    this.offsetY = offsetY;\n    if (this.list) {\n      this.list.style.transform = `translate3d(0, ${offsetY}px, 0)`;\n    }\n  }\n\n  /**\n   * @description 结束滚动时的回调\n   */\n  endScroll(): void {\n    if (this.stopInertiaMove) return;\n    let curIndex = 0;\n    if (this.offsetY > this.offsetYOfStartBound) {\n      curIndex = 0;\n      if (this.list) {\n        this.list.style.transition = `${ANIMATION_DURATION}ms ease-out`;\n      }\n    } else if (this.offsetY < this.offsetYOfEndBound) {\n      curIndex = this.elementItems.length - 1;\n      if (this.list) {\n        this.list.style.transition = `${ANIMATION_DURATION}ms ease-out`;\n      }\n    } else {\n      if (this.list) {\n        this.list.style.transition = `${ANIMATION_DURATION}ms ease-out`;\n      }\n      curIndex = 2 - Math.round(this.offsetY / this.itemHeight);\n      if (curIndex < 0) curIndex = 0;\n      if (curIndex > this.elementItems.length - 1) curIndex = this.elementItems.length - 1;\n    }\n    const offsetY = (-curIndex + 2) * this.itemHeight;\n    this.setOffsetY(offsetY);\n    if (curIndex !== this.curIndex) {\n      // 防止事件重复触发\n      this.curIndex = curIndex;\n      this.setSelectedClassName();\n      this.onChange(this.curIndex);\n    }\n  }\n\n  destroy(): void {\n    // @ts-ignore: TODO\n    delete this.holder;\n  }\n}\n\nexport default Picker;\n"],"names":["prefix","config","quartEaseOut","t","b","c","d","tempT","DEFAULT_ITEM_HEIGHT","DEFAULT_HOLDER_HEIGHT","OFFSET_OF_BOUND","ANIMATION_TIME_LIMIT","ANIMATION_DURATION","Picker","options","_classCallCheck","_defineProperty","el","Error","holder","onChange","init","_createClass","initScrollParams","setSelectedClassName","bindEvent","elementItems","querySelectorAll","itemLen","length","offsetYOfEnd","itemHeight","offsetYOfEndBound","list","querySelector","offsetHeight","height","curIndex","defaultIndex","itemClassName","itemSelectedClassName","startY","isPicking","lastMoveTime","lastMoveStart","stopInertiaMove","startOffsetY","setOffsetY","offsetYOfStart","offsetYOfStartBound","addEventListener","e","touchStartHandler","touchMoveHandler","touchEndHandler","event","preventDefault","style","transition","changedTouches","pageY","updateInertiaParams","endY","dragRange","moveOffsetY","point","nowTime","timeStamp","Date","now","moveTime","endScroll","v","dir","dampingCoefficient","deceleration","duration","Math","abs","dist","scrollDist","offsetY","isStart","start","inertiaMove","timestamp","progress","newOffsetY","window","requestAnimationFrame","updateItems","updateIndex","index","realOptions","isChange","transform","transitionDuration","transitionTimingFunction","i","deg","webkitTransform","regClass","RegExp","regSelected","forEach","item","tempItem","itemClass","className","test","classList","add","remove","round"],"mappings":"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"}