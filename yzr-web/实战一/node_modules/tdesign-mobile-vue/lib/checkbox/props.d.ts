import { TdCheckboxProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    align: {
        type: PropType<"left" | "right" | undefined>;
        default: "left" | "right" | undefined;
        validator(val: TdCheckboxProps['align']): boolean;
    };
    checkAll: BooleanConstructor;
    checked: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultChecked: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    contentDisabled: BooleanConstructor;
    default: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    icon: {
        type: PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue)[] | undefined>;
    };
    indeterminate: BooleanConstructor;
    label: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    maxContentRow: {
        type: NumberConstructor;
        default: number;
    };
    maxLabelRow: {
        type: NumberConstructor;
        default: number;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    readonly: BooleanConstructor;
    value: {
        type: PropType<string | number | undefined>;
    };
    onChange: PropType<((checked: boolean, context: {
        e: Event;
    }) => void) | undefined>;
};
export default _default;
