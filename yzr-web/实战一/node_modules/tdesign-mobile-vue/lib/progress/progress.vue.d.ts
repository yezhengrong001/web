declare const _default: import("vue").DefineComponent<{
    color: {
        type: import("vue").PropType<string | string[] | Record<string, string> | undefined>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: boolean;
    };
    percentage: {
        type: NumberConstructor;
        default: number;
    };
    status: {
        type: import("vue").PropType<import("./type").StatusEnum | undefined>;
        validator(val: import("./type").StatusEnum | undefined): boolean;
    };
    strokeWidth: {
        type: import("vue").PropType<string | number | undefined>;
    };
    trackColor: {
        type: StringConstructor;
        default: string;
    };
}, {
    name: string;
    rootClasses: import("vue").ComputedRef<string[]>;
    progressBarPercenStyle: import("vue").ComputedRef<{
        width: string;
        background: string | undefined;
    }>;
    progressBarStyle: import("vue").ComputedRef<{
        height: string;
        backgroundColor: string;
    }>;
    progressLabelContent: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: import("vue").PropType<string | string[] | Record<string, string> | undefined>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: boolean;
    };
    percentage: {
        type: NumberConstructor;
        default: number;
    };
    status: {
        type: import("vue").PropType<import("./type").StatusEnum | undefined>;
        validator(val: import("./type").StatusEnum | undefined): boolean;
    };
    strokeWidth: {
        type: import("vue").PropType<string | number | undefined>;
    };
    trackColor: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    label: string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined;
    color: string | string[] | Record<string, string> | undefined;
    percentage: number;
    trackColor: string;
}>;
export default _default;
