import { Ref } from 'vue';
declare const _default: import("vue").DefineComponent<{
    badgeProps: {
        type: import("vue").PropType<import("../badge").TdBadgeProps | undefined>;
    };
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    subTabBar: {
        type: import("vue").PropType<import("./type").SubTabBarItem[] | undefined>;
    };
    value: {
        type: import("vue").PropType<string | number | undefined>;
    };
}, {
    prefix: string;
    componentName: string;
    isChecked: import("vue").ComputedRef<any>;
    toggle: () => void;
    isSpread: Ref<boolean>;
    selectChild: (childName: number | string) => void;
    itemContent: import("vue").ComputedRef<any>;
    iconContent: import("vue").ComputedRef<any>;
    value: Ref<string | number | undefined>;
    icon: Ref<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    badgeProps: Ref<import("../badge").TdBadgeProps | undefined>;
    subTabBar: Ref<import("./type").SubTabBarItem[] | undefined>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    badgeProps: {
        type: import("vue").PropType<import("../badge").TdBadgeProps | undefined>;
    };
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    subTabBar: {
        type: import("vue").PropType<import("./type").SubTabBarItem[] | undefined>;
    };
    value: {
        type: import("vue").PropType<string | number | undefined>;
    };
}>>, {}>;
export default _default;
