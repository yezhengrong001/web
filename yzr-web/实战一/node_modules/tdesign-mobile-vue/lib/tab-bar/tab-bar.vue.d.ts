declare const _default: import("vue").DefineComponent<{
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    value: {
        type: import("vue").PropType<string | number | (string | number)[] | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<string | number | (string | number)[] | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<string | number | (string | number)[] | undefined>;
        default: undefined;
    };
    onChange: import("vue").PropType<(() => void) | undefined>;
}, {
    tabbarClass: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "update:value" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    value: {
        type: import("vue").PropType<string | number | (string | number)[] | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<string | number | (string | number)[] | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<string | number | (string | number)[] | undefined>;
        default: undefined;
    };
    onChange: import("vue").PropType<(() => void) | undefined>;
}>>, {
    fixed: boolean;
    value: string | number | (string | number)[] | undefined;
    modelValue: string | number | (string | number)[] | undefined;
    bordered: boolean;
    defaultValue: string | number | (string | number)[] | undefined;
}>;
export default _default;
