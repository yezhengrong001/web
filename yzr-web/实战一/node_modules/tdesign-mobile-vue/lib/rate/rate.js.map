{"version":3,"file":"rate.js","sources":["../../src/rate/rate.vue","../../src/rate/rate.vue?vue&type=template&id=40c12d14&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}`\">\n    <ul ref=\"rateWrapper\" :class=\"`${name}--list`\" @touchstart=\"onTouchstart\" @touchmove=\"onTouchmove\">\n      <li v-for=\"n in count\" :key=\"n\" :class=\"classes(n)\" :style=\"{ marginRight: `${count > n ? gap : 0}px` }\">\n        <span :class=\"`${name}--placeholder`\">\n          <slot name=\"icon\">\n            <component :is=\"startComponent\" :size=\"size\" :style=\"{ color: colors[1] }\" />\n          </slot>\n        </span>\n        <template v-if=\"allowHalf\">\n          <span :class=\"`${name}--icon-left`\" @click=\"onClick(n - 0.5)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconHalfStyle(n)\" />\n            </slot>\n          </span>\n          <span :class=\"`${name}--icon-right`\" @click=\"onClick(n)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n            </slot>\n          </span>\n        </template>\n        <span v-else :class=\"`${name}--icon`\" @click=\"onClick(n)\">\n          <slot name=\"icon\">\n            <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n          </slot>\n        </span>\n      </li>\n    </ul>\n    <span v-if=\"showText\" :class=\"`${name}--text`\">{{ rateText }}</span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, SetupContext, defineComponent, ExtractPropTypes, PropType, ComputedRef } from 'vue';\nimport { StarFilledIcon, StarIcon } from 'tdesign-icons-vue-next';\nimport rateProps from './props';\nimport config from '../config';\nimport { TdRateProps } from './type';\nimport { useDefault } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-rate`;\n\ninterface RangeTypes {\n  score: number;\n  left: number;\n}\n\nexport default defineComponent({\n  name,\n  components: { StarFilledIcon, StarIcon },\n  props: rateProps,\n  emits: ['change', 'update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const rateWrapper = ref<HTMLElement | null>(null);\n    const [actualVal] = useDefault<number, TdRateProps>(props, context.emit, 'value', 'change');\n    const rateText = computed(() => {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n\n      return actualVal.value > 0 ? `${actualVal.value} 分` : '';\n    });\n    const colors = computed(() => {\n      if (Array.isArray(props.color)) return props.color;\n\n      return [props.color, undefined];\n    });\n\n    const iconHalfStyle = (n: number) => ({\n      color: actualVal.value + 0.5 === n || actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n    const iconFullStyle = (n: number) => ({\n      color: actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n\n    const startComponent = props.variant === 'filled' ? StarFilledIcon : StarIcon;\n\n    const classes = (n: number) => ({\n      [`${name}--item`]: true,\n      [`${name}-full`]: actualVal.value >= n,\n      [`${name}-half`]: actualVal.value + 0.5 === n,\n    });\n\n    function onClick(current: number) {\n      if (props.disabled) return;\n      actualVal.value = props.clearable && actualVal.value === current ? 0 : current;\n    }\n\n    let ranges: Array<RangeTypes> = [];\n    function onTouchstart() {\n      ranges = [];\n\n      if (rateWrapper.value) {\n        const items = rateWrapper.value.children;\n        Array.from(items).forEach((node, index) => {\n          const { left, width } = node.getBoundingClientRect();\n          if (props.allowHalf) {\n            ranges.push({ score: index + 0.5, left }, { score: index + 1, left: left + width / 2 });\n          } else {\n            ranges.push({ score: index + 1, left });\n          }\n        });\n      }\n    }\n\n    function onTouchmove(e: TouchEvent) {\n      if (props.disabled) return;\n\n      const { clientX } = e.touches[0];\n\n      let score: number = props.allowHalf ? 0.5 : 1;\n\n      for (let i = ranges.length - 1; i >= 0; i--) {\n        if (clientX > ranges[i].left) {\n          score = ranges[i].score;\n          break;\n        } else {\n          score = 0;\n        }\n      }\n      actualVal.value = score;\n    }\n\n    return {\n      name: ref(name),\n      classes,\n      rateWrapper,\n      actualVal,\n      iconHalfStyle,\n      iconFullStyle,\n      colors,\n      startComponent,\n      rateText,\n      onClick,\n      onTouchstart,\n      onTouchmove,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}`\">\n    <ul ref=\"rateWrapper\" :class=\"`${name}--list`\" @touchstart=\"onTouchstart\" @touchmove=\"onTouchmove\">\n      <li v-for=\"n in count\" :key=\"n\" :class=\"classes(n)\" :style=\"{ marginRight: `${count > n ? gap : 0}px` }\">\n        <span :class=\"`${name}--placeholder`\">\n          <slot name=\"icon\">\n            <component :is=\"startComponent\" :size=\"size\" :style=\"{ color: colors[1] }\" />\n          </slot>\n        </span>\n        <template v-if=\"allowHalf\">\n          <span :class=\"`${name}--icon-left`\" @click=\"onClick(n - 0.5)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconHalfStyle(n)\" />\n            </slot>\n          </span>\n          <span :class=\"`${name}--icon-right`\" @click=\"onClick(n)\">\n            <slot name=\"icon\">\n              <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n            </slot>\n          </span>\n        </template>\n        <span v-else :class=\"`${name}--icon`\" @click=\"onClick(n)\">\n          <slot name=\"icon\">\n            <star-filled-icon :size=\"size\" :style=\"iconFullStyle(n)\" />\n          </slot>\n        </span>\n      </li>\n    </ul>\n    <span v-if=\"showText\" :class=\"`${name}--text`\">{{ rateText }}</span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, SetupContext, defineComponent, ExtractPropTypes, PropType, ComputedRef } from 'vue';\nimport { StarFilledIcon, StarIcon } from 'tdesign-icons-vue-next';\nimport rateProps from './props';\nimport config from '../config';\nimport { TdRateProps } from './type';\nimport { useDefault } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-rate`;\n\ninterface RangeTypes {\n  score: number;\n  left: number;\n}\n\nexport default defineComponent({\n  name,\n  components: { StarFilledIcon, StarIcon },\n  props: rateProps,\n  emits: ['change', 'update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const rateWrapper = ref<HTMLElement | null>(null);\n    const [actualVal] = useDefault<number, TdRateProps>(props, context.emit, 'value', 'change');\n    const rateText = computed(() => {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n\n      return actualVal.value > 0 ? `${actualVal.value} 分` : '';\n    });\n    const colors = computed(() => {\n      if (Array.isArray(props.color)) return props.color;\n\n      return [props.color, undefined];\n    });\n\n    const iconHalfStyle = (n: number) => ({\n      color: actualVal.value + 0.5 === n || actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n    const iconFullStyle = (n: number) => ({\n      color: actualVal.value >= n ? colors.value[0] : 'transparent',\n    });\n\n    const startComponent = props.variant === 'filled' ? StarFilledIcon : StarIcon;\n\n    const classes = (n: number) => ({\n      [`${name}--item`]: true,\n      [`${name}-full`]: actualVal.value >= n,\n      [`${name}-half`]: actualVal.value + 0.5 === n,\n    });\n\n    function onClick(current: number) {\n      if (props.disabled) return;\n      actualVal.value = props.clearable && actualVal.value === current ? 0 : current;\n    }\n\n    let ranges: Array<RangeTypes> = [];\n    function onTouchstart() {\n      ranges = [];\n\n      if (rateWrapper.value) {\n        const items = rateWrapper.value.children;\n        Array.from(items).forEach((node, index) => {\n          const { left, width } = node.getBoundingClientRect();\n          if (props.allowHalf) {\n            ranges.push({ score: index + 0.5, left }, { score: index + 1, left: left + width / 2 });\n          } else {\n            ranges.push({ score: index + 1, left });\n          }\n        });\n      }\n    }\n\n    function onTouchmove(e: TouchEvent) {\n      if (props.disabled) return;\n\n      const { clientX } = e.touches[0];\n\n      let score: number = props.allowHalf ? 0.5 : 1;\n\n      for (let i = ranges.length - 1; i >= 0; i--) {\n        if (clientX > ranges[i].left) {\n          score = ranges[i].score;\n          break;\n        } else {\n          score = 0;\n        }\n      }\n      actualVal.value = score;\n    }\n\n    return {\n      name: ref(name),\n      classes,\n      rateWrapper,\n      actualVal,\n      iconHalfStyle,\n      iconFullStyle,\n      colors,\n      startComponent,\n      rateText,\n      onClick,\n      onTouchstart,\n      onTouchmove,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","StarFilledIcon","StarIcon","props","rateProps","emits","setup","context","rateWrapper","ref","useDefault","emit","_slicedToArray","actualVal","rateText","computed","Array","isArray","texts","length","value","colors","color","iconHalfStyle","n","iconFullStyle","startComponent","variant","classes","_defineProperty","onClick","current","disabled","clearable","ranges","onTouchstart","items","children","from","forEach","node","index","getBoundingClientRect","left","width","allowHalf","push","score","onTouchmove","e","clientX","touches","i","_createElementBlock","class","_ctx","_createElementVNode","_Fragment","_renderList","count","key","_normalizeClass","style","_normalizeStyle","marginRight","gap","_renderSlot","_openBlock","_createBlock","_resolveDynamicComponent","size","$event","_createVNode","_component_star_filled_icon","showText"],"mappings":"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"}