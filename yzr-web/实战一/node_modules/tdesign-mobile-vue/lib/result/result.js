/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var result_props = require('./props.js');
var config = require('../config.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-result");
var iconDefault = {
  default: vue.h(tdesignIconsVueNext.InfoCircleIcon),
  success: vue.h(tdesignIconsVueNext.CheckCircleIcon),
  warning: vue.h(tdesignIconsVueNext.InfoCircleIcon),
  error: vue.h(tdesignIconsVueNext.CloseCircleIcon)
};
var script = vue.defineComponent({
  name: name,
  components: {
    TNode: shared_renderTnode["default"]
  },
  props: result_props["default"],
  setup: function setup(props) {
    var internalInstance = vue.getCurrentInstance();
    var imageContent = vue.computed(function () {
      return shared_render.renderTNode(internalInstance, "image");
    });
    var titleContent = vue.computed(function () {
      return shared_render.renderTNode(internalInstance, "title");
    });
    var descriptionContent = vue.computed(function () {
      return shared_render.renderTNode(internalInstance, "description");
    });
    var classes = vue.computed(function () {
      return ["".concat(name), "".concat(name, "--theme-").concat(props.theme)];
    });
    var iconContent;
    if (props.icon !== "") {
      if (Object.keys(iconDefault).includes(props === null || props === void 0 ? void 0 : props.theme)) {
        var key = props.theme;
        iconContent = vue.computed(function () {
          return iconDefault === null || iconDefault === void 0 ? void 0 : iconDefault[key];
        });
      }
      iconContent = props.icon ? vue.computed(function () {
        return shared_render.renderTNode(internalInstance, "icon");
      }) : iconContent;
    }
    var baseImageProps = {
      src: props.image
    };
    var customImageProps = vue.computed(function () {
      return _objectSpread(_objectSpread({}, props.imageProps), baseImageProps);
    });
    return _objectSpread({
      name: name,
      classes: classes,
      imageContent: imageContent,
      customImageProps: customImageProps,
      iconContent: iconContent,
      titleContent: titleContent,
      descriptionContent: descriptionContent
    }, vue.toRefs(props));
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_image = vue.resolveComponent("t-image");
  var _component_t_node = vue.resolveComponent("t-node");
  return vue.openBlock(), vue.createElementBlock("div", {
    class: vue.normalizeClass(_ctx.classes)
  }, [vue.createElementVNode("div", {
    class: vue.normalizeClass("".concat(_ctx.name, "__thumb"))
  }, [_ctx.imageContent ? (vue.openBlock(), vue.createElementBlock(vue.Fragment, {
    key: 0
  }, [typeof _ctx.image === "string" ? (vue.openBlock(), vue.createBlock(_component_t_image, vue.normalizeProps(vue.mergeProps({
    key: 0
  }, _ctx.customImageProps)), null, 16)) : (vue.openBlock(), vue.createBlock(_component_t_node, {
    key: 1,
    content: _ctx.imageContent
  }, null, 8, ["content"]))], 64)) : (vue.openBlock(), vue.createElementBlock(vue.Fragment, {
    key: 1
  }, [_ctx.iconContent !== void 0 ? (vue.openBlock(), vue.createBlock(_component_t_node, {
    key: 0,
    class: vue.normalizeClass("".concat(_ctx.name, "__icon")),
    content: _ctx.iconContent
  }, null, 8, ["class", "content"])) : vue.createCommentVNode("", true)], 64))], 2), _ctx.titleContent ? (vue.openBlock(), vue.createElementBlock("div", {
    key: 0,
    class: vue.normalizeClass("".concat(_ctx.name, "__title"))
  }, [vue.createVNode(_component_t_node, {
    content: _ctx.titleContent
  }, null, 8, ["content"])], 2)) : vue.createCommentVNode("", true), _ctx.descriptionContent ? (vue.openBlock(), vue.createElementBlock("div", {
    key: 1,
    class: vue.normalizeClass("".concat(_ctx.name, "__description"))
  }, [vue.createVNode(_component_t_node, {
    content: _ctx.descriptionContent
  }, null, 8, ["content"])], 2)) : vue.createCommentVNode("", true)], 2);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=result.js.map
