{"version":3,"file":"message.js","sources":["../../src/message/message.vue","../../src/message/message.vue?vue&type=template&id=c72dc4a2&lang.js"],"sourcesContent":["<template>\n  <transition name=\"message\" @after-leave=\"afterLeave\" @after-enter=\"afterEnter\">\n    <div v-if=\"currentVisible\" ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n      <slot>\n        <slot name=\"icon\">\n          <check-circle-filled-icon v-if=\"theme === 'success'\" />\n          <error-circle-filled-icon v-else />\n        </slot>\n        <span :class=\"`${name}--txt`\">{{ content }}</span>\n        <close-icon v-if=\"closeBtn === true\" @click=\"onClose\" />\n        <t-node v-else :content=\"closeBtnContent\" />\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, watch, defineComponent, getCurrentInstance, SetupContext, toRefs } from 'vue';\nimport { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport messageProps from './props';\nimport config from '../config';\nimport { renderTNode, TNode, useEmitEvent, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-message`;\n\nexport default defineComponent({\n  name,\n  components: { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon, TNode },\n  props: messageProps,\n  emits: ['visible-change', 'open', 'opened', 'close', 'closed'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const root = ref(null);\n    const internalInstance = getCurrentInstance();\n    const closeBtnContent = computed(() => renderTNode(internalInstance, 'closeBtn'));\n    const { visible, modelValue } = toRefs(props);\n    const [currentVisible, setVisible] = useVModel(visible, modelValue, props.defaultValue, props.onChange);\n    const rootClasses = computed(() => ({\n      [name]: true,\n      [`${name}--${props.theme}`]: true,\n      [`${name}-align--${props.align}`]: !!props.align,\n    }));\n    const rootStyles = computed(() => ({\n      zIndex: props.zIndex,\n    }));\n\n    const onClose = () => {\n      emitEvent('close');\n      setVisible(false);\n    };\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val === false) return;\n\n        emitEvent('open');\n        setVisible(true);\n\n        if (props.duration > 0) {\n          setTimeout(onClose, props.duration);\n        }\n      },\n    );\n\n    return {\n      name: ref(name),\n      root,\n      currentVisible,\n      rootClasses,\n      rootStyles,\n      closeBtnContent,\n      onClose,\n      afterEnter: () => emitEvent('opened'),\n      afterLeave: () => emitEvent('closed'),\n    };\n  },\n});\n</script>\n","<template>\n  <transition name=\"message\" @after-leave=\"afterLeave\" @after-enter=\"afterEnter\">\n    <div v-if=\"currentVisible\" ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n      <slot>\n        <slot name=\"icon\">\n          <check-circle-filled-icon v-if=\"theme === 'success'\" />\n          <error-circle-filled-icon v-else />\n        </slot>\n        <span :class=\"`${name}--txt`\">{{ content }}</span>\n        <close-icon v-if=\"closeBtn === true\" @click=\"onClose\" />\n        <t-node v-else :content=\"closeBtnContent\" />\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, watch, defineComponent, getCurrentInstance, SetupContext, toRefs } from 'vue';\nimport { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport messageProps from './props';\nimport config from '../config';\nimport { renderTNode, TNode, useEmitEvent, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-message`;\n\nexport default defineComponent({\n  name,\n  components: { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon, TNode },\n  props: messageProps,\n  emits: ['visible-change', 'open', 'opened', 'close', 'closed'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const root = ref(null);\n    const internalInstance = getCurrentInstance();\n    const closeBtnContent = computed(() => renderTNode(internalInstance, 'closeBtn'));\n    const { visible, modelValue } = toRefs(props);\n    const [currentVisible, setVisible] = useVModel(visible, modelValue, props.defaultValue, props.onChange);\n    const rootClasses = computed(() => ({\n      [name]: true,\n      [`${name}--${props.theme}`]: true,\n      [`${name}-align--${props.align}`]: !!props.align,\n    }));\n    const rootStyles = computed(() => ({\n      zIndex: props.zIndex,\n    }));\n\n    const onClose = () => {\n      emitEvent('close');\n      setVisible(false);\n    };\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val === false) return;\n\n        emitEvent('open');\n        setVisible(true);\n\n        if (props.duration > 0) {\n          setTimeout(onClose, props.duration);\n        }\n      },\n    );\n\n    return {\n      name: ref(name),\n      root,\n      currentVisible,\n      rootClasses,\n      rootStyles,\n      closeBtnContent,\n      onClose,\n      afterEnter: () => emitEvent('opened'),\n      afterLeave: () => emitEvent('closed'),\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","CheckCircleFilledIcon","ErrorCircleFilledIcon","CloseIcon","TNode","props","messageProps","emits","setup","context","emitEvent","useEmitEvent","emit","root","ref","internalInstance","getCurrentInstance","closeBtnContent","computed","renderTNode","toRefs","visible","modelValue","useVModel","defaultValue","onChange","_slicedToArray","currentVisible","setVisible","rootClasses","_defineProperty","theme","align","rootStyles","zIndex","onClose","watch","value","val","duration","setTimeout","afterEnter","afterLeave","_createBlock","_Transition","onAfterLeave","_ctx","onAfterEnter","_createElementBlock","class","style","_renderSlot","_component_check_circle_filled_icon","key","_component_error_circle_filled_icon","_createElementVNode","content","closeBtn","_component_close_icon","onClick","_component_t_node"],"mappings":"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"}