/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var cell_index = require('../cell/index.js');
var config = require('../config.js');
require('../cell/cell.js');
require('@babel/runtime/helpers/defineProperty');
require('tdesign-icons-vue-next');
require('../cell/props.js');
require('../shared/render-tnode.js');
require('../shared/useEmitEvent/index.js');
require('lodash/camelCase');
require('../shared/render.js');
require('@babel/runtime/helpers/typeof');
require('../shared/component.js');

var prefix = config["default"].prefix;
var componentName = "".concat(prefix, "-indexes-cell");
var script = vue.defineComponent({
  name: componentName,
  components: {
    TCell: cell_index["default"]
  },
  props: {
    title: {
      type: String,
      default: ""
    },
    key: {
      type: String,
      default: ""
    },
    value: {
      type: String,
      default: ""
    },
    link: {
      type: Boolean,
      default: false
    }
  },
  setup: function setup(props, context) {
    var currentSidebar = "";
    var state = vue.reactive({
      title: props.title,
      value: props.value,
      link: props.link,
      key: props.key,
      componentName: componentName
    });
    return {
      state: state,
      currentSidebar: currentSidebar
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_cell = vue.resolveComponent("t-cell");
  return vue.openBlock(), vue.createBlock(_component_t_cell, {
    class: vue.normalizeClass(_ctx.state.componentName),
    "data-key": _ctx.state.key,
    title: _ctx.state.title,
    value: _ctx.state.value,
    link: _ctx.state.link
  }, null, 8, ["class", "data-key", "title", "value", "link"]);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=indexes-cell.js.map
