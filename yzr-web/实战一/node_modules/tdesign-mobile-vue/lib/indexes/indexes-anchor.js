/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var core = require('@vueuse/core');
var config = require('../config.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');

var name = "".concat(config["default"].prefix, "-indexes-anchor");
var script = vue.defineComponent({
  name: name,
  components: {
    TNode: shared_renderTnode["default"]
  },
  props: {
    anchorStyle: {
      type: String,
      default: ""
    }
  },
  setup: function setup(props, context) {
    var boxClasses = name;
    var stickyContent = vue.computed(function () {
      return shared_render.renderContent(vue.getCurrentInstance(), "default", "");
    });
    core.templateRef("boxRef");
    var contentRef = core.templateRef("contentRef");
    var _useElementBounding = core.useElementBounding(contentRef),
      height = _useElementBounding.height;
    var boxStyles = vue.computed(function () {
      return "height:".concat(height.value, "px;");
    });
    return {
      boxClasses: boxClasses,
      boxStyles: boxStyles,
      stickyContent: stickyContent
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = vue.resolveComponent("t-node");
  return vue.openBlock(), vue.createElementBlock("div", {
    ref: "boxRef",
    class: vue.normalizeClass(_ctx.boxClasses),
    style: vue.normalizeStyle(_ctx.boxStyles)
  }, [vue.createElementVNode("div", {
    ref: "contentRef",
    class: "t-indexes__anchor",
    style: vue.normalizeStyle(_ctx.anchorStyle)
  }, [vue.createVNode(_component_t_node, {
    content: _ctx.stickyContent
  }, null, 8, ["content"])], 4)], 6);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=indexes-anchor.js.map
