import { Ref, ComputedRef } from 'vue';
import { CollapseValue, TdCollapseProps } from './type';
export interface CollapseProvide {
    activeValue: Ref<CollapseValue | undefined>;
    disabled: ComputedRef<boolean>;
    expandIcon: ComputedRef<TdCollapseProps['expandIcon']>;
    onPanelChange: (name: string | number) => void;
    defaultExpandAll: boolean;
}
declare const _default: import("vue").DefineComponent<{
    defaultExpandAll: BooleanConstructor;
    disabled: BooleanConstructor;
    expandIcon: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: boolean;
    };
    expandMutex: BooleanConstructor;
    value: {
        type: import("vue").PropType<CollapseValue | undefined>;
    };
    modelValue: {
        type: import("vue").PropType<CollapseValue | undefined>;
    };
    defaultValue: {
        type: import("vue").PropType<CollapseValue | undefined>;
        default: never[];
    };
    onChange: import("vue").PropType<((value: CollapseValue) => void) | undefined>;
}, {
    prefix: string;
    classPrefix: string;
    activeValue: Ref<CollapseValue | undefined>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:value" | "change")[], "update:value" | "change", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    defaultExpandAll: BooleanConstructor;
    disabled: BooleanConstructor;
    expandIcon: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: boolean;
    };
    expandMutex: BooleanConstructor;
    value: {
        type: import("vue").PropType<CollapseValue | undefined>;
    };
    modelValue: {
        type: import("vue").PropType<CollapseValue | undefined>;
    };
    defaultValue: {
        type: import("vue").PropType<CollapseValue | undefined>;
        default: never[];
    };
    onChange: import("vue").PropType<((value: CollapseValue) => void) | undefined>;
}>> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:value"?: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    defaultValue: CollapseValue | undefined;
    expandIcon: boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined;
    defaultExpandAll: boolean;
    expandMutex: boolean;
}>;
export default _default;
