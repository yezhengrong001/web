/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var config = require('../config.js');
var tabs_tabPanelProps = require('./tab-panel-props.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');

var prefix = config["default"].prefix;
var script = vue.defineComponent({
  name: "".concat(prefix, "-tab-nav"),
  components: {
    TNode: shared_renderTnode["default"]
  },
  props: {
    label: tabs_tabPanelProps["default"].label
  },
  setup: function setup(props) {
    var internalInstance = vue.getCurrentInstance();
    var labelContent = vue.computed(function () {
      return shared_render.renderContent(internalInstance, "default", "label");
    });
    return {
      labelContent: labelContent
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = vue.resolveComponent("t-node");
  return vue.openBlock(), vue.createElementBlock("div", null, [vue.createVNode(_component_t_node, {
    content: _ctx.labelContent
  }, null, 8, ["content"])]);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=tab-nav-item.js.map
