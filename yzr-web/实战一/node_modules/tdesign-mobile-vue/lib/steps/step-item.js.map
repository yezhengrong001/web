{"version":3,"file":"step-item.js","sources":["../../src/steps/step-item.vue","../../src/steps/step-item.vue?vue&type=template&id=2839f478&lang.js"],"sourcesContent":["<template>\n  <div :class=\"rootClassName\">\n    <div :class=\"innerClassName\" @click=\"onClickIcon\">\n      <div :class=\"`${name}-icon`\">\n        <div :class=\"iconClassName\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </div>\n      <div :class=\"`${name}-content`\">\n        <div :class=\"`${name}-title`\">\n          <t-node :content=\"titleContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-description`\">\n          <t-node :content=\"descContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-extra`\">\n          <t-node :content=\"extraContent\"></t-node>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, inject, defineComponent, getCurrentInstance, ComponentInternalInstance, h } from 'vue';\nimport { CloseIcon as TCloseIcon, CheckIcon as TCheckIcon } from 'tdesign-icons-vue-next';\n\nimport StepItemProps from './step-item-props';\nimport { renderTNode, TNode } from '../shared';\n\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-step`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: StepItemProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const { proxy } = internalInstance as ComponentInternalInstance;\n    const stepsProvide: any = inject('stepsProvide', undefined);\n    stepsProvide.relation(proxy);\n\n    const index = computed(() => stepsProvide.state.children.indexOf(proxy));\n    const theme = computed(() => stepsProvide.theme);\n    const dot = computed(() => theme.value === 'dot' && stepsProvide.layout === 'vertical');\n    const iconNode = computed(() => renderTNode(internalInstance, 'icon'));\n\n    const iconContent = computed(() => {\n      if (dot.value) {\n        return '';\n      }\n      if (props.status === 'error') {\n        return h(TCloseIcon);\n      }\n      if (index.value < current.value && readonly.value) {\n        return h(TCheckIcon);\n      }\n      if (typeof iconNode.value === 'boolean') {\n        return iconNode.value ? index.value + 1 : '';\n      }\n      return iconNode.value;\n    });\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descContent = computed(() => renderTNode(internalInstance, 'content'));\n    const extraContent = computed(() => renderTNode(internalInstance, 'extra'));\n\n    const current = computed(() => stepsProvide.current.value || stepsProvide.defaultCurrent || 0);\n\n    const stepsStatus = computed(() => stepsProvide.status);\n    const readonly = computed(() => stepsProvide.readonly);\n\n    const rootClassName = computed(() => [\n      name,\n      { [`${name}--default`]: !readonly.value },\n      { [`${name}--${currentStatus.value}`]: currentStatus.value },\n    ]);\n    const innerClassName = computed(() => {\n      if (typeof iconNode.value === 'boolean') {\n        return [`${name}__inner`];\n      }\n      return [`${name}__inner`, `${name}__inner__icon`];\n    });\n    const iconClassName = computed(() => [`${name}-icon__number`, { [`${name}-icon__dot`]: dot.value }]);\n\n    const currentStatus = computed(() => {\n      const { status } = props;\n      if (status !== 'default') return status;\n      if (index.value < current.value) return 'finish';\n      if (index.value === current.value) return 'process';\n      return '';\n    });\n\n    const onClickIcon = (e: MouseEvent) => {\n      if (!readonly.value && !dot.value) {\n        stepsProvide.onClickItem(index.value, current.value, e);\n      }\n    };\n\n    return {\n      dot,\n      name,\n      theme,\n      index,\n      current,\n      readonly,\n      iconNode,\n      stepsStatus,\n      descContent,\n      iconContent,\n      onClickIcon,\n      titleContent,\n      extraContent,\n      rootClassName,\n      currentStatus,\n      iconClassName,\n      innerClassName,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"rootClassName\">\n    <div :class=\"innerClassName\" @click=\"onClickIcon\">\n      <div :class=\"`${name}-icon`\">\n        <div :class=\"iconClassName\">\n          <t-node :content=\"iconContent\"></t-node>\n        </div>\n      </div>\n      <div :class=\"`${name}-content`\">\n        <div :class=\"`${name}-title`\">\n          <t-node :content=\"titleContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-description`\">\n          <t-node :content=\"descContent\"></t-node>\n        </div>\n        <div :class=\"`${name}-extra`\">\n          <t-node :content=\"extraContent\"></t-node>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, inject, defineComponent, getCurrentInstance, ComponentInternalInstance, h } from 'vue';\nimport { CloseIcon as TCloseIcon, CheckIcon as TCheckIcon } from 'tdesign-icons-vue-next';\n\nimport StepItemProps from './step-item-props';\nimport { renderTNode, TNode } from '../shared';\n\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-step`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: StepItemProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const { proxy } = internalInstance as ComponentInternalInstance;\n    const stepsProvide: any = inject('stepsProvide', undefined);\n    stepsProvide.relation(proxy);\n\n    const index = computed(() => stepsProvide.state.children.indexOf(proxy));\n    const theme = computed(() => stepsProvide.theme);\n    const dot = computed(() => theme.value === 'dot' && stepsProvide.layout === 'vertical');\n    const iconNode = computed(() => renderTNode(internalInstance, 'icon'));\n\n    const iconContent = computed(() => {\n      if (dot.value) {\n        return '';\n      }\n      if (props.status === 'error') {\n        return h(TCloseIcon);\n      }\n      if (index.value < current.value && readonly.value) {\n        return h(TCheckIcon);\n      }\n      if (typeof iconNode.value === 'boolean') {\n        return iconNode.value ? index.value + 1 : '';\n      }\n      return iconNode.value;\n    });\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descContent = computed(() => renderTNode(internalInstance, 'content'));\n    const extraContent = computed(() => renderTNode(internalInstance, 'extra'));\n\n    const current = computed(() => stepsProvide.current.value || stepsProvide.defaultCurrent || 0);\n\n    const stepsStatus = computed(() => stepsProvide.status);\n    const readonly = computed(() => stepsProvide.readonly);\n\n    const rootClassName = computed(() => [\n      name,\n      { [`${name}--default`]: !readonly.value },\n      { [`${name}--${currentStatus.value}`]: currentStatus.value },\n    ]);\n    const innerClassName = computed(() => {\n      if (typeof iconNode.value === 'boolean') {\n        return [`${name}__inner`];\n      }\n      return [`${name}__inner`, `${name}__inner__icon`];\n    });\n    const iconClassName = computed(() => [`${name}-icon__number`, { [`${name}-icon__dot`]: dot.value }]);\n\n    const currentStatus = computed(() => {\n      const { status } = props;\n      if (status !== 'default') return status;\n      if (index.value < current.value) return 'finish';\n      if (index.value === current.value) return 'process';\n      return '';\n    });\n\n    const onClickIcon = (e: MouseEvent) => {\n      if (!readonly.value && !dot.value) {\n        stepsProvide.onClickItem(index.value, current.value, e);\n      }\n    };\n\n    return {\n      dot,\n      name,\n      theme,\n      index,\n      current,\n      readonly,\n      iconNode,\n      stepsStatus,\n      descContent,\n      iconContent,\n      onClickIcon,\n      titleContent,\n      extraContent,\n      rootClassName,\n      currentStatus,\n      iconClassName,\n      innerClassName,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","props","StepItemProps","setup","internalInstance","getCurrentInstance","proxy","stepsProvide","inject","relation","index","computed","state","children","indexOf","theme","dot","value","layout","iconNode","renderTNode","iconContent","status","h","TCloseIcon","current","readonly","TCheckIcon","titleContent","descContent","extraContent","defaultCurrent","stepsStatus","rootClassName","_defineProperty","currentStatus","innerClassName","iconClassName","onClickIcon","e","onClickItem","_createElementBlock","class","_ctx","_createElementVNode","onClick","_createVNode","_component_t_node","content"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAQA,SAAWC,iBAAA,CAAXD;AACR,IAAME,OAAUF,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,EAAA,OAAA,CAAA,CAAA;AAEhB,aAAeG,mBAAgB,CAAA;AAC7BD,EAAAA,IAAA,EAAAA,IAAA;AACAE,EAAAA,UAAA,EAAY;AAAEC,IAAAA,KAAM,EAANA,6BAAAA;GAAM;AACpBC,EAAAA,KAAO,EAAAC,8BAAA;EACPC,sBAAMF,KAAO,EAAA;IACX,IAAMG,mBAAmBC,sBAAmB,EAAA,CAAA;AACtC,IAAA,IAAEC,QAAUF,gBAAA,CAAVE;IACF,IAAAC,YAAA,GAAoBC,UAAO,CAAA,cAAA,EAAgB,KAAS,CAAA,CAAA,CAAA;AAC1DD,IAAAA,YAAA,CAAaE,SAASH,KAAK,CAAA,CAAA;IAErB,IAAAI,KAAA,GAAQC,aAAS,YAAA;MAAA,OAAMJ,YAAA,CAAaK,MAAMC,QAAS,CAAAC,OAAA,CAAQR,KAAK,CAAC,CAAA;KAAA,CAAA,CAAA;IACvE,IAAMS,KAAQ,GAAAJ,YAAA,CAAS,YAAA;MAAA,OAAMJ,YAAA,CAAaQ,KAAK,CAAA;KAAA,CAAA,CAAA;IACzC,IAAAC,GAAA,GAAML,aAAS,YAAA;MAAA,OAAMI,KAAA,CAAME,UAAU,KAAS,IAAAV,YAAA,CAAaW,WAAW,UAAU,CAAA;KAAA,CAAA,CAAA;IACtF,IAAMC,WAAWR,YAAS,CAAA,YAAA;AAAA,MAAA,OAAMS,yBAAY,CAAAhB,gBAAA,EAAkB,MAAM,CAAC,CAAA;KAAA,CAAA,CAAA;AAE/D,IAAA,IAAAiB,WAAA,GAAcV,aAAS,YAAM;MACjC,IAAIK,IAAIC,KAAO,EAAA;AACN,QAAA,OAAA,EAAA,CAAA;AACT,OAAA;AACI,MAAA,IAAAhB,KAAA,CAAMqB,WAAW,OAAS,EAAA;QAC5B,OAAOC,MAAEC,6BAAU,CAAA,CAAA;AACrB,OAAA;MACA,IAAId,KAAM,CAAAO,KAAA,GAAQQ,OAAQ,CAAAR,KAAA,IAASS,SAAST,KAAO,EAAA;QACjD,OAAOM,MAAEI,6BAAU,CAAA,CAAA;AACrB,OAAA;AACI,MAAA,IAAA,OAAOR,QAAS,CAAAF,KAAA,KAAU,SAAW,EAAA;QACvC,OAAOE,QAAS,CAAAF,KAAA,GAAQP,KAAM,CAAAO,KAAA,GAAQ,CAAI,GAAA,EAAA,CAAA;AAC5C,OAAA;MACA,OAAOE,QAAS,CAAAF,KAAA,CAAA;AAClB,KAAC,CAAA,CAAA;IACD,IAAMW,eAAejB,YAAS,CAAA,YAAA;AAAA,MAAA,OAAMS,yBAAY,CAAAhB,gBAAA,EAAkB,OAAO,CAAC,CAAA;KAAA,CAAA,CAAA;IAC1E,IAAMyB,cAAclB,YAAS,CAAA,YAAA;AAAA,MAAA,OAAMS,yBAAY,CAAAhB,gBAAA,EAAkB,SAAS,CAAC,CAAA;KAAA,CAAA,CAAA;IAC3E,IAAM0B,eAAenB,YAAS,CAAA,YAAA;AAAA,MAAA,OAAMS,yBAAY,CAAAhB,gBAAA,EAAkB,OAAO,CAAC,CAAA;KAAA,CAAA,CAAA;IAEpE,IAAAqB,OAAA,GAAUd,aAAS,YAAA;MAAA,OAAMJ,YAAA,CAAakB,QAAQR,KAAS,IAAAV,YAAA,CAAawB,kBAAkB,CAAC,CAAA;KAAA,CAAA,CAAA;IAE7F,IAAMC,WAAc,GAAArB,YAAA,CAAS,YAAA;MAAA,OAAMJ,YAAA,CAAae,MAAM,CAAA;KAAA,CAAA,CAAA;IACtD,IAAMI,QAAW,GAAAf,YAAA,CAAS,YAAA;MAAA,OAAMJ,YAAA,CAAamB,QAAQ,CAAA;KAAA,CAAA,CAAA;IAE/C,IAAAO,aAAA,GAAgBtB,aAAS,YAAA;AAAA,MAAA,OAAM,CACnCd,IAAA,EAAAqC,mCAAA,CAAA,EAAA,EAAA,EAAA,CAAA,MAAA,CACMrC,IAAkB,EAAA,WAAA,CAAA,EAAA,CAAC6B,SAAST,KAAM,qDAClCpB,mBAASsC,aAAc,CAAAlB,KAAA,GAAUkB,cAAclB,KAAM,CAC5D,CAAA,CAAA;KAAA,CAAA,CAAA;AACK,IAAA,IAAAmB,cAAA,GAAiBzB,aAAS,YAAM;AAChC,MAAA,IAAA,OAAOQ,QAAS,CAAAF,KAAA,KAAU,SAAW,EAAA;QAChC,OAAA,CAAA,EAAA,CAAA,MAAA,CAAIpB,IAAa,EAAA,SAAA,CAAA,CAAA,CAAA;AAC1B,OAAA;AACA,MAAA,OAAO,CAAIA,EAAAA,CAAAA,MAAAA,CAAAA,IAAe,EAAGA,SAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAmB,EAAA,eAAA,CAAA,CAAA,CAAA;AAClD,KAAC,CAAA,CAAA;IACD,IAAMwC,aAAgB,GAAA1B,YAAA,CAAS,YAAA;MAAA,OAAM,CAAA,EAAA,CAAA,MAAA,CAAId,IAAA,EAA2BA,eAAAA,CAAAA,EAAAA,mCAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,iBAAmBmB,GAAI,CAAAC,KAAA,CAAQ,CAAA,CAAA;KAAA,CAAA,CAAA;AAE7F,IAAA,IAAAkB,aAAA,GAAgBxB,aAAS,YAAM;AAC7B,MAAA,IAAEW,SAAWrB,KAAA,CAAXqB;AACR,MAAA,IAAIA,MAAW,KAAA,SAAA,EAAkB,OAAAA,MAAA,CAAA;MAC7B,IAAAZ,KAAA,CAAMO,QAAQQ,OAAQ,CAAAR,KAAA,EAAc,OAAA,QAAA,CAAA;MACpC,IAAAP,KAAA,CAAMO,UAAUQ,OAAQ,CAAAR,KAAA,EAAc,OAAA,SAAA,CAAA;AACnC,MAAA,OAAA,EAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAqB,WAAA,GAAc,SAAdA,WAAA,CAAeC,CAAkB,EAAA;MACrC,IAAI,CAACb,QAAA,CAAST,KAAS,IAAA,CAACD,IAAIC,KAAO,EAAA;AACjCV,QAAAA,YAAA,CAAaiC,WAAY,CAAA9B,KAAA,CAAMO,KAAO,EAAAQ,OAAA,CAAQR,OAAOsB,CAAC,CAAA,CAAA;AACxD,OAAA;KACF,CAAA;IAEO,OAAA;AACLvB,MAAAA,GAAA,EAAAA,GAAA;AACAnB,MAAAA,IAAA,EAAAA,IAAA;AACAkB,MAAAA,KAAA,EAAAA,KAAA;AACAL,MAAAA,KAAA,EAAAA,KAAA;AACAe,MAAAA,OAAA,EAAAA,OAAA;AACAC,MAAAA,QAAA,EAAAA,QAAA;AACAP,MAAAA,QAAA,EAAAA,QAAA;AACAa,MAAAA,WAAA,EAAAA,WAAA;AACAH,MAAAA,WAAA,EAAAA,WAAA;AACAR,MAAAA,WAAA,EAAAA,WAAA;AACAiB,MAAAA,WAAA,EAAAA,WAAA;AACAV,MAAAA,YAAA,EAAAA,YAAA;AACAE,MAAAA,YAAA,EAAAA,YAAA;AACAG,MAAAA,aAAA,EAAAA,aAAA;AACAE,MAAAA,aAAA,EAAAA,aAAA;AACAE,MAAAA,aAAA,EAAAA,aAAA;AACAD,MAAAA,cAAA,EAAAA,cAAAA;KACF,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;wBCxHC,EAAAK,sBAAA,CAmBK,KAAA,EAAA;AAnBCC,IAAAA,KAAA,oBAAO,CAAAC,IAAA,CAAaV,aAAA,CAAA;MACxBW,uBAiBK,KAAA,EAAA;AAjBCF,IAAAA,KAAA,oBAAO,CAAAC,IAAA,CAAcP,cAAA,CAAA;IAAGS;aAAOF,IAAA,CAAWL,WAAA,IAAAK,IAAA,CAAAL,WAAA,CAAAK,KAAAA,CAAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AAAA,KAAA,CAAA;MAC9CC,uBAIK,KAAA,EAAA;AAJCF,IAAAA,0BAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI9C,IAAA,EAAA,OAAA,CAAA,CAAA;MAClB+C,uBAEK,KAAA,EAAA;AAFCF,IAAAA,KAAA,oBAAO,CAAAC,IAAA,CAAaN,aAAA,CAAA;MACxBS,eAAA,CAAuCC,iBAAA,EAAA;IAA9BC,OAAS,EAAAL,IAAA,CAAWtB,WAAAA;GAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,YAGjCuB,uBAUK,KAAA,EAAA;AAVCF,IAAAA,0BAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI9C,IAAA,EAAA,UAAA,CAAA,CAAA;MAClB+C,uBAEK,KAAA,EAAA;AAFCF,IAAAA,0BAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI9C,IAAA,EAAA,QAAA,CAAA,CAAA;MAClBiD,eAAA,CAAwCC,iBAAA,EAAA;IAA/BC,OAAS,EAAAL,IAAA,CAAYf,YAAAA;AAAA,GAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,OAEhCgB,uBAEK,KAAA,EAAA;AAFCF,IAAAA,0BAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI9C,IAAA,EAAA,cAAA,CAAA,CAAA;MAClBiD,eAAA,CAAuCC,iBAAA,EAAA;IAA9BC,OAAS,EAAAL,IAAA,CAAWd,WAAAA;AAAA,GAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,OAE/Be,uBAEK,KAAA,EAAA;AAFCF,IAAAA,0BAAUC,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI9C,IAAA,EAAA,QAAA,CAAA,CAAA;MAClBiD,eAAA,CAAwCC,iBAAA,EAAA;IAA/BC,OAAS,EAAAL,IAAA,CAAYb,YAAAA;GAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA;;;;;;;"}