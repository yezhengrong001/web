/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var countDown_props = require('./props.js');
var shared_useCountDown_index = require('../shared/useCountDown/index.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/regenerator');
require('@vueuse/core');
require('../shared/useCountDown/utils.js');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-countdown");
var script = vue.defineComponent({
  name: name,
  components: {
    TNode: shared_renderTnode["default"]
  },
  props: _objectSpread({}, countDown_props["default"]),
  setup: function setup(props) {
    var _ref, _ref$test;
    var _useCountDown = shared_useCountDown_index.useCountDown(props),
      time = _useCountDown.time,
      showTimes = _useCountDown.showTimes;
    var internalInstance = vue.getCurrentInstance();
    var hasChinese = (_ref = /.*[\u4e00-\u9fa5]+.*$/) === null || _ref === void 0 ? void 0 : (_ref$test = _ref.test) === null || _ref$test === void 0 ? void 0 : _ref$test.call(_ref, props === null || props === void 0 ? void 0 : props.format);
    var contentLayout = vue.computed(function () {
      return shared_render.renderTNode(internalInstance, "content");
    });
    return {
      name: name,
      time: time,
      showTimes: showTimes,
      hasChinese: hasChinese,
      contentLayout: contentLayout
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = vue.resolveComponent("t-node");
  return vue.openBlock(), vue.createElementBlock(vue.Fragment, null, [!_ctx.time ? (vue.openBlock(), vue.createBlock(_component_t_node, {
    key: 0,
    content: _ctx.contentLayout
  }, null, 8, ["content"])) : vue.createCommentVNode("", true), vue.createElementVNode("span", {
    class: vue.normalizeClass("".concat(_ctx.name, " ").concat(_ctx.name, "--").concat(_ctx.theme, " ").concat(_ctx.name, "--").concat(_ctx.size, " ").concat(!_ctx.hasChinese ? "" : "".concat(_ctx.name, "--split-with-unit")))
  }, [_ctx.time ? (vue.openBlock(true), vue.createElementBlock(vue.Fragment, {
    key: 0
  }, vue.renderList(_ctx.showTimes, function (item) {
    return vue.openBlock(), vue.createElementBlock(vue.Fragment, {
      key: item.mark
    }, [vue.createElementVNode("span", {
      class: vue.normalizeClass("".concat(_ctx.name, "__digit"))
    }, vue.toDisplayString(item.value), 3), item.mark ? (vue.openBlock(), vue.createElementBlock("span", {
      key: 0,
      class: vue.normalizeClass("".concat(_ctx.name, "__unit"))
    }, vue.toDisplayString(item.mark), 3)) : vue.createCommentVNode("", true)], 64);
  }), 128)) : vue.createCommentVNode("", true)], 2)], 64);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=count-down.js.map
