/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var avatar_avatarGroupProps = require('./avatar-group-props.js');
var config = require('../config.js');
var avatar_avatar = require('./avatar.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('../badge/index.js');
require('../badge/badge.js');
require('@babel/runtime/helpers/slicedToArray');
require('../badge/props.js');
require('@babel/runtime/helpers/typeof');
require('lodash/camelCase');
require('../shared/component.js');
require('./props.js');
require('../shared/constants.js');
require('../shared/useEmitEvent/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-avatar-group");
var script = vue.defineComponent({
  name: name,
  components: {
    Avatar: avatar_avatar["default"],
    TNode: shared_renderTnode["default"]
  },
  props: avatar_avatarGroupProps["default"],
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    vue.provide("avatarGroup", _objectSpread({}, props));
    var internalInstance = vue.getCurrentInstance();
    var classes = vue.computed(function () {
      var _ref2;
      return ["".concat(name), (_ref2 = {}, _defineProperty__default["default"](_ref2, "".concat(prefix, "-avatar--offset-right"), props.cascading === "right-up"), _defineProperty__default["default"](_ref2, "".concat(prefix, "-avatar--offset-left"), props.cascading === "left-up"), _ref2)];
    });
    var isShowEllipsisContent = vue.ref(false);
    var ellipsisContent = vue.ref(null);
    var size = vue.ref(props.size);
    var collapseAvatar = vue.computed(function () {
      return shared_render.renderTNode(internalInstance, "collapseAvatar");
    });
    var avatarItems = function avatarItems() {
      var childContent = slots.default ? slots.default() : [];
      var children = [];
      childContent.forEach(function (child) {
        if (child.type === vue.Fragment) {
          children.push.apply(children, _toConsumableArray__default["default"](child.children));
        } else {
          children.push(child);
        }
      });
      var childrenShow = [];
      var max = props.max || 0;
      if (max && max < children.length) {
        childrenShow = children.slice(0, max);
        isShowEllipsisContent.value = true;
        ellipsisContent.value = collapseAvatar.value || "+".concat(children.length - max);
      } else {
        childrenShow = children;
      }
      size.value = childrenShow[0].size || props.size;
      return childrenShow;
    };
    return {
      classes: classes,
      size: size,
      isShowEllipsisContent: isShowEllipsisContent,
      ellipsisContent: ellipsisContent,
      avatarItems: avatarItems
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = vue.resolveComponent("t-node");
  var _component_avatar = vue.resolveComponent("avatar");
  return vue.openBlock(), vue.createElementBlock("div", {
    class: vue.normalizeClass(_ctx.classes)
  }, [(vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.avatarItems))), _ctx.isShowEllipsisContent ? (vue.openBlock(), vue.createBlock(_component_avatar, {
    key: 0,
    size: _ctx.size
  }, {
    default: vue.withCtx(function () {
      return [vue.createVNode(_component_t_node, {
        content: _ctx.ellipsisContent
      }, null, 8, ["content"])];
    }),
    _: 1
  }, 8, ["size"])) : vue.createCommentVNode("", true)], 2);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=avatar-group.js.map
