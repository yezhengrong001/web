import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    direction: {
        type: import("vue").PropType<"column" | "row" | undefined>;
        default: "column" | "row" | undefined;
        validator(val: "column" | "row" | undefined): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    message: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    overlayProps: {
        type: import("vue").PropType<import("../overlay/type").TdOverlayProps | undefined>;
        default: () => {};
    };
    placement: {
        type: import("vue").PropType<"top" | "middle" | "bottom" | undefined>;
        default: "top" | "middle" | "bottom" | undefined;
        validator(val: "top" | "middle" | "bottom" | undefined): boolean;
    };
    preventScrollThrough: BooleanConstructor;
    showOverlay: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"loading" | "success" | "fail" | undefined>;
        validator(val: "loading" | "success" | "fail" | undefined): boolean;
    };
}, {
    direction: import("vue").Ref<"column" | "row" | undefined>;
    duration: import("vue").Ref<number>;
    icon: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    message: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    overlayProps: import("vue").Ref<import("../overlay/type").TdOverlayProps | undefined>;
    placement: import("vue").Ref<"top" | "middle" | "bottom" | undefined>;
    preventScrollThrough: import("vue").Ref<boolean>;
    showOverlay: import("vue").Ref<boolean>;
    theme: import("vue").Ref<"loading" | "success" | "fail" | undefined>;
    name: import("vue").Ref<string>;
    classes: import("vue").ComputedRef<(string | {
        [x: string]: any;
    })[]>;
    iconContent: import("vue").ComputedRef<any>;
    messageContent: import("vue").ComputedRef<any>;
    customOverlayProps: import("vue").ComputedRef<{
        preventScrollThrough: boolean;
        visible: boolean;
        duration?: number | undefined;
        transparent?: boolean | undefined;
        zIndex?: number | undefined;
        customStyle?: string | undefined;
        onClick?: ((context: {
            e: MouseEvent;
        }) => void) | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    direction: {
        type: import("vue").PropType<"column" | "row" | undefined>;
        default: "column" | "row" | undefined;
        validator(val: "column" | "row" | undefined): boolean;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    message: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    overlayProps: {
        type: import("vue").PropType<import("../overlay/type").TdOverlayProps | undefined>;
        default: () => {};
    };
    placement: {
        type: import("vue").PropType<"top" | "middle" | "bottom" | undefined>;
        default: "top" | "middle" | "bottom" | undefined;
        validator(val: "top" | "middle" | "bottom" | undefined): boolean;
    };
    preventScrollThrough: BooleanConstructor;
    showOverlay: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"loading" | "success" | "fail" | undefined>;
        validator(val: "loading" | "success" | "fail" | undefined): boolean;
    };
}>>, {
    direction: "column" | "row" | undefined;
    duration: number;
    overlayProps: import("../overlay/type").TdOverlayProps | undefined;
    placement: "top" | "middle" | "bottom" | undefined;
    preventScrollThrough: boolean;
    showOverlay: boolean;
}>;
export default _default;
