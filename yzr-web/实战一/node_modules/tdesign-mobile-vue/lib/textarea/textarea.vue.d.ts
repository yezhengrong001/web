import { TextareaValue } from './type';
declare const _default: import("vue").DefineComponent<{
    autofocus: BooleanConstructor;
    autosize: BooleanConstructor;
    disabled: BooleanConstructor;
    label: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    maxcharacter: {
        type: NumberConstructor;
    };
    maxlength: {
        type: NumberConstructor;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: StringConstructor;
        default: undefined;
    };
    value: {
        type: import("vue").PropType<TextareaValue | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<TextareaValue | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<TextareaValue | undefined>;
        default: undefined;
    };
    onBlur: import("vue").PropType<((value: TextareaValue, context: {
        e: FocusEvent;
    }) => void) | undefined>;
    onChange: import("vue").PropType<((value: TextareaValue, context?: {
        e?: InputEvent | undefined;
    } | undefined) => void) | undefined>;
    onFocus: import("vue").PropType<((value: TextareaValue, context: {
        e: FocusEvent;
    }) => void) | undefined>;
}, {
    labelContent: import("vue").ComputedRef<any>;
    innerValue: import("vue").Ref<TextareaValue | undefined>;
    textareaRef: import("vue").Ref<HTMLElement | null>;
    textareaStyle: import("vue").Ref<any>;
    textareaClassNames: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    textareaLength: import("vue").Ref<number>;
    handleFocus: (e: FocusEvent) => void;
    handleBlur: (e: FocusEvent) => void;
    handleInput: (e: any) => void;
    handleCompositionend: (e: InputEvent | CompositionEvent) => void;
    label: import("vue").Ref<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    value: import("vue").Ref<TextareaValue | undefined>;
    modelValue: import("vue").Ref<TextareaValue | undefined>;
    name: import("vue").Ref<string>;
    disabled: import("vue").Ref<boolean>;
    defaultValue: import("vue").Ref<TextareaValue | undefined>;
    autofocus: import("vue").Ref<boolean>;
    maxcharacter: import("vue").Ref<number | undefined>;
    maxlength: import("vue").Ref<number | undefined>;
    placeholder: import("vue").Ref<string | undefined>;
    autosize: import("vue").Ref<boolean>;
    componentName: string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "update:modelValue" | "update:value" | "change" | "blur" | "focus", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    autofocus: BooleanConstructor;
    autosize: BooleanConstructor;
    disabled: BooleanConstructor;
    label: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    maxcharacter: {
        type: NumberConstructor;
    };
    maxlength: {
        type: NumberConstructor;
    };
    name: {
        type: StringConstructor;
        default: string;
    };
    placeholder: {
        type: StringConstructor;
        default: undefined;
    };
    value: {
        type: import("vue").PropType<TextareaValue | undefined>;
        default: undefined;
    };
    modelValue: {
        type: import("vue").PropType<TextareaValue | undefined>;
        default: undefined;
    };
    defaultValue: {
        type: import("vue").PropType<TextareaValue | undefined>;
        default: undefined;
    };
    onBlur: import("vue").PropType<((value: TextareaValue, context: {
        e: FocusEvent;
    }) => void) | undefined>;
    onChange: import("vue").PropType<((value: TextareaValue, context?: {
        e?: InputEvent | undefined;
    } | undefined) => void) | undefined>;
    onFocus: import("vue").PropType<((value: TextareaValue, context: {
        e: FocusEvent;
    }) => void) | undefined>;
}>>, {
    value: TextareaValue | undefined;
    modelValue: TextareaValue | undefined;
    name: string;
    disabled: boolean;
    defaultValue: TextareaValue | undefined;
    autofocus: boolean;
    placeholder: string;
    autosize: boolean;
}>;
export default _default;
