declare const _default: import("vue").DefineComponent<{
    value: {
        type: import("vue").PropType<import("./type").TdCascaderItemValueType>;
        default: undefined;
    };
    label: {
        type: import("vue").PropType<string>;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    index: {
        type: StringConstructor;
        default: string;
    };
    children: {
        type: import("vue").PropType<import("./type").TdCascaderItems | undefined>;
        default: never[];
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    labelTNode: import("vue").ComputedRef<any>;
    name: string;
    label: import("vue").ComputedRef<any>;
    className: import("vue").ComputedRef<(string | false)[]>;
    onSelect: (context: {
        e: MouseEvent;
    }) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<import("./type").TdCascaderItemValueType>;
        default: undefined;
    };
    label: {
        type: import("vue").PropType<string>;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    active: {
        type: BooleanConstructor;
        default: boolean;
    };
    index: {
        type: StringConstructor;
        default: string;
    };
    children: {
        type: import("vue").PropType<import("./type").TdCascaderItems | undefined>;
        default: never[];
    };
    selected: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    label: string;
    children: import("./type").TdCascaderItems | undefined;
    value: import("./type").TdCascaderItemValueType;
    selected: boolean;
    index: string;
    disabled: boolean;
    active: boolean;
}>;
export default _default;
