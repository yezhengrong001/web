{"version":3,"file":"cell.js","sources":["../../src/cell/cell.vue","../../src/cell/cell.vue?vue&type=template&id=96a0fdbe&lang.js"],"sourcesContent":["<template>\n  <div :class=\"styleCell\" @click=\"onClick\">\n    <div :class=\"`${name}__left-icon`\">\n      <t-node v-if=\"leftIconContent\" :content=\"leftIconContent\"></t-node>\n      <template v-if=\"image\">\n        <img v-if=\"typeof image === 'string'\" :src=\"image\" :class=\"`${name}__image`\" />\n        <t-node v-else :content=\"imageContent\"></t-node>\n      </template>\n    </div>\n    <div v-if=\"titleContent\" :class=\"`${name}__title`\">\n      <t-node :content=\"titleContent\"></t-node><span v-if=\"required\" :class=\"`${name}--required`\">&nbsp;*</span>\n      <div v-if=\"descriptionContent\" :class=\"`${name}__description`\">\n        <t-node :content=\"descriptionContent\"></t-node>\n      </div>\n    </div>\n    <div v-if=\"noteContent\" :class=\"`${name}__note`\">\n      <t-node :content=\"noteContent\"></t-node>\n    </div>\n    <div v-if=\"rightIconContent\" :class=\"`${name}__right-icon`\">\n      <t-node :content=\"rightIconContent\"></t-node>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, toRefs, h, SetupContext } from 'vue';\nimport { ChevronRightIcon } from 'tdesign-icons-vue-next';\nimport { renderTNode, renderContent, TNode, useEmitEvent } from '../shared';\nimport config from '../config';\nimport CellProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-cell`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: CellProps,\n  emits: ['click'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    const noteContent = computed(() => renderContent(internalInstance, 'default', 'note'));\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descriptionContent = computed(() => renderTNode(internalInstance, 'description'));\n    const rightIconContent = computed(() => {\n      if (props.arrow) {\n        return h(ChevronRightIcon);\n      }\n      return renderTNode(internalInstance, 'rightIcon');\n    });\n    const imageContent = computed(() => renderTNode(internalInstance, 'image'));\n    const leftIconContent = computed(() => renderTNode(internalInstance, 'leftIcon'));\n\n    const styleCell = computed(() => [\n      `${name}`,\n      `${name}--${props.align}`,\n      {\n        [`${name}--hover`]: props.hover,\n        [`${name}--bordered`]: props.bordered,\n      },\n    ]);\n\n    const onClick = (e: Event) => emitEvent('click', e);\n\n    return {\n      ...toRefs(props),\n      name,\n      onClick,\n      styleCell,\n      imageContent,\n      rightIconContent,\n      leftIconContent,\n      noteContent,\n      titleContent,\n      descriptionContent,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"styleCell\" @click=\"onClick\">\n    <div :class=\"`${name}__left-icon`\">\n      <t-node v-if=\"leftIconContent\" :content=\"leftIconContent\"></t-node>\n      <template v-if=\"image\">\n        <img v-if=\"typeof image === 'string'\" :src=\"image\" :class=\"`${name}__image`\" />\n        <t-node v-else :content=\"imageContent\"></t-node>\n      </template>\n    </div>\n    <div v-if=\"titleContent\" :class=\"`${name}__title`\">\n      <t-node :content=\"titleContent\"></t-node><span v-if=\"required\" :class=\"`${name}--required`\">&nbsp;*</span>\n      <div v-if=\"descriptionContent\" :class=\"`${name}__description`\">\n        <t-node :content=\"descriptionContent\"></t-node>\n      </div>\n    </div>\n    <div v-if=\"noteContent\" :class=\"`${name}__note`\">\n      <t-node :content=\"noteContent\"></t-node>\n    </div>\n    <div v-if=\"rightIconContent\" :class=\"`${name}__right-icon`\">\n      <t-node :content=\"rightIconContent\"></t-node>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, toRefs, h, SetupContext } from 'vue';\nimport { ChevronRightIcon } from 'tdesign-icons-vue-next';\nimport { renderTNode, renderContent, TNode, useEmitEvent } from '../shared';\nimport config from '../config';\nimport CellProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-cell`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: CellProps,\n  emits: ['click'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const internalInstance = getCurrentInstance();\n    const noteContent = computed(() => renderContent(internalInstance, 'default', 'note'));\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descriptionContent = computed(() => renderTNode(internalInstance, 'description'));\n    const rightIconContent = computed(() => {\n      if (props.arrow) {\n        return h(ChevronRightIcon);\n      }\n      return renderTNode(internalInstance, 'rightIcon');\n    });\n    const imageContent = computed(() => renderTNode(internalInstance, 'image'));\n    const leftIconContent = computed(() => renderTNode(internalInstance, 'leftIcon'));\n\n    const styleCell = computed(() => [\n      `${name}`,\n      `${name}--${props.align}`,\n      {\n        [`${name}--hover`]: props.hover,\n        [`${name}--bordered`]: props.bordered,\n      },\n    ]);\n\n    const onClick = (e: Event) => emitEvent('click', e);\n\n    return {\n      ...toRefs(props),\n      name,\n      onClick,\n      styleCell,\n      imageContent,\n      rightIconContent,\n      leftIconContent,\n      noteContent,\n      titleContent,\n      descriptionContent,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","props","CellProps","emits","setup","context","emitEvent","useEmitEvent","emit","internalInstance","getCurrentInstance","noteContent","computed","renderContent","titleContent","renderTNode","descriptionContent","rightIconContent","arrow","h","ChevronRightIcon","imageContent","leftIconContent","styleCell","align","hover","bordered","onClick","e","toRefs","_createElementBlock","class","_ctx","_createElementVNode","_createBlock","_component_t_node","content","image","_Fragment","key","src","_createVNode","required"],"mappings":"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"}