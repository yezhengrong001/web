import { TdCalendarProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    confirmBtn: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | null | undefined>;
        default: string;
    };
    firstDayOfWeek: {
        type: NumberConstructor;
        default: number;
    };
    format: {
        type: PropType<((day: import("./type").TDate) => import("./type").TDate) | undefined>;
    };
    maxDate: {
        type: PropType<number | Date | undefined>;
    };
    minDate: {
        type: PropType<number | Date | undefined>;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    type: {
        type: PropType<"single" | "multiple" | "range" | undefined>;
        default: "single" | "multiple" | "range" | undefined;
        validator(val: TdCalendarProps['type']): boolean;
    };
    value: {
        type: PropType<number | Date | import("./type").TCalendarValue[] | undefined>;
    };
    visible: BooleanConstructor;
    onConfirm: PropType<((value: Date) => void) | undefined>;
    onSelect: PropType<((value: Date) => void) | undefined>;
};
export default _default;
