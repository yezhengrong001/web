import { TdSearchProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    action: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: string;
    };
    center: BooleanConstructor;
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    disabled: BooleanConstructor;
    focus: BooleanConstructor;
    label: {
        type: StringConstructor;
        default: string;
    };
    leftIcon: {
        type: PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    shape: {
        type: PropType<"round" | "square" | undefined>;
        default: "round" | "square" | undefined;
        validator(val: TdSearchProps['shape']): boolean;
    };
    value: {
        type: StringConstructor;
    };
    modelValue: {
        type: StringConstructor;
    };
    defaultValue: {
        type: StringConstructor;
    };
    onActionClick: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onBlur: PropType<((value: string, context: {
        e: FocusEvent;
    }) => void) | undefined>;
    onChange: PropType<((value: string, context?: {
        e?: MouseEvent | InputEvent | undefined;
    } | undefined) => void) | undefined>;
    onClear: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onFocus: PropType<((value: string, context: {
        e: FocusEvent;
    }) => void) | undefined>;
    onSubmit: PropType<((value: string, context: {
        e: KeyboardEvent;
    }) => void) | undefined>;
};
export default _default;
