import { TdAvatarProps } from './type';
declare const _default: import("vue").DefineComponent<{
    cascading: {
        type: import("vue").PropType<import("./type").CascadingValue | undefined>;
        default: import("./type").CascadingValue | undefined;
        validator(val: import("./type").CascadingValue | undefined): boolean;
    };
    collapseAvatar: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    max: {
        type: NumberConstructor;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
}, {
    classes: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    size: import("vue").Ref<string>;
    isShowEllipsisContent: import("vue").Ref<boolean>;
    ellipsisContent: import("vue").Ref<null>;
    avatarItems: () => TdAvatarProps[];
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    cascading: {
        type: import("vue").PropType<import("./type").CascadingValue | undefined>;
        default: import("./type").CascadingValue | undefined;
        validator(val: import("./type").CascadingValue | undefined): boolean;
    };
    collapseAvatar: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    max: {
        type: NumberConstructor;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
}>>, {
    size: string;
    cascading: import("./type").CascadingValue | undefined;
}>;
export default _default;
