/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, getCurrentInstance, resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, toDisplayString, createCommentVNode } from 'vue';
import { useElementBounding } from '@vueuse/core';
import { BacktopIcon } from 'tdesign-icons-vue-next';
import '../shared/index.js';
import BackTopProps from './props.js';
import config from '../config.js';
import TNodeComponent from '../shared/render-tnode.js';
import { useEmitEvent } from '../shared/useEmitEvent/index.js';
import { renderTNode } from '../shared/render.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

var prefix = config.prefix;
var name = "".concat(prefix, "-back-top");
var script = defineComponent({
  name: name,
  components: {
    TNode: TNodeComponent,
    TIconBackTop: BacktopIcon
  },
  props: BackTopProps,
  setup: function setup(props, context) {
    var emitEvent = useEmitEvent(props, context.emit);
    var el = computed(function () {
      return props.target ? props.target() : window.document.documentElement;
    });
    var _useElementBounding = useElementBounding(el),
      top = _useElementBounding.top;
    var classes = computed(function () {
      var _ref;
      return _ref = {}, _defineProperty(_ref, "".concat(name), true), _defineProperty(_ref, "".concat(prefix, "-is-fixed"), props.fixed), _defineProperty(_ref, "".concat(name, "--").concat(props.theme), true), _ref;
    });
    var internalInstance = getCurrentInstance();
    var iconTNode = computed(function () {
      var _context$slots;
      if ((_context$slots = context.slots) !== null && _context$slots !== void 0 && _context$slots.icon || typeof props.icon === "function") {
        return renderTNode(internalInstance, "icon");
      }
      return false;
    });
    var clickBackBtn = function clickBackBtn() {
      window.document.documentElement.scrollTop += top.value;
      emitEvent("to-top");
    };
    return {
      name: name,
      classes: classes,
      iconTNode: iconTNode,
      el: el,
      top: top,
      clickBackBtn: clickBackBtn
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  var _component_t_icon_back_top = resolveComponent("t-icon-back-top");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.classes),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.clickBackBtn && _ctx.clickBackBtn.apply(_ctx, arguments);
    })
  }, [_ctx.iconTNode ? (openBlock(), createBlock(_component_t_node, {
    key: 0,
    content: _ctx.iconTNode
  }, null, 8, ["content"])) : (openBlock(), createBlock(_component_t_icon_back_top, {
    key: 1
  })), _ctx.text ? (openBlock(), createElementBlock("span", {
    key: 2,
    class: normalizeClass("".concat(_ctx.name, "__text"))
  }, toDisplayString(_ctx.text), 3)) : createCommentVNode("", true)], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=back-top.js.map
