{"version":3,"file":"tabs.js","sources":["../../src/tabs/tabs.vue","../../src/tabs/tabs.vue?vue&type=template&id=502d9748&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <t-sticky v-bind=\"stickyProps\">\n      <div :class=\"navClasses\">\n        <div ref=\"navScroll\" :class=\"`${name}__nav-container`\">\n          <div ref=\"navWrap\" :class=\"`${name}__nav-wrap`\">\n            <tab-nav-item\n              v-for=\"item in itemProps\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :class=\"{\n                [`${name}__nav-item`]: true,\n                [activeClass]: item.value === currentValue,\n                [disabledClass]: item.disabled,\n              }\"\n              @click=\"(e) => tabClick(e, item)\"\n            >\n            </tab-nav-item>\n            <div v-if=\"showBottomLine\" ref=\"navLine\" :class=\"`${name}__nav-line`\" :style=\"lineStyle\"></div>\n          </div>\n        </div>\n      </div>\n    </t-sticky>\n    <div :class=\"`${name}__content`\">\n      <slot> </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  onMounted,\n  provide,\n  ref,\n  toRefs,\n  SetupContext,\n  nextTick,\n  onBeforeUnmount,\n  readonly,\n  Fragment,\n} from 'vue';\nimport config from '../config';\nimport TabsProps from './props';\nimport TabNavItem from './tab-nav-item.vue';\nimport { useVModel } from '../shared';\nimport CLASSNAMES from '../shared/constants';\nimport TSticky from '../sticky';\n\nconst { prefix } = config;\nconst name = `${prefix}-tabs`;\n\nexport default defineComponent({\n  name,\n  components: { TabNavItem, TSticky },\n  props: TabsProps,\n  emits: ['update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const placement = computed(() => props.placement);\n    const showBottomLine = computed(() => props.showBottomLine);\n    const stickyProps = computed(() => ({ disabled: true, ...props.stickyProps }));\n    const activeClass = CLASSNAMES.STATUS.active;\n    const disabledClass = CLASSNAMES.STATUS.disabled;\n    const classes = computed(() => [\n      `${name}`,\n      `${prefix}-is-${placement.value}`,\n      props.size ? CLASSNAMES.SIZE[props.size] : '',\n    ]);\n    const navClasses = ref([`${name}__nav`]);\n    const isScroll = ref(false);\n\n    const { value, modelValue } = toRefs(props);\n    const [currentValue, setCurrentValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const itemProps = computed(() => {\n      if (props.list) {\n        return props.list;\n      }\n      let children: any[] = context.slots.default ? context.slots.default() : [];\n\n      const res: any[] = [];\n      const label: any[] = [];\n      children.forEach((child) => {\n        if (child.type === Fragment) {\n          res.push(...child.children);\n        } else {\n          res.push(child);\n        }\n        if (child.children?.label) {\n          label.push(child.children.label()[0] || null);\n        }\n      });\n\n      children = res.filter((child: any) => child.type.name === `${prefix}-tab-panel`);\n      return children.map((item: any, index: number) => ({\n        ...item.props,\n        label: () => label[index] || item.props.label,\n      }));\n    });\n    const navScroll = ref<HTMLElement | null>(null);\n    const navWrap = ref<HTMLElement | null>(null);\n    const navLine = ref<HTMLElement | null>(null);\n    const lineStyle = ref('');\n    const moveToActiveTab = () => {\n      if (navWrap.value && navLine.value && showBottomLine.value) {\n        const tab = navWrap.value.querySelector<HTMLElement>(`.${activeClass}`);\n        if (!tab) return;\n        const line = navLine.value;\n        if (placement.value === 'left') {\n          lineStyle.value = `transform: translateY(${tab.offsetTop}px);${\n            props.animation ? `transition-duration:${props.animation.duration}ms` : ''\n          }`;\n        } else {\n          lineStyle.value = `transform: translateX(${\n            Number(tab.offsetLeft) + Number(tab.offsetWidth) / 2 - line.offsetWidth / 2\n          }px);${props.animation ? `transition-duration:${props.animation.duration}ms` : ''}`;\n        }\n      }\n    };\n\n    onMounted(() => {\n      isScroll.value = (navWrap.value?.offsetWidth || 0) > (navScroll.value?.offsetWidth || 0);\n      isScroll.value && navClasses.value.push(`${prefix}-is-scrollable`);\n      window.addEventListener('resize', moveToActiveTab, false);\n      setTimeout(() => {\n        moveToActiveTab();\n      }, 300);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', moveToActiveTab);\n    });\n\n    const tabClick = (event: Event, item: Record<string, unknown>) => {\n      const { value, disabled } = item as any;\n      if (disabled || currentValue.value === value) {\n        return false;\n      }\n      setCurrentValue(value);\n      nextTick(() => {\n        moveToActiveTab();\n      });\n    };\n    provide('currentValue', readonly(currentValue));\n\n    return {\n      name,\n      prefix,\n      classes,\n      navClasses,\n      activeClass,\n      disabledClass,\n      currentValue,\n      tabClick,\n      showBottomLine,\n      itemProps,\n      navScroll,\n      navWrap,\n      navLine,\n      lineStyle,\n      moveToActiveTab,\n      stickyProps,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <t-sticky v-bind=\"stickyProps\">\n      <div :class=\"navClasses\">\n        <div ref=\"navScroll\" :class=\"`${name}__nav-container`\">\n          <div ref=\"navWrap\" :class=\"`${name}__nav-wrap`\">\n            <tab-nav-item\n              v-for=\"item in itemProps\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :class=\"{\n                [`${name}__nav-item`]: true,\n                [activeClass]: item.value === currentValue,\n                [disabledClass]: item.disabled,\n              }\"\n              @click=\"(e) => tabClick(e, item)\"\n            >\n            </tab-nav-item>\n            <div v-if=\"showBottomLine\" ref=\"navLine\" :class=\"`${name}__nav-line`\" :style=\"lineStyle\"></div>\n          </div>\n        </div>\n      </div>\n    </t-sticky>\n    <div :class=\"`${name}__content`\">\n      <slot> </slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  onMounted,\n  provide,\n  ref,\n  toRefs,\n  SetupContext,\n  nextTick,\n  onBeforeUnmount,\n  readonly,\n  Fragment,\n} from 'vue';\nimport config from '../config';\nimport TabsProps from './props';\nimport TabNavItem from './tab-nav-item.vue';\nimport { useVModel } from '../shared';\nimport CLASSNAMES from '../shared/constants';\nimport TSticky from '../sticky';\n\nconst { prefix } = config;\nconst name = `${prefix}-tabs`;\n\nexport default defineComponent({\n  name,\n  components: { TabNavItem, TSticky },\n  props: TabsProps,\n  emits: ['update:value', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const placement = computed(() => props.placement);\n    const showBottomLine = computed(() => props.showBottomLine);\n    const stickyProps = computed(() => ({ disabled: true, ...props.stickyProps }));\n    const activeClass = CLASSNAMES.STATUS.active;\n    const disabledClass = CLASSNAMES.STATUS.disabled;\n    const classes = computed(() => [\n      `${name}`,\n      `${prefix}-is-${placement.value}`,\n      props.size ? CLASSNAMES.SIZE[props.size] : '',\n    ]);\n    const navClasses = ref([`${name}__nav`]);\n    const isScroll = ref(false);\n\n    const { value, modelValue } = toRefs(props);\n    const [currentValue, setCurrentValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const itemProps = computed(() => {\n      if (props.list) {\n        return props.list;\n      }\n      let children: any[] = context.slots.default ? context.slots.default() : [];\n\n      const res: any[] = [];\n      const label: any[] = [];\n      children.forEach((child) => {\n        if (child.type === Fragment) {\n          res.push(...child.children);\n        } else {\n          res.push(child);\n        }\n        if (child.children?.label) {\n          label.push(child.children.label()[0] || null);\n        }\n      });\n\n      children = res.filter((child: any) => child.type.name === `${prefix}-tab-panel`);\n      return children.map((item: any, index: number) => ({\n        ...item.props,\n        label: () => label[index] || item.props.label,\n      }));\n    });\n    const navScroll = ref<HTMLElement | null>(null);\n    const navWrap = ref<HTMLElement | null>(null);\n    const navLine = ref<HTMLElement | null>(null);\n    const lineStyle = ref('');\n    const moveToActiveTab = () => {\n      if (navWrap.value && navLine.value && showBottomLine.value) {\n        const tab = navWrap.value.querySelector<HTMLElement>(`.${activeClass}`);\n        if (!tab) return;\n        const line = navLine.value;\n        if (placement.value === 'left') {\n          lineStyle.value = `transform: translateY(${tab.offsetTop}px);${\n            props.animation ? `transition-duration:${props.animation.duration}ms` : ''\n          }`;\n        } else {\n          lineStyle.value = `transform: translateX(${\n            Number(tab.offsetLeft) + Number(tab.offsetWidth) / 2 - line.offsetWidth / 2\n          }px);${props.animation ? `transition-duration:${props.animation.duration}ms` : ''}`;\n        }\n      }\n    };\n\n    onMounted(() => {\n      isScroll.value = (navWrap.value?.offsetWidth || 0) > (navScroll.value?.offsetWidth || 0);\n      isScroll.value && navClasses.value.push(`${prefix}-is-scrollable`);\n      window.addEventListener('resize', moveToActiveTab, false);\n      setTimeout(() => {\n        moveToActiveTab();\n      }, 300);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', moveToActiveTab);\n    });\n\n    const tabClick = (event: Event, item: Record<string, unknown>) => {\n      const { value, disabled } = item as any;\n      if (disabled || currentValue.value === value) {\n        return false;\n      }\n      setCurrentValue(value);\n      nextTick(() => {\n        moveToActiveTab();\n      });\n    };\n    provide('currentValue', readonly(currentValue));\n\n    return {\n      name,\n      prefix,\n      classes,\n      navClasses,\n      activeClass,\n      disabledClass,\n      currentValue,\n      tabClick,\n      showBottomLine,\n      itemProps,\n      navScroll,\n      navWrap,\n      navLine,\n      lineStyle,\n      moveToActiveTab,\n      stickyProps,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TabNavItem","TSticky","props","TabsProps","emits","setup","context","placement","computed","showBottomLine","stickyProps","disabled","activeClass","CLASSNAMES","STATUS","active","disabledClass","classes","value","size","SIZE","navClasses","ref","isScroll","toRefs","modelValue","useVModel","defaultValue","onChange","currentValue","setCurrentValue","itemProps","list","children","slots","default","res","label","forEach","child","type","Fragment","push","filter","map","item","index","navScroll","navWrap","navLine","lineStyle","moveToActiveTab","tab","querySelector","line","offsetTop","animation","duration","Number","offsetLeft","offsetWidth","onMounted","window","addEventListener","setTimeout","onBeforeUnmount","removeEventListener","tabClick","event","nextTick","provide","readonly","_createElementBlock","class","_ctx","_createVNode","_component_t_sticky","_createElementVNode","_Fragment","_renderList","_createBlock","_component_tab_nav_item","key","_normalizeClass","onClick","e","style","_renderSlot","$slots"],"mappings":"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"}