declare const _default: import("vue").DefineComponent<{
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    indicator: {
        type: BooleanConstructor;
        default: boolean;
    };
    inheritColor: BooleanConstructor;
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    pause: BooleanConstructor;
    progress: {
        type: NumberConstructor;
    };
    reverse: BooleanConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: StringConstructor;
    };
    theme: {
        type: import("vue").PropType<"error" | "spinner" | "dots" | "circular" | "bar" | undefined>;
        default: "error" | "spinner" | "dots" | "circular" | "bar" | undefined;
        validator(val: "error" | "spinner" | "dots" | "circular" | "bar" | undefined): boolean;
    };
}, {
    name: string;
    pause: import("vue").Ref<boolean>;
    rootClass: import("vue").ComputedRef<any[]>;
    textClass: import("vue").ComputedRef<(string | {
        [x: string]: boolean;
    })[]>;
    textContent: import("vue").ComputedRef<any>;
    defaultContent: import("vue").ComputedRef<any>;
    rootStyle: import("vue").ComputedRef<"" | "color: inherit">;
    barStyle: import("vue").ComputedRef<{
        transform: string;
    }>;
    animationStyle: import("vue").ComputedRef<Record<string, any>>;
    realLoading: import("vue").ComputedRef<boolean>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    indicator: {
        type: BooleanConstructor;
        default: boolean;
    };
    inheritColor: BooleanConstructor;
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    pause: BooleanConstructor;
    progress: {
        type: NumberConstructor;
    };
    reverse: BooleanConstructor;
    size: {
        type: StringConstructor;
        default: string;
    };
    text: {
        type: StringConstructor;
    };
    theme: {
        type: import("vue").PropType<"error" | "spinner" | "dots" | "circular" | "bar" | undefined>;
        default: "error" | "spinner" | "dots" | "circular" | "bar" | undefined;
        validator(val: "error" | "spinner" | "dots" | "circular" | "bar" | undefined): boolean;
    };
}>>, {
    reverse: boolean;
    pause: boolean;
    duration: number;
    theme: "error" | "spinner" | "dots" | "circular" | "bar" | undefined;
    size: string;
    layout: "vertical" | "horizontal" | undefined;
    loading: boolean;
    delay: number;
    indicator: boolean;
    inheritColor: boolean;
}>;
export default _default;
