/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, getCurrentInstance, inject, computed, h, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createVNode } from 'vue';
import { CloseIcon, CheckIcon } from 'tdesign-icons-vue-next';
import StepItemProps from './step-item-props.js';
import '../shared/index.js';
import config from '../config.js';
import TNodeComponent from '../shared/render-tnode.js';
import { renderTNode } from '../shared/render.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import 'lodash/camelCase';
import '../shared/useEmitEvent/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '@babel/runtime/helpers/typeof';

var prefix = config.prefix;
var name = "".concat(prefix, "-step");
var script = defineComponent({
  name: name,
  components: {
    TNode: TNodeComponent
  },
  props: StepItemProps,
  setup: function setup(props) {
    var internalInstance = getCurrentInstance();
    var proxy = internalInstance.proxy;
    var stepsProvide = inject("stepsProvide", void 0);
    stepsProvide.relation(proxy);
    var index = computed(function () {
      return stepsProvide.state.children.indexOf(proxy);
    });
    var theme = computed(function () {
      return stepsProvide.theme;
    });
    var dot = computed(function () {
      return theme.value === "dot" && stepsProvide.layout === "vertical";
    });
    var iconNode = computed(function () {
      return renderTNode(internalInstance, "icon");
    });
    var iconContent = computed(function () {
      if (dot.value) {
        return "";
      }
      if (props.status === "error") {
        return h(CloseIcon);
      }
      if (index.value < current.value && readonly.value) {
        return h(CheckIcon);
      }
      if (typeof iconNode.value === "boolean") {
        return iconNode.value ? index.value + 1 : "";
      }
      return iconNode.value;
    });
    var titleContent = computed(function () {
      return renderTNode(internalInstance, "title");
    });
    var descContent = computed(function () {
      return renderTNode(internalInstance, "content");
    });
    var extraContent = computed(function () {
      return renderTNode(internalInstance, "extra");
    });
    var current = computed(function () {
      return stepsProvide.current.value || stepsProvide.defaultCurrent || 0;
    });
    var stepsStatus = computed(function () {
      return stepsProvide.status;
    });
    var readonly = computed(function () {
      return stepsProvide.readonly;
    });
    var rootClassName = computed(function () {
      return [name, _defineProperty({}, "".concat(name, "--default"), !readonly.value), _defineProperty({}, "".concat(name, "--").concat(currentStatus.value), currentStatus.value)];
    });
    var innerClassName = computed(function () {
      if (typeof iconNode.value === "boolean") {
        return ["".concat(name, "__inner")];
      }
      return ["".concat(name, "__inner"), "".concat(name, "__inner__icon")];
    });
    var iconClassName = computed(function () {
      return ["".concat(name, "-icon__number"), _defineProperty({}, "".concat(name, "-icon__dot"), dot.value)];
    });
    var currentStatus = computed(function () {
      var status = props.status;
      if (status !== "default") return status;
      if (index.value < current.value) return "finish";
      if (index.value === current.value) return "process";
      return "";
    });
    var onClickIcon = function onClickIcon(e) {
      if (!readonly.value && !dot.value) {
        stepsProvide.onClickItem(index.value, current.value, e);
      }
    };
    return {
      dot: dot,
      name: name,
      theme: theme,
      index: index,
      current: current,
      readonly: readonly,
      iconNode: iconNode,
      stepsStatus: stepsStatus,
      descContent: descContent,
      iconContent: iconContent,
      onClickIcon: onClickIcon,
      titleContent: titleContent,
      extraContent: extraContent,
      rootClassName: rootClassName,
      currentStatus: currentStatus,
      iconClassName: iconClassName,
      innerClassName: innerClassName
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.rootClassName)
  }, [createElementVNode("div", {
    class: normalizeClass(_ctx.innerClassName),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.onClickIcon && _ctx.onClickIcon.apply(_ctx, arguments);
    })
  }, [createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-icon"))
  }, [createElementVNode("div", {
    class: normalizeClass(_ctx.iconClassName)
  }, [createVNode(_component_t_node, {
    content: _ctx.iconContent
  }, null, 8, ["content"])], 2)], 2), createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-content"))
  }, [createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-title"))
  }, [createVNode(_component_t_node, {
    content: _ctx.titleContent
  }, null, 8, ["content"])], 2), createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-description"))
  }, [createVNode(_component_t_node, {
    content: _ctx.descContent
  }, null, 8, ["content"])], 2), createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "-extra"))
  }, [createVNode(_component_t_node, {
    content: _ctx.extraContent
  }, null, 8, ["content"])], 2)], 2)], 2)], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=step-item.js.map
