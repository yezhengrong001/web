{"version":3,"file":"utils.js","sources":["../../../src/pull-down-refresh/__test__/utils.ts"],"sourcesContent":["import { ComponentPublicInstance, nextTick } from 'vue';\nimport { VueWrapper, DOMWrapper } from '@vue/test-utils';\n\nfunction getTouch(el: Element | Window, x: number, y: number) {\n  return {\n    identifier: Date.now(),\n    target: el,\n    pageX: x,\n    pageY: y,\n    clientX: x,\n    clientY: y,\n    radiusX: 2.5,\n    radiusY: 2.5,\n    rotationAngle: 10,\n    force: 0.5,\n  };\n}\n\n// 模拟 touch 事件\nexport function trigger(\n  wrapper: VueWrapper<ComponentPublicInstance<any, any, any>> | DOMWrapper<Element> | Element | Window,\n  eventName: string,\n  x = 0,\n  y = 0,\n  options: any = {},\n) {\n  const el = 'element' in wrapper ? wrapper.element : wrapper;\n  const touchList = options.touchList || [getTouch(el, x, y)];\n\n  if (options.x || options.y) {\n    touchList.push(getTouch(el, options.x, options.y));\n  }\n\n  const event = document.createEvent('CustomEvent');\n  event.initCustomEvent(eventName, true, true, {});\n\n  Object.assign(event, {\n    clientX: x,\n    clientY: y,\n    touches: touchList,\n    targetTouches: touchList,\n    changedTouches: touchList,\n  });\n\n  el.dispatchEvent(event);\n\n  return nextTick();\n}\n\n/**\n * PullDownRefresh 使用了 [`useElementSize()`](https://github.com/vueuse/vueuse/blob/658374fd12/packages/core/useElementSize/index.ts)，\n * 该函数调用了 [`useResizeObserver()`](https://github.com/vueuse/vueuse/blob/658374fd12fbce2ac6127a9fb9bca52fb2137505/packages/core/useResizeObserver/index.ts)。\n *\n * 而 jsdom 中 ResizeObserver 无效，见： https://github.com/jsdom/jsdom/issues/3368\n *\n * @description 模拟实现 ResizeObserver\n * @params callback `new ResizeObserver(callback)` 中的回调，签名如下：\n *\n * ```ts\n * ResizeObserverCallback = (entries: ReadonlyArray<ResizeObserverEntry>, observer: ResizeObserver) => void\n * ```\n */\nexport class MockResizeObserver {\n  _callback: Function;\n\n  _element!: HTMLElement;\n\n  constructor(callback: Function) {\n    this._callback = callback;\n  }\n\n  observe(element: HTMLElement) {\n    this._element = element;\n    this._element.addEventListener('resize', this.trigger);\n  }\n\n  unobserve() {\n    this._element.removeEventListener('resize', this.trigger);\n  }\n\n  disconnect() {\n    this._element.removeEventListener('resize', this.trigger);\n  }\n\n  /**\n   * @description 手动触发 resize，提供参数。本例 `maxBarHeight` 始终为 `useElementSize()` 的默认初始值 `initialSize`（`{ width: 0, height: 0 }`），模拟返回有效值即可\n   * @param event 手动触发\n   */\n  trigger = (event: UIEvent) => {\n    const { width = 0, height = 0 } = event as { width?: number; height?: number };\n    this._callback([\n      {\n        contentRect: { width, height },\n      },\n    ]);\n  };\n}\n"],"names":["getTouch","el","x","y","identifier","Date","now","target","pageX","pageY","clientX","clientY","radiusX","radiusY","rotationAngle","force","trigger","wrapper","eventName","options","element","touchList","push","event","document","createEvent","initCustomEvent","Object","assign","touches","targetTouches","changedTouches","dispatchEvent","nextTick","MockResizeObserver","callback","width","height","_callback","contentRect","_element","addEventListener","removeEventListener"],"mappings":"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"}