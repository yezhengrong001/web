/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import { defineComponent, computed, createElementVNode, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, createCommentVNode, renderSlot, createTextVNode, toDisplayString } from 'vue';
import { ChevronLeftIcon } from 'tdesign-icons-vue-next';
import config from '../config.js';
import { NavbarProps } from './navbar.interface.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-navbar");
var script = defineComponent({
  name: name,
  components: {
    TChevronLeftIcon: ChevronLeftIcon
  },
  props: NavbarProps,
  emits: ["click-right", "click-text"],
  setup: function setup(props, context) {
    var nTitleContent = computed(function () {
      var title = props.title,
        maxLen = props.maxLen;
      if (title && title.trim().length > maxLen) {
        return "".concat(title.slice(0, maxLen), "...");
      }
      return title;
    });
    var handleBack = function handleBack() {
      if (history.length > 1) {
        history.back();
      }
    };
    var handleMore = function handleMore(evt) {
      context.emit("click-right", evt);
    };
    var clickText = function clickText(evt) {
      context.emit("click-text", evt);
    };
    return {
      name: name,
      nTitleContent: nTitleContent,
      handleBack: handleBack,
      handleMore: handleMore,
      clickText: clickText
    };
  }
});

var _hoisted_1 = /* @__PURE__ */createElementVNode("svg", {
  t: "1614321969302",
  class: "icon",
  viewBox: "0 0 1024 1024",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  "p-id": "2091",
  width: "24",
  height: "24"
}, [/* @__PURE__ */createElementVNode("path", {
  d: "M512 449.749333a64 64 0 1 1 0 128 64 64 0 0 1 0-128z m-318.805333-1.109333a64 64 0 1 1 0 128 64 64 0 0 1 0-128z m638.677333 0a64 64 0 1 1 0 128 64 64 0 0 1 0-128z",
  fill: "#444444",
  "p-id": "2092"
})], -1);
var _hoisted_2 = [_hoisted_1];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_chevron_left_icon = resolveComponent("t-chevron-left-icon");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.name)
  }, [createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "__back"))
  }, [_ctx.leftArrow ? (openBlock(), createElementBlock("span", {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "__back--arrow")),
    onClick: _cache[0] || (_cache[0] = function () {
      return _ctx.handleBack && _ctx.handleBack.apply(_ctx, arguments);
    })
  }, [createVNode(_component_t_chevron_left_icon)], 2)) : createCommentVNode("", true), renderSlot(_ctx.$slots, "left")], 2), createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "__text")),
    onClick: _cache[1] || (_cache[1] = function () {
      return _ctx.clickText && _ctx.clickText.apply(_ctx, arguments);
    })
  }, [renderSlot(_ctx.$slots, "default", {}, function () {
    return [createTextVNode(toDisplayString(_ctx.nTitleContent), 1)];
  })], 2), createElementVNode("div", {
    class: normalizeClass("".concat(_ctx.name, "__right"))
  }, [renderSlot(_ctx.$slots, "right"), _ctx.rightShow ? (openBlock(), createElementBlock("i", {
    key: 0,
    class: normalizeClass("".concat(_ctx.name, "__right--more")),
    onClick: _cache[2] || (_cache[2] = function () {
      return _ctx.handleMore && _ctx.handleMore.apply(_ctx, arguments);
    })
  }, _hoisted_2, 2)) : createCommentVNode("", true)], 2)], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=navbar.js.map
