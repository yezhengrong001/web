/**
 * tdesign v0.12.1
 * (c) 2022 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import { defineComponent, ref, computed, provide, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';
import TabBarProps from './props.js';
import config from '../config.js';
import '../shared/index.js';
import { useDefault } from '../shared/useDefault/index.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/component.js';
import '../shared/constants.js';
import '../shared/render.js';
import '@babel/runtime/helpers/typeof';
import 'lodash/camelCase';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useEmitEvent/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-tab-bar");
var script = defineComponent({
  name: name,
  props: TabBarProps,
  emits: ["update:value", "update:modelValue", "change"],
  setup: function setup(props, context) {
    var _useDefault = useDefault(props, context.emit, "value", "change"),
      _useDefault2 = _slicedToArray(_useDefault, 1),
      activeValue = _useDefault2[0];
    var defaultIndex = ref(-1);
    var updateChild = function updateChild(currentValue) {
      activeValue.value = currentValue;
    };
    var tabbarClass = computed(function () {
      var _ref;
      return ["".concat(name), (_ref = {}, _defineProperty(_ref, "".concat(name, "--bordered"), props.bordered), _defineProperty(_ref, "".concat(name, "--fixed"), props.fixed), _ref)];
    });
    provide("tab-bar", {
      defaultIndex: defaultIndex,
      activeValue: activeValue,
      updateChild: updateChild
    });
    return {
      tabbarClass: tabbarClass
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.tabbarClass),
    role: "tablist"
  }, [renderSlot(_ctx.$slots, "default")], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=tab-bar.js.map
