import { TdButtonProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    block: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: BooleanConstructor;
    ghost: BooleanConstructor;
    icon: {
        type: PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    loading: BooleanConstructor;
    shape: {
        type: PropType<"circle" | "round" | "rectangle" | "square" | undefined>;
        default: "circle" | "round" | "rectangle" | "square" | undefined;
        validator(val: TdButtonProps['shape']): boolean;
    };
    size: {
        type: PropType<import("../common").SizeEnum | undefined>;
        default: import("../common").SizeEnum | undefined;
        validator(val: TdButtonProps['size']): boolean;
    };
    theme: {
        type: PropType<"default" | "primary" | "danger" | undefined>;
        default: "default" | "primary" | "danger" | undefined;
        validator(val: TdButtonProps['theme']): boolean;
    };
    variant: {
        type: PropType<"base" | "text" | "outline" | undefined>;
        default: "base" | "text" | "outline" | undefined;
        validator(val: TdButtonProps['variant']): boolean;
    };
    onClick: PropType<((e: MouseEvent) => void) | undefined>;
};
export default _default;
