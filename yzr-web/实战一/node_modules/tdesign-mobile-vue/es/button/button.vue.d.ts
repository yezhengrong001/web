import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    block: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: BooleanConstructor;
    ghost: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    loading: BooleanConstructor;
    shape: {
        type: import("vue").PropType<"circle" | "round" | "rectangle" | "square" | undefined>;
        default: "circle" | "round" | "rectangle" | "square" | undefined;
        validator(val: "circle" | "round" | "rectangle" | "square" | undefined): boolean;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum | undefined>;
        default: import("../common").SizeEnum | undefined;
        validator(val: import("../common").SizeEnum | undefined): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "primary" | "danger" | undefined>;
        default: "default" | "primary" | "danger" | undefined;
        validator(val: "default" | "primary" | "danger" | undefined): boolean;
    };
    variant: {
        type: import("vue").PropType<"base" | "text" | "outline" | undefined>;
        default: "base" | "text" | "outline" | undefined;
        validator(val: "base" | "text" | "outline" | undefined): boolean;
    };
    onClick: import("vue").PropType<((e: MouseEvent) => void) | undefined>;
}, {
    buttonContent: import("vue").ComputedRef<any>;
    iconContent: import("vue").ComputedRef<any>;
    buttonClass: import("vue").ComputedRef<(string | {
        [x: string]: boolean | "circle" | "default" | "round" | "rectangle" | "square" | "primary" | "danger" | undefined;
    })[]>;
    onClick: (e: Event) => void;
    content: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    icon: import("vue").Ref<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    theme: import("vue").Ref<"default" | "primary" | "danger" | undefined>;
    shape: import("vue").Ref<"circle" | "round" | "rectangle" | "square" | undefined>;
    size: import("vue").Ref<import("../common").SizeEnum | undefined>;
    disabled: import("vue").Ref<boolean>;
    variant: import("vue").Ref<"base" | "text" | "outline" | undefined>;
    block: import("vue").Ref<boolean>;
    ghost: import("vue").Ref<boolean>;
    loading: import("vue").Ref<boolean>;
    name: string;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    block: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: BooleanConstructor;
    ghost: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    loading: BooleanConstructor;
    shape: {
        type: import("vue").PropType<"circle" | "round" | "rectangle" | "square" | undefined>;
        default: "circle" | "round" | "rectangle" | "square" | undefined;
        validator(val: "circle" | "round" | "rectangle" | "square" | undefined): boolean;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum | undefined>;
        default: import("../common").SizeEnum | undefined;
        validator(val: import("../common").SizeEnum | undefined): boolean;
    };
    theme: {
        type: import("vue").PropType<"default" | "primary" | "danger" | undefined>;
        default: "default" | "primary" | "danger" | undefined;
        validator(val: "default" | "primary" | "danger" | undefined): boolean;
    };
    variant: {
        type: import("vue").PropType<"base" | "text" | "outline" | undefined>;
        default: "base" | "text" | "outline" | undefined;
        validator(val: "base" | "text" | "outline" | undefined): boolean;
    };
    onClick: import("vue").PropType<((e: MouseEvent) => void) | undefined>;
}>>, {
    theme: "default" | "primary" | "danger" | undefined;
    shape: "circle" | "round" | "rectangle" | "square" | undefined;
    size: import("../common").SizeEnum | undefined;
    disabled: boolean;
    variant: "base" | "text" | "outline" | undefined;
    block: boolean;
    ghost: boolean;
    loading: boolean;
}>;
export default _default;
