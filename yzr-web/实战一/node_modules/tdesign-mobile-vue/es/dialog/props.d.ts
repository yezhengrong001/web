import { TdDialogProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    actions: {
        type: PropType<import("../button").TdButtonProps[] | undefined>;
    };
    buttonLayout: {
        type: PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: TdDialogProps['buttonLayout']): boolean;
    };
    cancelBtn: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
        default: string;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    confirmBtn: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | import("../button").TdButtonProps | undefined>;
        default: string;
    };
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    destroyOnClose: BooleanConstructor;
    preventScrollThrough: {
        type: BooleanConstructor;
        default: boolean;
    };
    showInAttachedElement: BooleanConstructor;
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    visible: BooleanConstructor;
    width: {
        type: PropType<string | number | undefined>;
    };
    zIndex: {
        type: NumberConstructor;
    };
    onCancel: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onClose: PropType<((context: import("./type").DialogCloseContext) => void) | undefined>;
    onConfirm: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onOverlayClick: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
};
export default _default;
