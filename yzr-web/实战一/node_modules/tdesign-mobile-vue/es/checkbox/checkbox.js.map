{"version":3,"file":"checkbox.js","sources":["../../src/checkbox/checkbox.vue","../../src/checkbox/checkbox.vue?vue&type=template&id=54b41810&lang.js"],"sourcesContent":["<template>\n  <div :class=\"componentClass\">\n    <div :class=\"`${flagName}__content-wrap`\">\n      <span v-if=\"align === 'left'\" :class=\"`${flagName}__icon-left`\">\n        <input\n          type=\"checkbox\"\n          :name=\"name\"\n          :class=\"`${flagName}__original-left`\"\n          :value=\"value\"\n          :disabled=\"isDisabled\"\n          :readonly=\"readonly\"\n          :checked=\"isChecked\"\n          :indeterminate=\"indeterminate\"\n          @click=\"handleChange\"\n        />\n        <t-node v-if=\"!indeterminate\" :content=\"checkIcons[isChecked ? 0 : 1]\" />\n        <minus-circle-filled-icon v-else />\n      </span>\n      <span\n        v-if=\"labelContent || checkboxContent\"\n        :class=\"{ [`${flagName}__label`]: true, [`${flagName}__label-left`]: align === 'right' }\"\n        @click=\"(e) => handleChange(e, 'content')\"\n      >\n        <span v-if=\"labelContent\" :style=\"labelStyle\">\n          <t-node :content=\"labelContent\" />\n        </span>\n        <span v-if=\"checkboxContent\" :class=\"`${flagName}__description`\" :style=\"contentStyle\">\n          <t-node :content=\"checkboxContent\" />\n        </span>\n      </span>\n\n      <span v-if=\"align === 'right'\" :class=\"`${flagName}__icon-right`\">\n        <input\n          type=\"checkbox\"\n          :name=\"name\"\n          :class=\"`${flagName}__original-right`\"\n          :value=\"value\"\n          :disabled=\"isDisabled\"\n          :readonly=\"readonly\"\n          :checked=\"isChecked\"\n          :indeterminate=\"indeterminate\"\n          @click=\"handleChange\"\n        />\n        <t-node v-if=\"!indeterminate\" :content=\"checkIcons[isChecked ? 0 : 1]\" />\n        <minus-circle-filled-icon v-else />\n      </span>\n    </div>\n    <!--下边框 -->\n    <div v-if=\"!borderless\" :class=\"`${flagName}__border ${flagName}__border--${align}`\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject, computed, SetupContext, defineComponent, getCurrentInstance, h, toRefs, CSSProperties } from 'vue';\nimport { MinusCircleFilledIcon, CheckCircleFilledIcon, CircleIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport CheckboxProps from './props';\nimport { renderContent, renderTNode, TNode, useDefault, useVModel } from '../shared';\nimport { TdCheckboxProps } from './type';\nimport ClASSNAMES from '../shared/constants';\n\nconst { prefix } = config;\nconst name = `${prefix}-checkbox`;\n\nexport default defineComponent({\n  name,\n  components: { TNode, MinusCircleFilledIcon },\n  props: {\n    ...CheckboxProps,\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  },\n  emits: ['update:checked', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const flagName = name;\n    const checkIcons = props.icon || [h(CheckCircleFilledIcon), h(CircleIcon)];\n    const [innerChecked, setInnerChecked] = useDefault<boolean, TdCheckboxProps>(\n      props,\n      context.emit,\n      'checked',\n      'change',\n    );\n\n    const internalInstance = getCurrentInstance();\n    const checkboxGroup: any = inject('checkboxGroup', undefined);\n    const labelContent = computed(() => renderContent(internalInstance, 'label', 'default'));\n    const checkboxContent = computed(() => renderTNode(internalInstance, 'content'));\n    const indeterminate = computed<boolean>(() => {\n      if (props.checkAll && checkboxGroup != null) return checkboxGroup.checkAllStatus.value === 'indeterminate';\n      return props.indeterminate;\n    });\n    const isChecked = computed(() => {\n      if (props.checkAll) return checkboxGroup?.checkAllStatus.value === 'checked';\n      if (checkboxGroup != null && props.value != null) {\n        return !!checkboxGroup.checkedSet.value?.has(props.value);\n      }\n\n      return innerChecked.value;\n    });\n\n    const isDisabled = computed(() => {\n      if (checkboxGroup?.max.value)\n        return checkboxGroup.max.value <= checkboxGroup.innerValue.value.length && !isChecked.value;\n      if (props.disabled != null) return props.disabled;\n      return !!checkboxGroup?.disabled.value;\n    });\n\n    const componentClass = computed(() => [\n      `${flagName}`,\n      {\n        [ClASSNAMES.STATUS.checked]: isChecked.value,\n        [ClASSNAMES.STATUS.disabled]: isDisabled.value,\n        [ClASSNAMES.STATUS.indeterminate]: indeterminate.value,\n      },\n    ]);\n\n    const getLimitRowStyle = (row: number): CSSProperties => ({\n      display: '-webkit-box',\n      overflow: 'hidden',\n      WebkitBoxOrient: 'vertical',\n      WebkitLineClamp: row,\n    });\n\n    const labelStyle = computed(() => ({\n      color: isDisabled.value ? '#dcdcdc' : 'inherit',\n      ...getLimitRowStyle(props.maxLabelRow),\n    }));\n\n    const contentStyle = computed(() => ({\n      ...getLimitRowStyle(props.maxContentRow),\n    }));\n\n    const handleChange = (e: Event, source?: string) => {\n      if (isDisabled.value) return;\n      if (source === 'content' && props.contentDisabled) return;\n\n      const value = !isChecked.value;\n      setInnerChecked(value, { e });\n      e.stopPropagation();\n      if (checkboxGroup && checkboxGroup?.onCheckedChange) {\n        checkboxGroup.onCheckedChange({ checked: value, checkAll: props.checkAll, e, option: props });\n      }\n    };\n\n    return {\n      ...toRefs(props),\n      isChecked,\n      checkIcons,\n      labelContent,\n      labelStyle,\n      checkboxContent,\n      contentStyle,\n      isDisabled,\n      flagName,\n      componentClass,\n      indeterminate,\n      handleChange,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"componentClass\">\n    <div :class=\"`${flagName}__content-wrap`\">\n      <span v-if=\"align === 'left'\" :class=\"`${flagName}__icon-left`\">\n        <input\n          type=\"checkbox\"\n          :name=\"name\"\n          :class=\"`${flagName}__original-left`\"\n          :value=\"value\"\n          :disabled=\"isDisabled\"\n          :readonly=\"readonly\"\n          :checked=\"isChecked\"\n          :indeterminate=\"indeterminate\"\n          @click=\"handleChange\"\n        />\n        <t-node v-if=\"!indeterminate\" :content=\"checkIcons[isChecked ? 0 : 1]\" />\n        <minus-circle-filled-icon v-else />\n      </span>\n      <span\n        v-if=\"labelContent || checkboxContent\"\n        :class=\"{ [`${flagName}__label`]: true, [`${flagName}__label-left`]: align === 'right' }\"\n        @click=\"(e) => handleChange(e, 'content')\"\n      >\n        <span v-if=\"labelContent\" :style=\"labelStyle\">\n          <t-node :content=\"labelContent\" />\n        </span>\n        <span v-if=\"checkboxContent\" :class=\"`${flagName}__description`\" :style=\"contentStyle\">\n          <t-node :content=\"checkboxContent\" />\n        </span>\n      </span>\n\n      <span v-if=\"align === 'right'\" :class=\"`${flagName}__icon-right`\">\n        <input\n          type=\"checkbox\"\n          :name=\"name\"\n          :class=\"`${flagName}__original-right`\"\n          :value=\"value\"\n          :disabled=\"isDisabled\"\n          :readonly=\"readonly\"\n          :checked=\"isChecked\"\n          :indeterminate=\"indeterminate\"\n          @click=\"handleChange\"\n        />\n        <t-node v-if=\"!indeterminate\" :content=\"checkIcons[isChecked ? 0 : 1]\" />\n        <minus-circle-filled-icon v-else />\n      </span>\n    </div>\n    <!--下边框 -->\n    <div v-if=\"!borderless\" :class=\"`${flagName}__border ${flagName}__border--${align}`\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { inject, computed, SetupContext, defineComponent, getCurrentInstance, h, toRefs, CSSProperties } from 'vue';\nimport { MinusCircleFilledIcon, CheckCircleFilledIcon, CircleIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport CheckboxProps from './props';\nimport { renderContent, renderTNode, TNode, useDefault, useVModel } from '../shared';\nimport { TdCheckboxProps } from './type';\nimport ClASSNAMES from '../shared/constants';\n\nconst { prefix } = config;\nconst name = `${prefix}-checkbox`;\n\nexport default defineComponent({\n  name,\n  components: { TNode, MinusCircleFilledIcon },\n  props: {\n    ...CheckboxProps,\n    borderless: {\n      type: Boolean,\n      value: false,\n    },\n  },\n  emits: ['update:checked', 'update:modelValue', 'change'],\n  setup(props, context: SetupContext) {\n    const flagName = name;\n    const checkIcons = props.icon || [h(CheckCircleFilledIcon), h(CircleIcon)];\n    const [innerChecked, setInnerChecked] = useDefault<boolean, TdCheckboxProps>(\n      props,\n      context.emit,\n      'checked',\n      'change',\n    );\n\n    const internalInstance = getCurrentInstance();\n    const checkboxGroup: any = inject('checkboxGroup', undefined);\n    const labelContent = computed(() => renderContent(internalInstance, 'label', 'default'));\n    const checkboxContent = computed(() => renderTNode(internalInstance, 'content'));\n    const indeterminate = computed<boolean>(() => {\n      if (props.checkAll && checkboxGroup != null) return checkboxGroup.checkAllStatus.value === 'indeterminate';\n      return props.indeterminate;\n    });\n    const isChecked = computed(() => {\n      if (props.checkAll) return checkboxGroup?.checkAllStatus.value === 'checked';\n      if (checkboxGroup != null && props.value != null) {\n        return !!checkboxGroup.checkedSet.value?.has(props.value);\n      }\n\n      return innerChecked.value;\n    });\n\n    const isDisabled = computed(() => {\n      if (checkboxGroup?.max.value)\n        return checkboxGroup.max.value <= checkboxGroup.innerValue.value.length && !isChecked.value;\n      if (props.disabled != null) return props.disabled;\n      return !!checkboxGroup?.disabled.value;\n    });\n\n    const componentClass = computed(() => [\n      `${flagName}`,\n      {\n        [ClASSNAMES.STATUS.checked]: isChecked.value,\n        [ClASSNAMES.STATUS.disabled]: isDisabled.value,\n        [ClASSNAMES.STATUS.indeterminate]: indeterminate.value,\n      },\n    ]);\n\n    const getLimitRowStyle = (row: number): CSSProperties => ({\n      display: '-webkit-box',\n      overflow: 'hidden',\n      WebkitBoxOrient: 'vertical',\n      WebkitLineClamp: row,\n    });\n\n    const labelStyle = computed(() => ({\n      color: isDisabled.value ? '#dcdcdc' : 'inherit',\n      ...getLimitRowStyle(props.maxLabelRow),\n    }));\n\n    const contentStyle = computed(() => ({\n      ...getLimitRowStyle(props.maxContentRow),\n    }));\n\n    const handleChange = (e: Event, source?: string) => {\n      if (isDisabled.value) return;\n      if (source === 'content' && props.contentDisabled) return;\n\n      const value = !isChecked.value;\n      setInnerChecked(value, { e });\n      e.stopPropagation();\n      if (checkboxGroup && checkboxGroup?.onCheckedChange) {\n        checkboxGroup.onCheckedChange({ checked: value, checkAll: props.checkAll, e, option: props });\n      }\n    };\n\n    return {\n      ...toRefs(props),\n      isChecked,\n      checkIcons,\n      labelContent,\n      labelStyle,\n      checkboxContent,\n      contentStyle,\n      isDisabled,\n      flagName,\n      componentClass,\n      indeterminate,\n      handleChange,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","MinusCircleFilledIcon","props","CheckboxProps","borderless","type","Boolean","value","emits","setup","context","flagName","checkIcons","icon","h","CheckCircleFilledIcon","CircleIcon","useDefault","emit","innerChecked","setInnerChecked","internalInstance","getCurrentInstance","checkboxGroup","inject","labelContent","computed","renderContent","checkboxContent","renderTNode","indeterminate","checkAll","checkAllStatus","isChecked","checkedSet","has","isDisabled","max","innerValue","length","disabled","componentClass","ClASSNAMES","STATUS","checked","getLimitRowStyle","row","display","overflow","WebkitBoxOrient","WebkitLineClamp","labelStyle","color","maxLabelRow","contentStyle","maxContentRow","handleChange","e","source","contentDisabled","stopPropagation","onCheckedChange","option","toRefs","_createElementBlock","class","_ctx","_createElementVNode","align","readonly","onClick","_createBlock","_component_t_node","content","_component_minus_circle_filled_icon","key","_normalizeClass","_cache","style","_createVNode"],"mappings":"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"}