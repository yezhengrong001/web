{"version":3,"file":"result.js","sources":["../../src/result/result.vue","../../src/result/result.vue?vue&type=template&id=3d78f957&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div :class=\"`${name}__thumb`\">\n      <template v-if=\"imageContent\">\n        <t-image v-if=\"typeof image === 'string'\" v-bind=\"customImageProps\"></t-image>\n        <t-node v-else :content=\"imageContent\"></t-node>\n      </template>\n      <template v-else>\n        <t-node v-if=\"iconContent !== undefined\" :class=\"`${name}__icon`\" :content=\"iconContent\"></t-node>\n      </template>\n    </div>\n    <div v-if=\"titleContent\" :class=\"`${name}__title`\">\n      <t-node :content=\"titleContent\"></t-node>\n    </div>\n    <div v-if=\"descriptionContent\" :class=\"`${name}__description`\">\n      <t-node :content=\"descriptionContent\"></t-node>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { h, computed, toRefs, getCurrentInstance, SetupContext, defineComponent } from 'vue';\nimport { InfoCircleIcon, CheckCircleIcon, CloseCircleIcon } from 'tdesign-icons-vue-next';\nimport resultProps from './props';\nimport config from '../config';\nimport { TdResultProps } from './type';\nimport { useEmitEvent, renderContent, renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-result`;\n\nconst iconDefault = {\n  default: h(InfoCircleIcon),\n  success: h(CheckCircleIcon),\n  warning: h(InfoCircleIcon),\n  error: h(CloseCircleIcon),\n};\n\nexport default defineComponent({\n  name,\n  components: {\n    TNode,\n  },\n  props: resultProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const imageContent = computed(() => renderTNode(internalInstance, 'image'));\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descriptionContent = computed(() => renderTNode(internalInstance, 'description'));\n\n    const classes = computed(() => [`${name}`, `${name}--theme-${props.theme}`]);\n\n    let iconContent: any;\n    if (props.icon !== '') {\n      if (Object.keys(iconDefault).includes(props?.theme as string)) {\n        const key = props.theme as string;\n        iconContent = computed(() => iconDefault?.[key]);\n      }\n      iconContent = props.icon ? computed(() => renderTNode(internalInstance, 'icon')) : iconContent;\n    }\n\n    const baseImageProps = {\n      src: props.image,\n    };\n\n    const customImageProps = computed(() => ({\n      ...props.imageProps,\n      ...baseImageProps,\n    }));\n\n    return {\n      name,\n      classes,\n      imageContent,\n      customImageProps,\n      iconContent,\n      titleContent,\n      descriptionContent,\n      ...toRefs(props),\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div :class=\"`${name}__thumb`\">\n      <template v-if=\"imageContent\">\n        <t-image v-if=\"typeof image === 'string'\" v-bind=\"customImageProps\"></t-image>\n        <t-node v-else :content=\"imageContent\"></t-node>\n      </template>\n      <template v-else>\n        <t-node v-if=\"iconContent !== undefined\" :class=\"`${name}__icon`\" :content=\"iconContent\"></t-node>\n      </template>\n    </div>\n    <div v-if=\"titleContent\" :class=\"`${name}__title`\">\n      <t-node :content=\"titleContent\"></t-node>\n    </div>\n    <div v-if=\"descriptionContent\" :class=\"`${name}__description`\">\n      <t-node :content=\"descriptionContent\"></t-node>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { h, computed, toRefs, getCurrentInstance, SetupContext, defineComponent } from 'vue';\nimport { InfoCircleIcon, CheckCircleIcon, CloseCircleIcon } from 'tdesign-icons-vue-next';\nimport resultProps from './props';\nimport config from '../config';\nimport { TdResultProps } from './type';\nimport { useEmitEvent, renderContent, renderTNode, TNode } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-result`;\n\nconst iconDefault = {\n  default: h(InfoCircleIcon),\n  success: h(CheckCircleIcon),\n  warning: h(InfoCircleIcon),\n  error: h(CloseCircleIcon),\n};\n\nexport default defineComponent({\n  name,\n  components: {\n    TNode,\n  },\n  props: resultProps,\n  setup(props) {\n    const internalInstance = getCurrentInstance();\n    const imageContent = computed(() => renderTNode(internalInstance, 'image'));\n    const titleContent = computed(() => renderTNode(internalInstance, 'title'));\n    const descriptionContent = computed(() => renderTNode(internalInstance, 'description'));\n\n    const classes = computed(() => [`${name}`, `${name}--theme-${props.theme}`]);\n\n    let iconContent: any;\n    if (props.icon !== '') {\n      if (Object.keys(iconDefault).includes(props?.theme as string)) {\n        const key = props.theme as string;\n        iconContent = computed(() => iconDefault?.[key]);\n      }\n      iconContent = props.icon ? computed(() => renderTNode(internalInstance, 'icon')) : iconContent;\n    }\n\n    const baseImageProps = {\n      src: props.image,\n    };\n\n    const customImageProps = computed(() => ({\n      ...props.imageProps,\n      ...baseImageProps,\n    }));\n\n    return {\n      name,\n      classes,\n      imageContent,\n      customImageProps,\n      iconContent,\n      titleContent,\n      descriptionContent,\n      ...toRefs(props),\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","iconDefault","default","h","InfoCircleIcon","success","CheckCircleIcon","warning","error","CloseCircleIcon","defineComponent","components","TNode","props","resultProps","setup","internalInstance","getCurrentInstance","imageContent","computed","renderTNode","titleContent","descriptionContent","classes","theme","iconContent","icon","Object","keys","includes","key","baseImageProps","src","image","customImageProps","imageProps","toRefs","_createElementBlock","class","_ctx","_createElementVNode","_Fragment","_openBlock","_createBlock","_component_t_image","_component_t_node","content","_createVNode"],"mappings":"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"}