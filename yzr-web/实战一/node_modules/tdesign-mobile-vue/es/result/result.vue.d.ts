import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    description: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    icon: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    theme: {
        type: import("vue").PropType<"default" | "error" | "success" | "warning" | undefined>;
        default: "default" | "error" | "success" | "warning" | undefined;
        validator(val: "default" | "error" | "success" | "warning" | undefined): boolean;
    };
    imageProps: {
        type: import("vue").PropType<import("../image").TdImageProps | undefined>;
    };
}, {
    title: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    image: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    description: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    icon: import("vue").Ref<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    theme: import("vue").Ref<"default" | "error" | "success" | "warning" | undefined>;
    imageProps: import("vue").Ref<import("../image").TdImageProps | undefined>;
    name: string;
    classes: import("vue").ComputedRef<string[]>;
    imageContent: import("vue").ComputedRef<any>;
    customImageProps: import("vue").ComputedRef<{
        src: string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined;
        alt?: string | undefined;
        error?: ((h: typeof h) => import("../common").SlotReturnValue) | undefined;
        fit?: "fill" | "none" | "contain" | "cover" | "scale-down" | undefined;
        lazy?: boolean | undefined;
        loading?: ((h: typeof h) => import("../common").SlotReturnValue) | undefined;
        position?: string | undefined;
        shape?: "circle" | "round" | "square" | undefined;
        onError?: (() => void) | undefined;
        onLoad?: (() => void) | undefined;
    }>;
    iconContent: any;
    titleContent: import("vue").ComputedRef<any>;
    descriptionContent: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    description: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    icon: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue) | undefined>;
    };
    theme: {
        type: import("vue").PropType<"default" | "error" | "success" | "warning" | undefined>;
        default: "default" | "error" | "success" | "warning" | undefined;
        validator(val: "default" | "error" | "success" | "warning" | undefined): boolean;
    };
    imageProps: {
        type: import("vue").PropType<import("../image").TdImageProps | undefined>;
    };
}>>, {
    theme: "default" | "error" | "success" | "warning" | undefined;
}>;
export default _default;
