declare const _default: import("vue").DefineComponent<{
    animation: {
        type: import("vue").PropType<"gradient" | "flashed" | undefined>;
        validator(val: "gradient" | "flashed" | undefined): boolean;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    rowCol: {
        type: import("vue").PropType<import("./type").SkeletonRowCol | undefined>;
    };
    theme: {
        type: import("vue").PropType<"image" | "text" | "avatar" | "paragraph" | undefined>;
        default: "image" | "text" | "avatar" | "paragraph" | undefined;
        validator(val: "image" | "text" | "avatar" | "paragraph" | undefined): boolean;
    };
}, {
    baseClass: string;
    rootClasses: import("vue").ComputedRef<string[]>;
    parsedRowcols: import("vue").ComputedRef<any>;
    showContent: import("vue").ComputedRef<boolean>;
    skeletonContent: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    animation: {
        type: import("vue").PropType<"gradient" | "flashed" | undefined>;
        validator(val: "gradient" | "flashed" | undefined): boolean;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    rowCol: {
        type: import("vue").PropType<import("./type").SkeletonRowCol | undefined>;
    };
    theme: {
        type: import("vue").PropType<"image" | "text" | "avatar" | "paragraph" | undefined>;
        default: "image" | "text" | "avatar" | "paragraph" | undefined;
        validator(val: "image" | "text" | "avatar" | "paragraph" | undefined): boolean;
    };
}>>, {
    theme: "image" | "text" | "avatar" | "paragraph" | undefined;
    loading: boolean;
    delay: number;
}>;
export default _default;
