{"version":3,"file":"message.js","sources":["../../src/message/message.vue","../../src/message/message.vue?vue&type=template&id=c72dc4a2&lang.js"],"sourcesContent":["<template>\n  <transition name=\"message\" @after-leave=\"afterLeave\" @after-enter=\"afterEnter\">\n    <div v-if=\"currentVisible\" ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n      <slot>\n        <slot name=\"icon\">\n          <check-circle-filled-icon v-if=\"theme === 'success'\" />\n          <error-circle-filled-icon v-else />\n        </slot>\n        <span :class=\"`${name}--txt`\">{{ content }}</span>\n        <close-icon v-if=\"closeBtn === true\" @click=\"onClose\" />\n        <t-node v-else :content=\"closeBtnContent\" />\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, watch, defineComponent, getCurrentInstance, SetupContext, toRefs } from 'vue';\nimport { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport messageProps from './props';\nimport config from '../config';\nimport { renderTNode, TNode, useEmitEvent, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-message`;\n\nexport default defineComponent({\n  name,\n  components: { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon, TNode },\n  props: messageProps,\n  emits: ['visible-change', 'open', 'opened', 'close', 'closed'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const root = ref(null);\n    const internalInstance = getCurrentInstance();\n    const closeBtnContent = computed(() => renderTNode(internalInstance, 'closeBtn'));\n    const { visible, modelValue } = toRefs(props);\n    const [currentVisible, setVisible] = useVModel(visible, modelValue, props.defaultValue, props.onChange);\n    const rootClasses = computed(() => ({\n      [name]: true,\n      [`${name}--${props.theme}`]: true,\n      [`${name}-align--${props.align}`]: !!props.align,\n    }));\n    const rootStyles = computed(() => ({\n      zIndex: props.zIndex,\n    }));\n\n    const onClose = () => {\n      emitEvent('close');\n      setVisible(false);\n    };\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val === false) return;\n\n        emitEvent('open');\n        setVisible(true);\n\n        if (props.duration > 0) {\n          setTimeout(onClose, props.duration);\n        }\n      },\n    );\n\n    return {\n      name: ref(name),\n      root,\n      currentVisible,\n      rootClasses,\n      rootStyles,\n      closeBtnContent,\n      onClose,\n      afterEnter: () => emitEvent('opened'),\n      afterLeave: () => emitEvent('closed'),\n    };\n  },\n});\n</script>\n","<template>\n  <transition name=\"message\" @after-leave=\"afterLeave\" @after-enter=\"afterEnter\">\n    <div v-if=\"currentVisible\" ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n      <slot>\n        <slot name=\"icon\">\n          <check-circle-filled-icon v-if=\"theme === 'success'\" />\n          <error-circle-filled-icon v-else />\n        </slot>\n        <span :class=\"`${name}--txt`\">{{ content }}</span>\n        <close-icon v-if=\"closeBtn === true\" @click=\"onClose\" />\n        <t-node v-else :content=\"closeBtnContent\" />\n      </slot>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, watch, defineComponent, getCurrentInstance, SetupContext, toRefs } from 'vue';\nimport { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon } from 'tdesign-icons-vue-next';\nimport messageProps from './props';\nimport config from '../config';\nimport { renderTNode, TNode, useEmitEvent, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-message`;\n\nexport default defineComponent({\n  name,\n  components: { CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseIcon, TNode },\n  props: messageProps,\n  emits: ['visible-change', 'open', 'opened', 'close', 'closed'],\n  setup(props: any, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const root = ref(null);\n    const internalInstance = getCurrentInstance();\n    const closeBtnContent = computed(() => renderTNode(internalInstance, 'closeBtn'));\n    const { visible, modelValue } = toRefs(props);\n    const [currentVisible, setVisible] = useVModel(visible, modelValue, props.defaultValue, props.onChange);\n    const rootClasses = computed(() => ({\n      [name]: true,\n      [`${name}--${props.theme}`]: true,\n      [`${name}-align--${props.align}`]: !!props.align,\n    }));\n    const rootStyles = computed(() => ({\n      zIndex: props.zIndex,\n    }));\n\n    const onClose = () => {\n      emitEvent('close');\n      setVisible(false);\n    };\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val === false) return;\n\n        emitEvent('open');\n        setVisible(true);\n\n        if (props.duration > 0) {\n          setTimeout(onClose, props.duration);\n        }\n      },\n    );\n\n    return {\n      name: ref(name),\n      root,\n      currentVisible,\n      rootClasses,\n      rootStyles,\n      closeBtnContent,\n      onClose,\n      afterEnter: () => emitEvent('opened'),\n      afterLeave: () => emitEvent('closed'),\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","CheckCircleFilledIcon","ErrorCircleFilledIcon","CloseIcon","TNode","props","messageProps","emits","setup","context","emitEvent","useEmitEvent","emit","root","ref","internalInstance","getCurrentInstance","closeBtnContent","computed","renderTNode","toRefs","visible","modelValue","useVModel","defaultValue","onChange","currentVisible","setVisible","rootClasses","theme","align","rootStyles","zIndex","onClose","watch","value","val","duration","setTimeout","afterEnter","afterLeave","_createBlock","_Transition","onAfterLeave","_ctx","onAfterEnter","_createElementBlock","class","style","_renderSlot","_component_check_circle_filled_icon","key","_component_error_circle_filled_icon","_createElementVNode","content","closeBtn","_component_close_icon","onClick","_component_t_node"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAQA,SAAWC,MAAA,CAAXD;AACR,IAAME,OAAUF,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,EAAA,UAAA,CAAA,CAAA;AAEhB,aAAeG,eAAgB,CAAA;AAC7BD,EAAAA,IAAA,EAAAA,IAAA;AACAE,EAAAA,UAAY,EAAA;AAAEC,IAAAA,qBAAuB,EAAvBA,qBAAuB;AAAAC,IAAAA,qBAAA,EAAAA,qBAAA;AAAuBC,IAAAA,WAAAA;AAAWC,IAAAA,KAAM,EAANA,cAAAA;GAAM;AAC7EC,EAAAA,KAAO,EAAAC,YAAA;EACPC,OAAO,CAAC,gBAAA,EAAkB,MAAQ,EAAA,QAAA,EAAU,SAAS,QAAQ,CAAA;AAC7DC,EAAAA,KAAA,EAAMH,SAAAA,KAAAA,CAAAA,OAAYI,OAAuB,EAAA;IACvC,IAAMC,SAAY,GAAAC,YAAA,CAAaN,KAAO,EAAAI,OAAA,CAAQG,IAAI,CAAA,CAAA;AAC5C,IAAA,IAAAC,IAAA,GAAOC,IAAI,IAAI,CAAA,CAAA;IACrB,IAAMC,mBAAmBC,kBAAmB,EAAA,CAAA;IAC5C,IAAMC,kBAAkBC,QAAS,CAAA,YAAA;AAAA,MAAA,OAAMC,WAAY,CAAAJ,gBAAA,EAAkB,UAAU,CAAC,CAAA;KAAA,CAAA,CAAA;IAChF,IAAgCK,OAAAA,GAAAA,OAAOf,KAAK,CAAA;AAApCgB,MAAAA,OAAA,WAAAA,OAAA;AAASC,MAAAA,UAAW,WAAXA,UAAW,CAAA;AACtB,IAAA,IAAA,UAAA,GAA+BC,SAAA,CAAUF,SAASC,UAAY,EAAAjB,KAAA,CAAMmB,YAAc,EAAAnB,KAAA,CAAMoB,QAAQ,CAAA;AAAA,MAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;MAA/FC,cAAgB,GAAA,WAAA,CAAA,CAAA,CAAA;MAAAC,UAAU,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;IAC3B,IAAAC,WAAA,GAAcV,SAAS,YAAA;AAAA,MAAA,IAAA,IAAA,CAAA;MAAA,OAC1BpB,IAAAA,GAAAA,EAAAA,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,IAAO,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CACJA,IAAS,EAAAO,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAA,CAAMwB,KAAU,CAAA,EAAA,IAAA,mCACzB/B,IAAA,EAAA,UAAA,CAAA,CAAA,MAAA,CAAeO,MAAMyB,KAAU,GAAA,CAAC,CAACzB,KAAM,CAAAyB,KAAA,CAAA,EAAA,IAAA,CAAA;AAAA,KAC3C,CAAA,CAAA;IACI,IAAAC,UAAA,GAAab,SAAS,YAAA;MAAA,OAAO;QACjCc,QAAQ3B,KAAM,CAAA2B,MAAAA;OACd,CAAA;AAAA,KAAA,CAAA,CAAA;AAEF,IAAA,IAAMC,UAAU,SAAVA,UAAgB;MACpBvB,SAAA,CAAU,OAAO,CAAA,CAAA;MACjBiB,UAAA,CAAW,KAAK,CAAA,CAAA;KAClB,CAAA;AAEAO,IAAAA,KAAA,CACE,YAAA;MAAA,OAAMR,cAAe,CAAAS,KAAA,CAAA;KACrB,EAAA,UAACC,GAAQ,EAAA;MACP,IAAIA,GAAQ,KAAA,KAAA,EAAO,OAAA;MAEnB1B,SAAA,CAAU,MAAM,CAAA,CAAA;MAChBiB,UAAA,CAAW,IAAI,CAAA,CAAA;AAEX,MAAA,IAAAtB,KAAA,CAAMgC,WAAW,CAAG,EAAA;AACXC,QAAAA,UAAA,CAAAL,OAAA,EAAS5B,MAAMgC,QAAQ,CAAA,CAAA;AACpC,OAAA;AACF,KAAA,CACF,CAAA;IAEO,OAAA;AACLvC,MAAAA,IAAA,EAAMgB,IAAIhB,IAAI,CAAA;AACde,MAAAA,IAAA,EAAAA,IAAA;AACAa,MAAAA,cAAA,EAAAA,cAAA;AACAE,MAAAA,WAAA,EAAAA,WAAA;AACAG,MAAAA,UAAA,EAAAA,UAAA;AACAd,MAAAA,eAAA,EAAAA,eAAA;AACAgB,MAAAA,OAAA,EAAAA,OAAA;AACAM,MAAAA,UAAA,EAAY,SAAA,UAAA,GAAA;QAAA,OAAM7B,SAAA,CAAU,QAAQ,CAAA,CAAA;AAAA,OAAA;AACpC8B,MAAAA,UAAA,EAAY,SAAA,UAAA,GAAA;QAAA,OAAM9B,SAAA,CAAU,QAAQ,CAAA,CAAA;AAAA,OAAA;KACtC,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;;;;oBC7EC,EAAA+B,WAAA,CAYYC,UAAA,EAAA;AAZA5C,IAAAA,IAAK,EAAA,SAAA;IAAW6C,cAAaC,IAAU,CAAAJ,UAAA;IAAGK,cAAaD,IAAU,CAAAL,UAAAA;;qBAC3E,YAAA;MAAA,OAUK,CAVMK,IAAc,CAAAlB,cAAA,iBAAzBoB,mBAUK,KAAA,EAAA;;AAVsBhC,QAAAA,GAAI,EAAA,MAAA;AAAQiC,QAAAA,KAAA,gBAAO,CAAAH,IAAA,CAAWhB,WAAA,CAAA;AAAGoB,QAAAA,KAAA,gBAAO,CAAAJ,IAAA,CAAUb,UAAA,CAAA;UAC3EkB,WAQML,4BARN,YAAA;QAAA,OAQM,CAPJK,WAGML,yBAHN,YAAA;AAAA,UAAA,OAGM,CAF4BA,KAAIf,KAAA,KAAA,SAAA,eAApC,EAAAY,WAAA,CAAsDS,qCAAA;AAAAC,YAAAA,GAAA,EAAA,CAAA;WAAA,CAAA,gBACtD,EAAAV,WAAA,CAAkCW,qCAAA;AAAAD,YAAAA,GAAA,EAAA,CAAA;WAAA,CAAA,CAAA;YAEpCE,mBAAiD,MAAA,EAAA;AAA1CN,UAAAA,sBAAUH,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,CAAI9C,IAAA,EAAA,OAAA,CAAA,CAAA;2BAAY8C,IAAM,CAAAU,OAAA,GAAA,CAAA,CAAA,EACrBV,KAAOW,QAAA,KAAA,IAAA,iBAAzBd,YAAuDe,qBAAA,EAAA;;UAAjBC,SAAOb,IAAO,CAAAX,OAAAA;gDACpD,EAAAQ,WAAA,CAA2CiB,iBAAA,EAAA;;UAA3BJ,SAASV,IAAe,CAAA3B,eAAAA;;;;;;;;;;;;"}