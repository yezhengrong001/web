{"version":3,"file":"popup.js","sources":["../../src/popup/popup.vue","../../src/popup/popup.vue?vue&type=template&id=3b5ae3b1&lang.js"],"sourcesContent":["<template>\n  <teleport :to=\"to\" :disabled=\"!to\">\n    <div :class=\"[rootClasses, $attrs.class]\" :style=\"rootStyles\" @touchmove=\"handleMove\">\n      <transition name=\"fade\">\n        <t-overlay\n          v-bind=\"overlayProps\"\n          :visible=\"currentVisible\"\n          :transparent=\"!showOverlay\"\n          @click=\"handleOverlayClick\"\n        />\n      </transition>\n      <transition :name=\"contentTransitionName\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n        <div v-show=\"currentVisible\" :class=\"contentClasses\">\n          <slot></slot>\n        </div>\n      </transition>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, SetupContext, watch, defineComponent } from 'vue';\nimport popupProps from './props';\nimport TOverlay from '../overlay';\nimport config from '../config';\nimport { TdPopupProps } from './type';\nimport { useDefault, useEmitEvent } from '../shared';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-popup`;\n\nexport default defineComponent({\n  name,\n  components: { TOverlay },\n  props: popupProps,\n  emits: ['open', 'close', 'opened', 'closed', 'visible-change', 'update:visible', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const [currentVisible] = useDefault<TdPopupProps['visible'], TdPopupProps>(\n      props,\n      context.emit,\n      'visible',\n      'visible-change',\n    );\n\n    const rootClasses = computed(() => name);\n    const rootStyles = computed(() =>\n      props.customStyle || props.zIndex\n        ? (props.customStyle && `${props.customStyle};`) + (props.zIndex && `z-index:${props.zIndex};`)\n        : undefined,\n    );\n\n    const contentClasses = computed(() => ({\n      [`${name}--content`]: true,\n      [`${name}--content-${props.placement}`]: true,\n    }));\n\n    const contentTransitionName = computed(() => {\n      const { transitionName, placement } = props;\n      if (transitionName) return transitionName;\n      if (placement === 'center') return 'fade-zoom';\n      return `slide-${placement}`;\n    });\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        const cls = `${prefix}-overflow-hidden`;\n        if (val) {\n          document.body.classList.add(cls);\n          emitEvent('open');\n          currentVisible.value = true;\n        } else {\n          document.body.classList.remove(cls);\n        }\n      },\n    );\n\n    const handleOverlayClick = () => {\n      if (!props.closeOnOverlayClick) {\n        return;\n      }\n      emitEvent('close');\n      currentVisible.value = false;\n    };\n\n    const handleMove = (e: TouchEvent) => {\n      if (props.lockScroll) {\n        e.preventDefault();\n      }\n    };\n\n    const afterLeave = () => emitEvent('closed');\n    const afterEnter = () => emitEvent('opened');\n\n    return {\n      name: ref(name),\n      currentVisible,\n      rootClasses,\n      rootStyles,\n      contentClasses,\n      contentTransitionName,\n      afterEnter,\n      afterLeave,\n      handleOverlayClick,\n      handleMove,\n    };\n  },\n});\n</script>\n","<template>\n  <teleport :to=\"to\" :disabled=\"!to\">\n    <div :class=\"[rootClasses, $attrs.class]\" :style=\"rootStyles\" @touchmove=\"handleMove\">\n      <transition name=\"fade\">\n        <t-overlay\n          v-bind=\"overlayProps\"\n          :visible=\"currentVisible\"\n          :transparent=\"!showOverlay\"\n          @click=\"handleOverlayClick\"\n        />\n      </transition>\n      <transition :name=\"contentTransitionName\" @after-enter=\"afterEnter\" @after-leave=\"afterLeave\">\n        <div v-show=\"currentVisible\" :class=\"contentClasses\">\n          <slot></slot>\n        </div>\n      </transition>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, SetupContext, watch, defineComponent } from 'vue';\nimport popupProps from './props';\nimport TOverlay from '../overlay';\nimport config from '../config';\nimport { TdPopupProps } from './type';\nimport { useDefault, useEmitEvent } from '../shared';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-popup`;\n\nexport default defineComponent({\n  name,\n  components: { TOverlay },\n  props: popupProps,\n  emits: ['open', 'close', 'opened', 'closed', 'visible-change', 'update:visible', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    const emitEvent = useEmitEvent(props, context.emit);\n    const [currentVisible] = useDefault<TdPopupProps['visible'], TdPopupProps>(\n      props,\n      context.emit,\n      'visible',\n      'visible-change',\n    );\n\n    const rootClasses = computed(() => name);\n    const rootStyles = computed(() =>\n      props.customStyle || props.zIndex\n        ? (props.customStyle && `${props.customStyle};`) + (props.zIndex && `z-index:${props.zIndex};`)\n        : undefined,\n    );\n\n    const contentClasses = computed(() => ({\n      [`${name}--content`]: true,\n      [`${name}--content-${props.placement}`]: true,\n    }));\n\n    const contentTransitionName = computed(() => {\n      const { transitionName, placement } = props;\n      if (transitionName) return transitionName;\n      if (placement === 'center') return 'fade-zoom';\n      return `slide-${placement}`;\n    });\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        const cls = `${prefix}-overflow-hidden`;\n        if (val) {\n          document.body.classList.add(cls);\n          emitEvent('open');\n          currentVisible.value = true;\n        } else {\n          document.body.classList.remove(cls);\n        }\n      },\n    );\n\n    const handleOverlayClick = () => {\n      if (!props.closeOnOverlayClick) {\n        return;\n      }\n      emitEvent('close');\n      currentVisible.value = false;\n    };\n\n    const handleMove = (e: TouchEvent) => {\n      if (props.lockScroll) {\n        e.preventDefault();\n      }\n    };\n\n    const afterLeave = () => emitEvent('closed');\n    const afterEnter = () => emitEvent('opened');\n\n    return {\n      name: ref(name),\n      currentVisible,\n      rootClasses,\n      rootStyles,\n      contentClasses,\n      contentTransitionName,\n      afterEnter,\n      afterLeave,\n      handleOverlayClick,\n      handleMove,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TOverlay","props","popupProps","emits","setup","context","emitEvent","useEmitEvent","emit","useDefault","currentVisible","rootClasses","computed","rootStyles","customStyle","zIndex","contentClasses","placement","contentTransitionName","transitionName","watch","value","val","cls","document","body","classList","add","remove","handleOverlayClick","closeOnOverlayClick","handleMove","e","lockScroll","preventDefault","afterLeave","afterEnter","ref","_createBlock","_Teleport","to","_ctx","disabled","_createElementVNode","class","_normalizeClass","$attrs","style","onTouchmove","_createVNode","_Transition","_component_t_overlay","_mergeProps","overlayProps","visible","transparent","showOverlay","onClick","onAfterEnter","onAfterLeave","_renderSlot","$slots"],"mappings":"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"}