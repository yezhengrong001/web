import { TdPopupProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: boolean;
    };
    customStyle: {
        type: StringConstructor;
        default: string;
    };
    lockScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    overlayProps: {
        type: PropType<object | undefined>;
        default: () => {};
    };
    placement: {
        type: PropType<"left" | "center" | "right" | "top" | "bottom" | undefined>;
        default: "left" | "center" | "right" | "top" | "bottom" | undefined;
        validator(val: TdPopupProps['placement']): boolean;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    to: StringConstructor;
    transitionName: {
        type: StringConstructor;
        default: string;
    };
    visible: {
        type: BooleanConstructor;
        default: undefined;
    };
    modelValue: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultVisible: BooleanConstructor;
    zIndex: {
        type: NumberConstructor;
    };
    onClose: PropType<(() => void) | undefined>;
    onClosed: PropType<(() => void) | undefined>;
    onOpen: PropType<(() => void) | undefined>;
    onOpened: PropType<(() => void) | undefined>;
    onVisibleChange: PropType<((visible: boolean, trigger: import("./type").PopupSource) => void) | undefined>;
};
export default _default;
