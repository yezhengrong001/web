import { TdTagProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    closable: BooleanConstructor;
    content: {
        type: PropType<string | number | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
        default: undefined;
    };
    maxWidth: {
        type: PropType<string | number | undefined>;
    };
    shape: {
        type: PropType<"mark" | "round" | "square" | undefined>;
        default: "mark" | "round" | "square" | undefined;
        validator(val: TdTagProps['shape']): boolean;
    };
    size: {
        type: PropType<import("../common").SizeEnum | undefined>;
        default: import("../common").SizeEnum | undefined;
        validator(val: TdTagProps['size']): boolean;
    };
    theme: {
        type: PropType<"default" | "primary" | "danger" | "success" | "warning" | undefined>;
        default: "default" | "primary" | "danger" | "success" | "warning" | undefined;
        validator(val: TdTagProps['theme']): boolean;
    };
    variant: {
        type: PropType<"outline" | "dark" | "light" | "light-outline" | undefined>;
        default: "outline" | "dark" | "light" | "light-outline" | undefined;
        validator(val: TdTagProps['variant']): boolean;
    };
    onClick: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
    onClose: PropType<((context: {
        e: MouseEvent;
    }) => void) | undefined>;
};
export default _default;
