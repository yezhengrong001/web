{"version":3,"file":"swiper.js","sources":["../../src/swiper/swiper.vue","../../src/swiper/swiper.vue?vue&type=template&id=2ac5cb78&lang.js"],"sourcesContent":["<template>\n  <div :style=\"{ height: `${height}px`, overflow: 'hidden' }\" :class=\"`${name}`\">\n    <div\n      ref=\"swiperContainer\"\n      :class=\"`${name}__container`\"\n      :style=\"{\n        height: `${height}px`,\n        flexDirection: direction === 'horizontal' ? 'row' : 'column',\n      }\"\n      @transitionend=\"handleAnimationEnd\"\n    >\n      <slot></slot>\n    </div>\n    <template v-if=\"navigation && state.showNavigation\">\n      <span v-if=\"direction === 'horizontal' && 'showSlideBtn' in navigation && navigation.showSlideBtn\">\n        <span :class=\"`${name}__btn btn-prev`\" @click=\"prev(1)\">\n          <chevron-left-icon size=\"20px\" />\n        </span>\n        <span :class=\"`${name}__btn btn-next`\" @click=\"next(1)\">\n          <chevron-right-icon size=\"20px\" />\n        </span>\n      </span>\n      <span\n        v-if=\"'type' in navigation\"\n        :class=\"`${name}__pagination ${name}__pagination-${\n          navigation.type || ''\n        } ${name}__pagination-${paginationPosition}`\"\n      >\n        <template v-if=\"['dots', 'dots-bar'].includes(navigation.type || '')\">\n          <span\n            v-for=\"(item, index) in state.children.length\"\n            :key=\"'page' + index\"\n            :class=\"{ [`${name}-dot`]: true, [`${name}-dot--active`]: index === state.activeIndex }\"\n          ></span>\n        </template>\n        <span v-if=\"navigation.type && navigation.type === 'fraction'\">\n          {{ showPageNum + '/' + state.children.length }}\n        </span>\n      </span>\n    </template>\n    <template v-else-if=\"computedNavigation !== undefined\">\n      <t-node :content=\"computedNavigation\" :style=\"{}\"></t-node>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  getCurrentInstance,\n  onMounted,\n  computed,\n  watch,\n  ref,\n  SetupContext,\n  nextTick,\n  provide,\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n} from 'vue';\nimport { ChevronLeftIcon, ChevronRightIcon } from 'tdesign-icons-vue-next';\nimport { useSwipe } from '@vueuse/core';\nimport SwiperProps from './props';\nimport config from '../config';\nimport { renderTNode, useDefault, TNode } from '../shared';\nimport { TdSwiperProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper`;\nconst setOffset = (element: HTMLDivElement, offset: number, direction = 'X'): void => {\n  // eslint-disable-next-line no-param-reassign\n  element.style.transform = `translate${direction}(${offset}px)`;\n};\nexport default defineComponent({\n  name,\n  components: { ChevronLeftIcon, ChevronRightIcon, TNode },\n  props: SwiperProps,\n  emits: ['change', 'update:current', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    // const emitEvent = useEmitEvent(props, context.emit);\n    const [swiperValue, setSwiperValue] = useDefault<Number, TdSwiperProps>(props, context.emit, 'current', 'change');\n    const self = getCurrentInstance();\n    const swiperContainer = ref<HTMLElement | null>(null);\n    const computedNavigation = computed(() => renderTNode(self, 'navigation'));\n    // const { height = 180, current = null } = props;\n    const height = props.height || 180;\n    const state: {\n      showNavigation: boolean;\n      activeIndex: number;\n      itemLength: number;\n      itemWidth: number;\n      isControl: boolean;\n      btnDisabled: boolean;\n      children: ComponentPublicInstance[];\n    } = reactive({\n      showNavigation: true,\n      activeIndex: 0,\n      itemLength: 0,\n      itemWidth: 0,\n      isControl: false,\n      btnDisabled: false,\n      children: [] as ComponentPublicInstance[],\n    });\n    const paginationList = computed(() => new Array(state.itemLength).fill(1));\n    const showPageNum = computed(() => {\n      const { activeIndex, itemLength } = state;\n      if (activeIndex > itemLength - 1) return itemLength;\n      if (activeIndex < 0) return 1;\n      return activeIndex + 1;\n    });\n    const childCount = computed(() => state.children.length);\n    const getContainer = (): HTMLDivElement => self?.proxy?.$el.querySelector(`.${name}__container`);\n    // const getContainer = (): HTMLDivElement => swiperContainer.value as any;\n    const initSwiper = () => {\n      const _swiperContainer = getContainer();\n      _swiperContainer.querySelectorAll('.copy-item').forEach((ele) => {\n        _swiperContainer.removeChild(ele);\n      });\n      const items = _swiperContainer.querySelectorAll(`.${name}-item`);\n      state.itemLength = _swiperContainer.children?.length || 0;\n      const itemWidth = _swiperContainer.querySelector(`.${name}-item`)?.getBoundingClientRect().width || 0;\n      state.itemWidth = itemWidth;\n      if (items.length <= 0) return false;\n      if (\n        computedNavigation.value &&\n        'minShowNum' in computedNavigation.value &&\n        items.length < computedNavigation.value.minShowNum\n      ) {\n        state.showNavigation = false;\n      }\n      if (props?.loop) {\n        const first = items[0].cloneNode(true) as HTMLDivElement;\n        first.classList.add('copy-item');\n        const last = items[items.length - 1].cloneNode(true) as HTMLDivElement;\n        last.classList.add('copy-item');\n        _swiperContainer.appendChild(first);\n        _swiperContainer.insertBefore(last, items[0]);\n      }\n      move(0);\n      startAutoplay();\n      if (typeof props.current === 'number') {\n        state.isControl = true;\n        next(props.current);\n      }\n    };\n    onMounted(() => {\n      nextTick(() => {\n        console.info('swiper mounted');\n        initSwiper();\n      });\n    });\n    watch(\n      () => state.children.length,\n      () => {\n        nextTick(() => {\n          console.info('swiper mounted');\n          initSwiper();\n        });\n      },\n    );\n    // eslint-disable-next-line no-undef\n    let autoplayTimer: number | NodeJS.Timeout | null = null;\n    let actionIsTrust = true;\n    /**\n     * move item\n     */\n    const move = (targetIndex: number, isTrust = true) => {\n      const _swiperContainer = getContainer();\n      const moveDirection = props?.direction === 'horizontal' ? 'X' : 'Y';\n      const moveLength: number = props?.direction === 'vertical' ? height : state.itemWidth;\n      actionIsTrust = isTrust;\n      _swiperContainer.dataset.isTrust = `${isTrust}`;\n      // do not translate one item if not loop\n      const toIndex = props?.loop ? targetIndex + 1 : targetIndex;\n      _swiperContainer.style.transform = `translate${moveDirection}(-${moveLength * toIndex}px)`;\n    };\n    const addAnimation = () => {\n      const _swiperContainer = getContainer();\n      _swiperContainer.style.transition = `transform ${props?.duration}ms`;\n    };\n    const removeAnimation = () => {\n      const _swiperContainer = getContainer();\n      _swiperContainer.style.transition = 'none';\n    };\n    const handleAnimationEnd = () => {\n      state.btnDisabled = false;\n      removeAnimation();\n      if (state.activeIndex >= state.itemLength) {\n        state.activeIndex = 0;\n        move(0);\n      }\n      if (state.activeIndex <= -1) {\n        state.activeIndex = state.itemLength - 1;\n        move(state.itemLength - 1);\n      }\n      setTimeout(() => {\n        actionIsTrust && emitCurrentChange(state.activeIndex);\n      }, 0);\n    };\n    const stopAutoplay = () => {\n      if (!autoplayTimer) return;\n      clearInterval(autoplayTimer as number);\n      autoplayTimer = null;\n    };\n    const startAutoplay = () => {\n      if (typeof props.current === 'number') return false;\n      if (!props?.autoplay || autoplayTimer !== null) return false; // stop repeat autoplay\n      autoplayTimer = setInterval(() => {\n        state.activeIndex += 1;\n        if (!props?.loop && state.activeIndex >= state.children.length - 1) {\n          state.activeIndex = 0;\n        }\n        if (!props?.loop && state.activeIndex <= 0) {\n          state.activeIndex = state.children.length - 1;\n        }\n        addAnimation();\n        move(state.activeIndex);\n      }, props?.interval);\n    };\n    const emitCurrentChange = (index: number) => {\n      // if (!state.isControl) return false;\n      let resultIndex = index;\n      if (index >= state.itemLength) resultIndex = 0;\n      if (index < 0) resultIndex = state.itemLength - 1;\n      // emitEvent('change', resultIndex);\n      setSwiperValue(resultIndex);\n    };\n    const prev = (step = 1) => {\n      const cannotMovePrev = !props?.loop && state.activeIndex === 0;\n      if (state.btnDisabled || cannotMovePrev) {\n        move(state.activeIndex);\n        return false;\n      }\n      stopAutoplay();\n      state.activeIndex -= step;\n      addAnimation();\n      move(state.activeIndex);\n      startAutoplay();\n      state.btnDisabled = true;\n    };\n    const next = (step = 1) => {\n      const cannotMoveLast = !props?.loop && state.activeIndex === state.itemLength - 1;\n      if (state.btnDisabled || cannotMoveLast) {\n        move(state.activeIndex);\n        return false;\n      }\n      stopAutoplay();\n      state.activeIndex += step;\n      addAnimation();\n      move(state.activeIndex);\n      startAutoplay();\n      state.btnDisabled = true;\n    };\n    const { lengthX, lengthY } = useSwipe(swiperContainer, {\n      passive: false,\n      onSwipeStart(e: TouchEvent) {\n        if (state.btnDisabled) return false;\n        stopAutoplay();\n      },\n      onSwipe(e: TouchEvent) {\n        if (state.btnDisabled) return false;\n        onTouchMove(e);\n      },\n      onSwipeEnd() {\n        onTouchEnd();\n      },\n    });\n    const onTouchMove = (event: TouchEvent) => {\n      event.preventDefault();\n      const { activeIndex, itemWidth } = state;\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n      const _container = getContainer();\n      removeAnimation();\n      const toIndex = props?.loop ? activeIndex + 1 : activeIndex;\n      if (props?.direction === 'horizontal') {\n        setOffset(_container, -(toIndex * itemWidth + distanceX));\n      } else {\n        const { height = 180 } = props;\n        setOffset(_container, -(toIndex * height + distanceY), 'Y');\n      }\n    };\n    const onTouchEnd = () => {\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n      addAnimation();\n      if (\n        (props?.direction === 'horizontal' && distanceX < -100) ||\n        (props?.direction === 'vertical' && distanceY < -100)\n      ) {\n        prev(1);\n      } else if (\n        (props?.direction === 'horizontal' && distanceX > 100) ||\n        (props?.direction === 'vertical' && distanceY > 100)\n      ) {\n        next(1);\n      } else {\n        move(state.activeIndex);\n      }\n      startAutoplay();\n    };\n    const relation = (child: ComponentInternalInstance) => {\n      if (child.proxy) {\n        state.children.push(child.proxy);\n      }\n    };\n    provide('parent', {\n      props,\n      relation,\n    });\n    watch(\n      () => props.current,\n      (newPage, oldPage) => {\n        if (state.isControl) {\n          state.activeIndex = newPage || 0;\n          addAnimation();\n          move(state.activeIndex, false);\n        }\n      },\n    );\n    return {\n      swiperContainer,\n      name,\n      computedNavigation,\n      onTouchMove,\n      onTouchEnd,\n      handleAnimationEnd,\n      state,\n      paginationList,\n      showPageNum,\n      prev,\n      next,\n    };\n  },\n});\n</script>\n","<template>\n  <div :style=\"{ height: `${height}px`, overflow: 'hidden' }\" :class=\"`${name}`\">\n    <div\n      ref=\"swiperContainer\"\n      :class=\"`${name}__container`\"\n      :style=\"{\n        height: `${height}px`,\n        flexDirection: direction === 'horizontal' ? 'row' : 'column',\n      }\"\n      @transitionend=\"handleAnimationEnd\"\n    >\n      <slot></slot>\n    </div>\n    <template v-if=\"navigation && state.showNavigation\">\n      <span v-if=\"direction === 'horizontal' && 'showSlideBtn' in navigation && navigation.showSlideBtn\">\n        <span :class=\"`${name}__btn btn-prev`\" @click=\"prev(1)\">\n          <chevron-left-icon size=\"20px\" />\n        </span>\n        <span :class=\"`${name}__btn btn-next`\" @click=\"next(1)\">\n          <chevron-right-icon size=\"20px\" />\n        </span>\n      </span>\n      <span\n        v-if=\"'type' in navigation\"\n        :class=\"`${name}__pagination ${name}__pagination-${\n          navigation.type || ''\n        } ${name}__pagination-${paginationPosition}`\"\n      >\n        <template v-if=\"['dots', 'dots-bar'].includes(navigation.type || '')\">\n          <span\n            v-for=\"(item, index) in state.children.length\"\n            :key=\"'page' + index\"\n            :class=\"{ [`${name}-dot`]: true, [`${name}-dot--active`]: index === state.activeIndex }\"\n          ></span>\n        </template>\n        <span v-if=\"navigation.type && navigation.type === 'fraction'\">\n          {{ showPageNum + '/' + state.children.length }}\n        </span>\n      </span>\n    </template>\n    <template v-else-if=\"computedNavigation !== undefined\">\n      <t-node :content=\"computedNavigation\" :style=\"{}\"></t-node>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  getCurrentInstance,\n  onMounted,\n  computed,\n  watch,\n  ref,\n  SetupContext,\n  nextTick,\n  provide,\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n} from 'vue';\nimport { ChevronLeftIcon, ChevronRightIcon } from 'tdesign-icons-vue-next';\nimport { useSwipe } from '@vueuse/core';\nimport SwiperProps from './props';\nimport config from '../config';\nimport { renderTNode, useDefault, TNode } from '../shared';\nimport { TdSwiperProps } from './type';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper`;\nconst setOffset = (element: HTMLDivElement, offset: number, direction = 'X'): void => {\n  // eslint-disable-next-line no-param-reassign\n  element.style.transform = `translate${direction}(${offset}px)`;\n};\nexport default defineComponent({\n  name,\n  components: { ChevronLeftIcon, ChevronRightIcon, TNode },\n  props: SwiperProps,\n  emits: ['change', 'update:current', 'update:modelValue'],\n  setup(props, context: SetupContext) {\n    // const emitEvent = useEmitEvent(props, context.emit);\n    const [swiperValue, setSwiperValue] = useDefault<Number, TdSwiperProps>(props, context.emit, 'current', 'change');\n    const self = getCurrentInstance();\n    const swiperContainer = ref<HTMLElement | null>(null);\n    const computedNavigation = computed(() => renderTNode(self, 'navigation'));\n    // const { height = 180, current = null } = props;\n    const height = props.height || 180;\n    const state: {\n      showNavigation: boolean;\n      activeIndex: number;\n      itemLength: number;\n      itemWidth: number;\n      isControl: boolean;\n      btnDisabled: boolean;\n      children: ComponentPublicInstance[];\n    } = reactive({\n      showNavigation: true,\n      activeIndex: 0,\n      itemLength: 0,\n      itemWidth: 0,\n      isControl: false,\n      btnDisabled: false,\n      children: [] as ComponentPublicInstance[],\n    });\n    const paginationList = computed(() => new Array(state.itemLength).fill(1));\n    const showPageNum = computed(() => {\n      const { activeIndex, itemLength } = state;\n      if (activeIndex > itemLength - 1) return itemLength;\n      if (activeIndex < 0) return 1;\n      return activeIndex + 1;\n    });\n    const childCount = computed(() => state.children.length);\n    const getContainer = (): HTMLDivElement => self?.proxy?.$el.querySelector(`.${name}__container`);\n    // const getContainer = (): HTMLDivElement => swiperContainer.value as any;\n    const initSwiper = () => {\n      const _swiperContainer = getContainer();\n      _swiperContainer.querySelectorAll('.copy-item').forEach((ele) => {\n        _swiperContainer.removeChild(ele);\n      });\n      const items = _swiperContainer.querySelectorAll(`.${name}-item`);\n      state.itemLength = _swiperContainer.children?.length || 0;\n      const itemWidth = _swiperContainer.querySelector(`.${name}-item`)?.getBoundingClientRect().width || 0;\n      state.itemWidth = itemWidth;\n      if (items.length <= 0) return false;\n      if (\n        computedNavigation.value &&\n        'minShowNum' in computedNavigation.value &&\n        items.length < computedNavigation.value.minShowNum\n      ) {\n        state.showNavigation = false;\n      }\n      if (props?.loop) {\n        const first = items[0].cloneNode(true) as HTMLDivElement;\n        first.classList.add('copy-item');\n        const last = items[items.length - 1].cloneNode(true) as HTMLDivElement;\n        last.classList.add('copy-item');\n        _swiperContainer.appendChild(first);\n        _swiperContainer.insertBefore(last, items[0]);\n      }\n      move(0);\n      startAutoplay();\n      if (typeof props.current === 'number') {\n        state.isControl = true;\n        next(props.current);\n      }\n    };\n    onMounted(() => {\n      nextTick(() => {\n        console.info('swiper mounted');\n        initSwiper();\n      });\n    });\n    watch(\n      () => state.children.length,\n      () => {\n        nextTick(() => {\n          console.info('swiper mounted');\n          initSwiper();\n        });\n      },\n    );\n    // eslint-disable-next-line no-undef\n    let autoplayTimer: number | NodeJS.Timeout | null = null;\n    let actionIsTrust = true;\n    /**\n     * move item\n     */\n    const move = (targetIndex: number, isTrust = true) => {\n      const _swiperContainer = getContainer();\n      const moveDirection = props?.direction === 'horizontal' ? 'X' : 'Y';\n      const moveLength: number = props?.direction === 'vertical' ? height : state.itemWidth;\n      actionIsTrust = isTrust;\n      _swiperContainer.dataset.isTrust = `${isTrust}`;\n      // do not translate one item if not loop\n      const toIndex = props?.loop ? targetIndex + 1 : targetIndex;\n      _swiperContainer.style.transform = `translate${moveDirection}(-${moveLength * toIndex}px)`;\n    };\n    const addAnimation = () => {\n      const _swiperContainer = getContainer();\n      _swiperContainer.style.transition = `transform ${props?.duration}ms`;\n    };\n    const removeAnimation = () => {\n      const _swiperContainer = getContainer();\n      _swiperContainer.style.transition = 'none';\n    };\n    const handleAnimationEnd = () => {\n      state.btnDisabled = false;\n      removeAnimation();\n      if (state.activeIndex >= state.itemLength) {\n        state.activeIndex = 0;\n        move(0);\n      }\n      if (state.activeIndex <= -1) {\n        state.activeIndex = state.itemLength - 1;\n        move(state.itemLength - 1);\n      }\n      setTimeout(() => {\n        actionIsTrust && emitCurrentChange(state.activeIndex);\n      }, 0);\n    };\n    const stopAutoplay = () => {\n      if (!autoplayTimer) return;\n      clearInterval(autoplayTimer as number);\n      autoplayTimer = null;\n    };\n    const startAutoplay = () => {\n      if (typeof props.current === 'number') return false;\n      if (!props?.autoplay || autoplayTimer !== null) return false; // stop repeat autoplay\n      autoplayTimer = setInterval(() => {\n        state.activeIndex += 1;\n        if (!props?.loop && state.activeIndex >= state.children.length - 1) {\n          state.activeIndex = 0;\n        }\n        if (!props?.loop && state.activeIndex <= 0) {\n          state.activeIndex = state.children.length - 1;\n        }\n        addAnimation();\n        move(state.activeIndex);\n      }, props?.interval);\n    };\n    const emitCurrentChange = (index: number) => {\n      // if (!state.isControl) return false;\n      let resultIndex = index;\n      if (index >= state.itemLength) resultIndex = 0;\n      if (index < 0) resultIndex = state.itemLength - 1;\n      // emitEvent('change', resultIndex);\n      setSwiperValue(resultIndex);\n    };\n    const prev = (step = 1) => {\n      const cannotMovePrev = !props?.loop && state.activeIndex === 0;\n      if (state.btnDisabled || cannotMovePrev) {\n        move(state.activeIndex);\n        return false;\n      }\n      stopAutoplay();\n      state.activeIndex -= step;\n      addAnimation();\n      move(state.activeIndex);\n      startAutoplay();\n      state.btnDisabled = true;\n    };\n    const next = (step = 1) => {\n      const cannotMoveLast = !props?.loop && state.activeIndex === state.itemLength - 1;\n      if (state.btnDisabled || cannotMoveLast) {\n        move(state.activeIndex);\n        return false;\n      }\n      stopAutoplay();\n      state.activeIndex += step;\n      addAnimation();\n      move(state.activeIndex);\n      startAutoplay();\n      state.btnDisabled = true;\n    };\n    const { lengthX, lengthY } = useSwipe(swiperContainer, {\n      passive: false,\n      onSwipeStart(e: TouchEvent) {\n        if (state.btnDisabled) return false;\n        stopAutoplay();\n      },\n      onSwipe(e: TouchEvent) {\n        if (state.btnDisabled) return false;\n        onTouchMove(e);\n      },\n      onSwipeEnd() {\n        onTouchEnd();\n      },\n    });\n    const onTouchMove = (event: TouchEvent) => {\n      event.preventDefault();\n      const { activeIndex, itemWidth } = state;\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n      const _container = getContainer();\n      removeAnimation();\n      const toIndex = props?.loop ? activeIndex + 1 : activeIndex;\n      if (props?.direction === 'horizontal') {\n        setOffset(_container, -(toIndex * itemWidth + distanceX));\n      } else {\n        const { height = 180 } = props;\n        setOffset(_container, -(toIndex * height + distanceY), 'Y');\n      }\n    };\n    const onTouchEnd = () => {\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n      addAnimation();\n      if (\n        (props?.direction === 'horizontal' && distanceX < -100) ||\n        (props?.direction === 'vertical' && distanceY < -100)\n      ) {\n        prev(1);\n      } else if (\n        (props?.direction === 'horizontal' && distanceX > 100) ||\n        (props?.direction === 'vertical' && distanceY > 100)\n      ) {\n        next(1);\n      } else {\n        move(state.activeIndex);\n      }\n      startAutoplay();\n    };\n    const relation = (child: ComponentInternalInstance) => {\n      if (child.proxy) {\n        state.children.push(child.proxy);\n      }\n    };\n    provide('parent', {\n      props,\n      relation,\n    });\n    watch(\n      () => props.current,\n      (newPage, oldPage) => {\n        if (state.isControl) {\n          state.activeIndex = newPage || 0;\n          addAnimation();\n          move(state.activeIndex, false);\n        }\n      },\n    );\n    return {\n      swiperContainer,\n      name,\n      computedNavigation,\n      onTouchMove,\n      onTouchEnd,\n      handleAnimationEnd,\n      state,\n      paginationList,\n      showPageNum,\n      prev,\n      next,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","setOffset","element","offset","direction","style","transform","defineComponent","components","ChevronLeftIcon","ChevronRightIcon","TNode","props","SwiperProps","emits","setup","context","useDefault","emit","swiperValue","setSwiperValue","self","getCurrentInstance","swiperContainer","ref","computedNavigation","computed","renderTNode","height","state","reactive","showNavigation","activeIndex","itemLength","itemWidth","isControl","btnDisabled","children","paginationList","Array","fill","showPageNum","childCount","length","getContainer","proxy","$el","querySelector","initSwiper","_swiperContainer","querySelectorAll","forEach","ele","removeChild","items","getBoundingClientRect","width","value","minShowNum","loop","first","cloneNode","classList","add","last","appendChild","insertBefore","move","startAutoplay","current","next","onMounted","nextTick","console","info","watch","autoplayTimer","actionIsTrust","targetIndex","isTrust","moveDirection","moveLength","dataset","toIndex","addAnimation","transition","duration","removeAnimation","handleAnimationEnd","setTimeout","emitCurrentChange","stopAutoplay","clearInterval","autoplay","setInterval","interval","index","resultIndex","prev","step","cannotMovePrev","cannotMoveLast","useSwipe","passive","onSwipeStart","e","onSwipe","onTouchMove","onSwipeEnd","onTouchEnd","lengthX","lengthY","event","preventDefault","distanceX","distanceY","_container","relation","child","push","provide","newPage","oldPage","_createElementBlock","_ctx","overflow","class","_createElementVNode","_normalizeStyle","onTransitionend","_renderSlot","$slots","_Fragment","key","navigation","showSlideBtn","_hoisted_1","onClick","$event","_createVNode","_component_chevron_left_icon","size","_component_chevron_right_icon","_normalizeClass","type","paginationPosition","includes","_renderList","item","_openBlock","_createBlock","_component_t_node","content"],"mappings":"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"}