declare const _default: import("vue").DefineComponent<{
    badgeProps: {
        type: import("vue").PropType<import("../badge").TdBadgeProps | undefined>;
    };
    description: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    text: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
}, {
    name: string;
    rootStyle: import("vue").ComputedRef<{
        flexBasis: string;
        flexDirection: "column" | "row";
        paddingLeft: string | number;
        paddingRight: string | number;
        alignItems: string;
        justifyContent: string;
        textAlign: any;
    } | {
        borderColor: any;
        borderWidth: any;
        borderStyle: any;
    }>;
    rootClass: import("vue").ComputedRef<(string | {
        [x: string]: any;
    })[]>;
    imgStyle: import("vue").ComputedRef<{
        width: string;
        height: string;
    }>;
    textStyle: import("vue").ComputedRef<{
        paddingLeft: string | number;
    }>;
    titleStyle: import("vue").ComputedRef<{
        paddingTop: string | number;
        marginBottom: string;
    }>;
    imageContent: import("vue").ComputedRef<any>;
    textContent: import("vue").ComputedRef<any>;
    descContent: import("vue").ComputedRef<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    badgeProps: {
        type: import("vue").PropType<import("../badge").TdBadgeProps | undefined>;
    };
    description: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
    layout: {
        type: import("vue").PropType<"vertical" | "horizontal" | undefined>;
        default: "vertical" | "horizontal" | undefined;
        validator(val: "vertical" | "horizontal" | undefined): boolean;
    };
    text: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue) | undefined>;
    };
}>>, {
    layout: "vertical" | "horizontal" | undefined;
}>;
export default _default;
